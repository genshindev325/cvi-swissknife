/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ETHVOLUSDCRebaser,
  ETHVOLUSDCRebaserInterface,
} from "../ETHVOLUSDCRebaser";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVolatilityToken",
        name: "_volatilityToken",
        type: "address",
      },
      {
        internalType: "contract IUniswapV2Pair[]",
        name: "_uniswapPairs",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
    signature:
      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  },
  {
    inputs: [],
    name: "enableWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
    signature: "0xcdfb2b4e",
  },
  {
    inputs: [],
    name: "lastUpkeepTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
    signature: "0xd3386809",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
    signature: "0x8da5cb5b",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pairs",
    outputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
    signature: "0xb91ac788",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rebasers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
    signature: "0xabd5b181",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
    signature: "0x715018a6",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
    signature: "0xf2fde38b",
  },
  {
    inputs: [],
    name: "upkeepInterval",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
    signature: "0x5a74373c",
  },
  {
    inputs: [],
    name: "upkeepTimeWindow",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
    signature: "0xe2dbc0e7",
  },
  {
    inputs: [],
    name: "volatilityToken",
    outputs: [
      {
        internalType: "contract IVolatilityToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
    signature: "0x95064101",
  },
  {
    inputs: [],
    name: "rebase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
    signature: "0xaf14052c",
  },
  {
    inputs: [
      {
        internalType: "contract IVolatilityToken",
        name: "_volatilityToken",
        type: "address",
      },
    ],
    name: "setVolatilityToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
    signature: "0xf372b42a",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Pair[]",
        name: "_uniswapPairs",
        type: "address[]",
      },
    ],
    name: "setUniswapPairs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
    signature: "0x98dfadab",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_upkeepInterval",
        type: "uint32",
      },
    ],
    name: "setUpkeepInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
    signature: "0x86a2b61e",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_upkeepTimeWindow",
        type: "uint32",
      },
    ],
    name: "setUpkeepTimeWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
    signature: "0xfc3db54e",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enableWhitelist",
        type: "bool",
      },
    ],
    name: "setEnableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
    signature: "0x78f9ccf2",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    name: "setRebaserAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
    signature: "0x817d6ae2",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
    signature: "0x6e04ff0d",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
    signature: "0x4585e33b",
  },
];

export class ETHVOLUSDCRebaser__factory {
  static readonly abi = _abi;
  static createInterface(): ETHVOLUSDCRebaserInterface {
    return new utils.Interface(_abi) as ETHVOLUSDCRebaserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETHVOLUSDCRebaser {
    return new Contract(address, _abi, signerOrProvider) as ETHVOLUSDCRebaser;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1820ImplementerUpgradeable,
  ERC1820ImplementerUpgradeableInterface,
} from "../../../../../../node_modules/@openzeppelin/contracts-upgradeable/build/contracts/ERC1820ImplementerUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610116806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063249cb3fa14602d575b600080fd5b603c603836600460a6565b604e565b60405190815260200160405180910390f35b60008281526001602090815260408083206001600160a01b038516845290915281205460ff16607d576000609f565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b9392505050565b6000806040838503121560b857600080fd5b8235915060208301356001600160a01b038116811460d557600080fd5b80915050925092905056fea264697066735822122008741b76d917c810746b709c554d6f1f1233c8ed7b83722d2a92f1db0ea2c13164736f6c63430008090033";

type ERC1820ImplementerUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1820ImplementerUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1820ImplementerUpgradeable__factory extends ContractFactory {
  constructor(...args: ERC1820ImplementerUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1820ImplementerUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC1820ImplementerUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1820ImplementerUpgradeable {
    return super.attach(address) as ERC1820ImplementerUpgradeable;
  }
  override connect(signer: Signer): ERC1820ImplementerUpgradeable__factory {
    return super.connect(signer) as ERC1820ImplementerUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1820ImplementerUpgradeableInterface {
    return new utils.Interface(_abi) as ERC1820ImplementerUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1820ImplementerUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1820ImplementerUpgradeable;
  }
}

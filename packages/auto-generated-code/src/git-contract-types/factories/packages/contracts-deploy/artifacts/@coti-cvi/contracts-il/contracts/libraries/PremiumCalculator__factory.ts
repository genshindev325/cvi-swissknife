/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PremiumCalculator,
  PremiumCalculatorInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-il/contracts/libraries/PremiumCalculator";

const _abi = [
  {
    inputs: [],
    name: "PRBMathSD59x18__AbsInputTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "PRBMathSD59x18__DivInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rAbs",
        type: "uint256",
      },
    ],
    name: "PRBMathSD59x18__DivOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "PRBMathSD59x18__MulInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rAbs",
        type: "uint256",
      },
    ],
    name: "PRBMathSD59x18__MulOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rAbs",
        type: "uint256",
      },
    ],
    name: "PRBMathSD59x18__PowuOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__ExpInputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lpTokensWorthAtBuyTimeUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "A",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "X0",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "C",
            type: "int256",
          },
        ],
        internalType: "struct PremiumParams",
        name: "premiumParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "cvi",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumGrowthStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumSlope",
        type: "uint256",
      },
    ],
    name: "calculatePremium",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61111e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063f5a6a39f1461003a575b600080fd5b61004d610048366004610f70565b61005f565b60405190815260200160405180910390f35b60008061006e888886866100cc565b905060008590506100be6100b78389604001516100a761009f60028d60200151886100999190611079565b90610105565b8c51906101cf565b6100b19190611020565b906101cf565b8b906101cf565b9a9950505050505050505050565b6000848484846100f86100f3826100ed856100e78989610294565b9061035a565b90610294565b6103a2565b9998505050505050505050565b600080610111846103ff565b9050600080846001161161012d57670de0b6b3a764000061012f565b815b9050600184901c5b801561016757610147838461043b565b9250600181161561015f5761015c828461043b565b91505b60011c610137565b6001600160ff1b0382111561019a576040516001624ea43360e01b03198152600481018390526024015b60405180910390fd5b600080871280156101ae5750856001166001145b9050806101bb57826101c4565b6101c4836110b8565b979650505050505050565b6000600160ff1b8314806101e65750600160ff1b82145b1561020457604051630d01a11b60e21b815260040160405180910390fd5b60008060008512610215578461021a565b846000035b91506000841261022a578361022f565b836000035b9050600061023d838361043b565b90506001600160ff1b0381111561026a5760405163bf79e8d960e01b815260048101829052602401610191565b6000198087139086138082186001146102835782610288565b826000035b98975050505050505050565b6000600160ff1b8314806102ab5750600160ff1b82145b156102c95760405163b3c754a360e01b815260040160405180910390fd5b600080600085126102da57846102df565b846000035b9150600084126102ef57836102f4565b836000035b9050600061030b83670de0b6b3a7640000846104fd565b90506001600160ff1b0381111561033857604051637cb4bef560e01b815260048101829052602401610191565b6000198087139086138082186001146103515782610288565b610288836110b8565b60008261037f57811561036e576000610378565b670de0b6b3a76400005b905061039c565b61039961039461038e856105d8565b846101cf565b6106b7565b90505b92915050565b6000680736ea4425c11ac63182106103d05760405163062bb40d60e31b815260048101839052602401610191565b6714057b7ef767814f82026103f8670de0b6b3a76400006706f05b59d3b20000830104610762565b9392505050565b6000600160ff1b82141561042657604051631d0742e360e21b815260040160405180910390fd5b60008212610434578161039c565b5060000390565b60008080600019848609848602925082811083820303915050670de0b6b3a7640000811061047f5760405163698d9a0160e11b815260048101829052602401610191565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826104b95780670de0b6b3a764000085040194505050505061039c565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b6000808060001985870985870292508281108382030391505080600014156105465783828161053c57634e487b7160e01b600052601260045260246000fd5b04925050506103f8565b83811061057057604051631dcf306360e21b81526004810182905260248101859052604401610191565b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b60008082136105fd5760405163309fa7dd60e11b815260048101839052602401610191565b6000670de0b6b3a7640000831261061657506001610630565b6000199050826ec097ce7bc90715b34b9f10000000000492505b6000610645670de0b6b3a76400008505610790565b670de0b6b3a7640000808202945090915084821d9081141561066957505002919050565b6706f05b59d3b200005b60008113156106ae57670de0b6b3a7640000828002059150671bc16d674ec8000082126106a6579384019360019190911d905b60011d610673565b50505002919050565b6000808212156107195768033dd1780914b97114198212156106db57506000919050565b6106e7826000036106b7565b6ec097ce7bc90715b34b9f10000000008161071257634e487b7160e01b600052601260045260246000fd5b0592915050565b680a688906bd8b00000082126107455760405163e69458f960e01b815260048101839052602401610191565b670de0b6b3a7640000604083901b046103f881610874565b919050565b6000680a688906bd8b000000821061074557604051634a4f26f160e01b815260048101839052602401610191565b6000600160801b82106107b057608091821c916107ad9082611061565b90505b6801000000000000000082106107d357604091821c916107d09082611061565b90505b64010000000082106107f257602091821c916107ef9082611061565b90505b62010000821061080f57601091821c9161080c9082611061565b90505b610100821061082b57600891821c916108289082611061565b90505b6010821061084657600491821c916108439082611061565b90505b6004821061086157600291821c9161085e9082611061565b90505b6002821061075d5761039c600182611061565b600160bf1b6780000000000000008216156108985768016a09e667f3bcc9090260401c5b6740000000000000008216156108b7576801306fe0a31b7152df0260401c5b6720000000000000008216156108d6576801172b83c7d517adce0260401c5b6710000000000000008216156108f55768010b5586cf9890f62a0260401c5b670800000000000000821615610914576801059b0d31585743ae0260401c5b67040000000000000082161561093357680102c9a3e778060ee70260401c5b6702000000000000008216156109525768010163da9fb33356d80260401c5b67010000000000000082161561097157680100b1afa5abcbed610260401c5b668000000000000082161561098f5768010058c86da1c09ea20260401c5b66400000000000008216156109ad576801002c605e2e8cec500260401c5b66200000000000008216156109cb57680100162f3904051fa10260401c5b66100000000000008216156109e9576801000b175effdc76ba0260401c5b6608000000000000821615610a0757680100058ba01fb9f96d0260401c5b6604000000000000821615610a255768010002c5cc37da94920260401c5b6602000000000000821615610a43576801000162e525ee05470260401c5b6601000000000000821615610a615768010000b17255775c040260401c5b65800000000000821615610a7e576801000058b91b5bc9ae0260401c5b65400000000000821615610a9b57680100002c5c89d5ec6d0260401c5b65200000000000821615610ab85768010000162e43f4f8310260401c5b65100000000000821615610ad557680100000b1721bcfc9a0260401c5b65080000000000821615610af25768010000058b90cf1e6e0260401c5b65040000000000821615610b0f576801000002c5c863b73f0260401c5b65020000000000821615610b2c57680100000162e430e5a20260401c5b65010000000000821615610b49576801000000b1721835510260401c5b648000000000821615610b6557680100000058b90c0b490260401c5b644000000000821615610b815768010000002c5c8601cc0260401c5b642000000000821615610b9d576801000000162e42fff00260401c5b641000000000821615610bb95768010000000b17217fbb0260401c5b640800000000821615610bd5576801000000058b90bfce0260401c5b640400000000821615610bf157680100000002c5c85fe30260401c5b640200000000821615610c0d5768010000000162e42ff10260401c5b640100000000821615610c2957680100000000b17217f80260401c5b6380000000821615610c445768010000000058b90bfc0260401c5b6340000000821615610c5f576801000000002c5c85fe0260401c5b6320000000821615610c7a57680100000000162e42ff0260401c5b6310000000821615610c95576801000000000b17217f0260401c5b6308000000821615610cb057680100000000058b90c00260401c5b6304000000821615610ccb5768010000000002c5c8600260401c5b6302000000821615610ce6576801000000000162e4300260401c5b6301000000821615610d015768010000000000b172180260401c5b62800000821615610d1b576801000000000058b90c0260401c5b62400000821615610d3557680100000000002c5c860260401c5b62200000821615610d4f5768010000000000162e430260401c5b62100000821615610d6957680100000000000b17210260401c5b62080000821615610d835768010000000000058b910260401c5b62040000821615610d9d576801000000000002c5c80260401c5b62020000821615610db757680100000000000162e40260401c5b62010000821615610dd1576801000000000000b1720260401c5b618000821615610dea57680100000000000058b90260401c5b614000821615610e035768010000000000002c5d0260401c5b612000821615610e1c576801000000000000162e0260401c5b611000821615610e355768010000000000000b170260401c5b610800821615610e4e576801000000000000058c0260401c5b610400821615610e6757680100000000000002c60260401c5b610200821615610e8057680100000000000001630260401c5b610100821615610e9957680100000000000000b10260401c5b6080821615610eb157680100000000000000590260401c5b6040821615610ec9576801000000000000002c0260401c5b6020821615610ee157680100000000000000160260401c5b6010821615610ef9576801000000000000000b0260401c5b6008821615610f1157680100000000000000060260401c5b6004821615610f2957680100000000000000030260401c5b6002821615610f4157680100000000000000010260401c5b6001821615610f5957680100000000000000010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6000806000806000806000878903610120811215610f8c578384fd5b8835975060208901359650604089013595506060605f1982011215610faf578384fd5b506040516060810181811067ffffffffffffffff82111715610fdf57634e487b7160e01b85526041600452602485fd5b604090815260608a0135825260808a0135602083015260a08a0135908201529699959850939660c08101359560e08201359550610100909101359350915050565b600080821280156001600160ff1b0384900385131615611042576110426110d2565b600160ff1b839003841281161561105b5761105b6110d2565b50500190565b60008219821115611074576110746110d2565b500190565b60008083128015600160ff1b850184121615611097576110976110d2565b6001600160ff1b03840183138116156110b2576110b26110d2565b50500390565b6000600160ff1b8214156110ce576110ce6110d2565b0390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212201eb5ebd7a78dd31d1ea0969c95c176aed953dfbe3798c4fd6665650ec2cdf7dc64736f6c63430008040033";

type PremiumCalculatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PremiumCalculatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PremiumCalculator__factory extends ContractFactory {
  constructor(...args: PremiumCalculatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PremiumCalculator> {
    return super.deploy(overrides || {}) as Promise<PremiumCalculator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PremiumCalculator {
    return super.attach(address) as PremiumCalculator;
  }
  override connect(signer: Signer): PremiumCalculator__factory {
    return super.connect(signer) as PremiumCalculator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PremiumCalculatorInterface {
    return new utils.Interface(_abi) as PremiumCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PremiumCalculator {
    return new Contract(address, _abi, signerOrProvider) as PremiumCalculator;
  }
}

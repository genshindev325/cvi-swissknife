/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CVIUSDCThetaVaultRequestFulfiller2X,
  CVIUSDCThetaVaultRequestFulfiller2XInterface,
} from "../../../../../../../packages/contracts-deploy/artifacts/contracts/theta-vault/ThetaVaultRequestFulfillerContracts.sol/CVIUSDCThetaVaultRequestFulfiller2X";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DEPOSIT_REQUEST_TYPE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WITHDRAW_REQUEST_TYPE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enableWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fulfillers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRequestManager",
        name: "_requestManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestManager",
    outputs: [
      {
        internalType: "contract IRequestManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enableWhitelist",
        type: "bool",
      },
    ],
    name: "setEnableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    name: "setFulfillerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRequestManager",
        name: "_requestManager",
        type: "address",
      },
    ],
    name: "setRequestManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type CVIUSDCThetaVaultRequestFulfiller2XConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CVIUSDCThetaVaultRequestFulfiller2XConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CVIUSDCThetaVaultRequestFulfiller2X__factory extends ContractFactory {
  constructor(...args: CVIUSDCThetaVaultRequestFulfiller2XConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CVIUSDCThetaVaultRequestFulfiller2X> {
    return super.deploy(
      overrides || {}
    ) as Promise<CVIUSDCThetaVaultRequestFulfiller2X>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CVIUSDCThetaVaultRequestFulfiller2X {
    return super.attach(address) as CVIUSDCThetaVaultRequestFulfiller2X;
  }
  override connect(
    signer: Signer
  ): CVIUSDCThetaVaultRequestFulfiller2X__factory {
    return super.connect(
      signer
    ) as CVIUSDCThetaVaultRequestFulfiller2X__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CVIUSDCThetaVaultRequestFulfiller2XInterface {
    return new utils.Interface(
      _abi
    ) as CVIUSDCThetaVaultRequestFulfiller2XInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CVIUSDCThetaVaultRequestFulfiller2X {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CVIUSDCThetaVaultRequestFulfiller2X;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CVIUSDCLiquidation,
  CVIUSDCLiquidationInterface,
} from "../../../../../../../packages/contracts-deploy/artifacts/contracts/platform/LiquiditationContracts.sol/CVIUSDCLiquidation";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_maxCVIValue",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "LIQUIDATION_MAX_FEE_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_positionBalance",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPositive",
        type: "bool",
      },
      {
        internalType: "uint168",
        name: "_positionUnitsAmount",
        type: "uint168",
      },
      {
        internalType: "uint32",
        name: "_openCVIValue",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "_leverage",
        type: "uint8",
      },
    ],
    name: "getLiquidationReward",
    outputs: [
      {
        internalType: "uint256",
        name: "finderFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_positionBalance",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPositive",
        type: "bool",
      },
      {
        internalType: "uint168",
        name: "_positionUnitsAmount",
        type: "uint168",
      },
      {
        internalType: "uint32",
        name: "_openCVIValue",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "_leverage",
        type: "uint8",
      },
    ],
    name: "isLiquidationCandidate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "liquidationMaxRewardPercents",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationMinRewardPercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "liquidationMinThresholdPercents",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCVIValue",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[8]",
        name: "_newMaxRewardPercents",
        type: "uint16[8]",
      },
    ],
    name: "setMaxLiquidationRewardPercents",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_newMinRewardPercent",
        type: "uint16",
      },
    ],
    name: "setMinLiquidationRewardPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[8]",
        name: "_newMinThresholdPercents",
        type: "uint16[8]",
      },
    ],
    name: "setMinLiquidationThresholdPercents",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6000805461ffff60a01b1916600560a01b1790556101806040526032608081815260a091909152606460c081905260e05260966101008190526101205260c861014081905261016052620000589060019060086200015c565b506040805161010081018252601e80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152620000aa9060029060086200015c565b50348015620000b857600080fd5b5060405162000ee838038062000ee8833981016040819052620000db916200020f565b61ffff8116620000eb336200010c565b6003805463ffffffff191663ffffffff92909216919091179055506200023a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600183019183908215620001e65791602002820160005b83821115620001b457835183826101000a81548161ffff021916908360ff160217905550926020019260020160208160010104928301926001030262000173565b8015620001e45782816101000a81549061ffff0219169055600201602081600101049283019260010302620001b4565b505b50620001f4929150620001f8565b5090565b5b80821115620001f45760008155600101620001f9565b60006020828403121562000221578081fd5b815161ffff8116811462000233578182fd5b9392505050565b610c9e806200024a6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063b191ad2d1161008c578063c9dc245011610066578063c9dc2450146101b6578063d934c20b146101bf578063e19cc3a7146101e4578063f2fde38b146101f757600080fd5b8063b191ad2d1461016d578063b76f61c71461018e578063c5e686bc146101a157600080fd5b806307b6ef92146100d45780633e670229146100ff578063715018a6146101225780638da5cb5b1461012c57806398d3bc6414610147578063af1681301461015a575b600080fd5b6100e76100e2366004610a7e565b61020a565b60405161ffff90911681526020015b60405180910390f35b61011261010d366004610a96565b610238565b60405190151581526020016100f6565b61012a6102c3565b005b6000546040516001600160a01b0390911681526020016100f6565b6100e7610155366004610a7e565b610302565b61012a610168366004610a33565b610312565b61018061017b366004610a96565b610430565b6040519081526020016100f6565b61012a61019c366004610a33565b61053d565b6000546100e790600160a01b900461ffff1681565b6101806103e881565b6003546101cf9063ffffffff1681565b60405163ffffffff90911681526020016100f6565b61012a6101f2366004610a5c565b6106e3565b61012a610205366004610a05565b6107e0565b6002816008811061021a57600080fd5b60109182820401919006600202915054906101000a900461ffff1681565b60008061024685858561087b565b90508515806102b657506103e8600161025f8186610bfe565b60ff166008811061028057634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff16826102a99190610bb7565b6102b39190610b74565b87105b9150505b95945050505050565b6000546001600160a01b031633146102f65760405162461bcd60e51b81526004016102ed90610b19565b60405180910390fd5b6103006000610906565b565b6001816008811061021a57600080fd5b6000546001600160a01b0316331461033c5760405162461bcd60e51b81526004016102ed90610b19565b60005b600881101561041e576002816008811061036957634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff168282600881106103a757634e487b7160e01b600052603260045260246000fd5b6020020160208101906103ba9190610a5c565b61ffff16101561040c5760405162461bcd60e51b815260206004820152601c60248201527f5468726573686f6c64206c657373207468616e20736f6d65206d61780000000060448201526064016102ed565b8061041681610c21565b91505061033f565b5061042c6001826008610956565b5050565b600061043f8686868686610238565b61044b575060006102ba565b600061045885858561087b565b60008054919250906103e89061047990600160a01b900461ffff1684610bb7565b6104839190610b74565b905086158061049157508088105b1561049f5791506102ba9050565b60006103e860026104b1600188610bfe565b60ff16600881106104d257634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff16846104fb9190610bb7565b6105059190610b74565b90508780156105145750818910155b80156105205750808911155b1561052d57889350610531565b8093505b50505095945050505050565b6000546001600160a01b031633146105675760405162461bcd60e51b81526004016102ed90610b19565b60005b60088110156106d5576001816008811061059457634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff168282600881106105d257634e487b7160e01b600052603260045260246000fd5b6020020160208101906105e59190610a5c565b61ffff1611156106375760405162461bcd60e51b815260206004820152601f60248201527f536f6d65206d61782067726561746572207468616e207468726573686f6c640060448201526064016102ed565b600054600160a01b900461ffff1682826008811061066557634e487b7160e01b600052603260045260246000fd5b6020020160208101906106789190610a5c565b61ffff1610156106c35760405162461bcd60e51b815260206004820152601660248201527529b7b6b29036b0bc103632b9b9903a3430b71036b4b760511b60448201526064016102ed565b806106cd81610c21565b91505061056a565b5061042c6002826008610956565b6000546001600160a01b0316331461070d5760405162461bcd60e51b81526004016102ed90610b19565b60005b60088110156107bd576002816008811061073a57634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff168261ffff1611156107ab5760405162461bcd60e51b815260206004820152601960248201527f4d696e2067726561746572207468616e20736f6d65206d61780000000000000060448201526064016102ed565b806107b581610c21565b915050610710565b506000805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b6000546001600160a01b0316331461080a5760405162461bcd60e51b81526004016102ed90610b19565b6001600160a01b03811661086f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ed565b61087881610906565b50565b600060ff821661088c600184610bfe565b60035460ff919091169063ffffffff908116906108ab90871688610b88565b6108b59190610b4e565b6108bf9190610b88565b6108c99190610b4e565b60035463ffffffff908116906108e190861687610b88565b6108eb9190610b4e565b6108f59190610bd6565b6001600160a81b0316949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001830191839082156109e05791602002820160005b838211156109b057833561ffff1683826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030261096c565b80156109de5782816101000a81549061ffff02191690556002016020816001010492830192600103026109b0565b505b506109ec9291506109f0565b5090565b5b808211156109ec57600081556001016109f1565b600060208284031215610a16578081fd5b81356001600160a01b0381168114610a2c578182fd5b9392505050565b6000610100808385031215610a46578182fd5b838184011115610a54578182fd5b509092915050565b600060208284031215610a6d578081fd5b813561ffff81168114610a2c578182fd5b600060208284031215610a8f578081fd5b5035919050565b600080600080600060a08688031215610aad578081fd5b8535945060208601358015158114610ac3578182fd5b935060408601356001600160a81b0381168114610ade578182fd5b9250606086013563ffffffff81168114610af6578182fd5b9150608086013560ff81168114610b0b578182fd5b809150509295509295909350565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006001600160a81b0383811680610b6857610b68610c52565b92169190910492915050565b600082610b8357610b83610c52565b500490565b60006001600160a81b0382811684821681151582840482111615610bae57610bae610c3c565b02949350505050565b6000816000190483118215151615610bd157610bd1610c3c565b500290565b60006001600160a81b0383811690831681811015610bf657610bf6610c3c565b039392505050565b600060ff821660ff841680821015610c1857610c18610c3c565b90039392505050565b6000600019821415610c3557610c35610c3c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220e108e84b09e55f984c80e372ed1806591e67968b266af8231299aee723ec7abd64736f6c63430008040033";

type CVIUSDCLiquidationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CVIUSDCLiquidationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CVIUSDCLiquidation__factory extends ContractFactory {
  constructor(...args: CVIUSDCLiquidationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxCVIValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CVIUSDCLiquidation> {
    return super.deploy(
      _maxCVIValue,
      overrides || {}
    ) as Promise<CVIUSDCLiquidation>;
  }
  override getDeployTransaction(
    _maxCVIValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_maxCVIValue, overrides || {});
  }
  override attach(address: string): CVIUSDCLiquidation {
    return super.attach(address) as CVIUSDCLiquidation;
  }
  override connect(signer: Signer): CVIUSDCLiquidation__factory {
    return super.connect(signer) as CVIUSDCLiquidation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CVIUSDCLiquidationInterface {
    return new utils.Interface(_abi) as CVIUSDCLiquidationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CVIUSDCLiquidation {
    return new Contract(address, _abi, signerOrProvider) as CVIUSDCLiquidation;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ITokenPairRepository,
  ITokenPairRepositoryInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-il/contracts/interfaces/ITokenPairRepository";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "token1Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "token2Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "prevValue",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "newValue",
        type: "uint16",
      },
    ],
    name: "CollateralCapComponentChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ILProtectionConfigInterface",
        name: "prevValue",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract ILProtectionConfigInterface",
        name: "newValue",
        type: "address",
      },
    ],
    name: "ILProtectionConfigChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token1Symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "token2Symbol",
            type: "string",
          },
          {
            internalType: "contract AggregatorV3Interface",
            name: "token1PriceAggregator",
            type: "address",
          },
          {
            internalType: "contract AggregatorV3Interface",
            name: "token2PriceAggregator",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct TokenPair",
        name: "prevValue",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "token1Symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "token2Symbol",
            type: "string",
          },
          {
            internalType: "contract AggregatorV3Interface",
            name: "token1PriceAggregator",
            type: "address",
          },
          {
            internalType: "contract AggregatorV3Interface",
            name: "token2PriceAggregator",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct TokenPair",
        name: "newValue",
        type: "tuple",
      },
    ],
    name: "PairSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "token1Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "token2Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "policyPeriod",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "A",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "X0",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "C",
            type: "int256",
          },
        ],
        indexed: false,
        internalType: "struct PremiumParams",
        name: "prevValue",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "A",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "X0",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "C",
            type: "int256",
          },
        ],
        indexed: false,
        internalType: "struct PremiumParams",
        name: "newValue",
        type: "tuple",
      },
    ],
    name: "PremiumParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "token1Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "token2Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "policyPeriod",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "A",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "X0",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "C",
            type: "int256",
          },
        ],
        indexed: false,
        internalType: "struct PremiumParams",
        name: "deletedParams",
        type: "tuple",
      },
    ],
    name: "PremiumParamsDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "prevValue",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "newValue",
        type: "uint8",
      },
    ],
    name: "PriceTokenDecimalsChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token1Symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_token2Symbol",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "_policyPeriods",
        type: "uint256[]",
      },
    ],
    name: "deletePremiumsParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token1Symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_token2Symbol",
        type: "string",
      },
    ],
    name: "getCollateralCapComponent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token1Symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_token2Symbol",
        type: "string",
      },
    ],
    name: "getOrderedTokenPairIfExists",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token1Symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "token2Symbol",
            type: "string",
          },
          {
            internalType: "contract AggregatorV3Interface",
            name: "token1PriceAggregator",
            type: "address",
          },
          {
            internalType: "contract AggregatorV3Interface",
            name: "token2PriceAggregator",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct TokenPair",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token1Symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_token2Symbol",
        type: "string",
      },
    ],
    name: "getPair",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token1Symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "token2Symbol",
            type: "string",
          },
          {
            internalType: "contract AggregatorV3Interface",
            name: "token1PriceAggregator",
            type: "address",
          },
          {
            internalType: "contract AggregatorV3Interface",
            name: "token2PriceAggregator",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct TokenPair",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPairs",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token1Symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "token2Symbol",
            type: "string",
          },
          {
            internalType: "contract AggregatorV3Interface",
            name: "token1PriceAggregator",
            type: "address",
          },
          {
            internalType: "contract AggregatorV3Interface",
            name: "token2PriceAggregator",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct TokenPair[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token1Symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_token2Symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_policyPeriod",
        type: "uint256",
      },
    ],
    name: "getPremiumParams",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "A",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "X0",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "C",
            type: "int256",
          },
        ],
        internalType: "struct PremiumParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token1Symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_token2Symbol",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_isFirstTokenPrice",
        type: "bool",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceTokenDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protectionConfig",
    outputs: [
      {
        internalType: "contract ILProtectionConfigInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token1Symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_token2Symbol",
        type: "string",
      },
      {
        internalType: "uint16",
        name: "_collateralCapComponent",
        type: "uint16",
      },
    ],
    name: "setCollateralCapComponent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILProtectionConfigInterface",
        name: "_newInstance",
        type: "address",
      },
    ],
    name: "setILProtectionConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token1Symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_token2Symbol",
        type: "string",
      },
      {
        internalType: "contract AggregatorV3Interface",
        name: "_token1PriceAggregator",
        type: "address",
      },
      {
        internalType: "contract AggregatorV3Interface",
        name: "_token2PriceAggregator",
        type: "address",
      },
    ],
    name: "setPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token1Symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_token2Symbol",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "_policyPeriods",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "A",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "X0",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "C",
            type: "int256",
          },
        ],
        internalType: "struct PremiumParams[]",
        name: "_premiumsParams",
        type: "tuple[]",
      },
    ],
    name: "setPremiumsParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_priceTokenDecimals",
        type: "uint8",
      },
    ],
    name: "setPriceTokenDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ITokenPairRepository__factory {
  static readonly abi = _abi;
  static createInterface(): ITokenPairRepositoryInterface {
    return new utils.Interface(_abi) as ITokenPairRepositoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITokenPairRepository {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ITokenPairRepository;
  }
}

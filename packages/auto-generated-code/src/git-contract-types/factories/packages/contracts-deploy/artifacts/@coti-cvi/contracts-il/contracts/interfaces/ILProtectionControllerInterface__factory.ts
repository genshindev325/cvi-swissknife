/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILProtectionControllerInterface,
  ILProtectionControllerInterfaceInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-il/contracts/interfaces/ILProtectionControllerInterface";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "token1Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "token2Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protectionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prevPairCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPairCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prevCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prevLiquidity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLiquidity",
        type: "uint256",
      },
    ],
    name: "CollateralUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ILProtectionDiscountNFTControllerInterface",
        name: "prevValue",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract ILProtectionDiscountNFTControllerInterface",
        name: "newValue",
        type: "address",
      },
    ],
    name: "ILProtectionDiscountNFTControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "MaxProtectionsInUpkeepChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protectionStartTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protectionEndTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premiumCostUSD",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "token1Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "token2Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "policyPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token1EntryPriceUSD",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token2EntryPriceUSD",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
    ],
    name: "ProtectionBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountPaidUSD",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protectionStartTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protectionEndTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premiumCostUSD",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "token1Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "token2Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "policyPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token1EndPriceUSD",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token2EndPriceUSD",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
    ],
    name: "ProtectionClosed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token1Symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_token2Symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_lpTokensWorthAtBuyTimeUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxPremiumCostUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_policyPeriod",
        type: "uint256",
      },
    ],
    name: "buyProtection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lpTokensWorthAtBuyTimeUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_token1EntryPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_token2EntryPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_token1EndPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_token2EndPrice",
        type: "uint256",
      },
    ],
    name: "calcAmountToBePaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_protectionId",
        type: "uint256",
      },
    ],
    name: "calcAmountToBePaidWithProtectionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lpTokensWorthAtBuyTimeUSD",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_expectedLPTokensValueGrowth",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "_impermanentLoss",
        type: "uint16",
      },
    ],
    name: "calcEstimatedAmountToBePaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token1Symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_token2Symbol",
        type: "string",
      },
    ],
    name: "calcMaxValueOfTokensWorthToProtect",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lpTokensWorthAtBuyTimeUSD",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_feeComponent",
        type: "uint16",
      },
    ],
    name: "calculateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_token1EntryPriceUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_token2EntryPriceUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_token1EndPriceUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_token2EndPriceUSD",
        type: "uint256",
      },
    ],
    name: "calculateIL",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_protectionId",
        type: "uint256",
      },
    ],
    name: "calculateOpenProtectionIL",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lpTokensWorthAtBuyTimeUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalLPTokensWorthAtBuyTimeUSD",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_expectedLPTokensValueGrowth",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_liquidity",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_impermanentLoss",
        type: "uint16",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "A",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "X0",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "C",
            type: "int256",
          },
        ],
        internalType: "struct PremiumParams",
        name: "_premiumParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_cvi",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_initialGlobalPremiumParam",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxGlobalPremiumParam",
        type: "uint256",
      },
    ],
    name: "calculateParameterizedPremium",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_token1Symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_token2Symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_lpTokensWorthAtBuyTimeUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_policyPeriod",
        type: "uint256",
      },
    ],
    name: "calculatePremiumDetailsAndMaxAmountToBePaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "enum DiscountNFTType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_checkData",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_protectionsIds",
        type: "uint256[]",
      },
    ],
    name: "closeProtections",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cumulativeSumLPTokensWorthAtBuyTimeUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cviOracle",
    outputs: [
      {
        internalType: "contract CVIOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFinalizedProtectionsIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityController",
    outputs: [
      {
        internalType: "contract ILiquidityController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protectionConfig",
    outputs: [
      {
        internalType: "contract ILProtectionConfigInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protectionDiscountNFTController",
    outputs: [
      {
        internalType: "contract ILProtectionDiscountNFTControllerInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protectionNFT",
    outputs: [
      {
        internalType: "contract ILProtectionNFTInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILProtectionDiscountNFTControllerInterface",
        name: "_newInstance",
        type: "address",
      },
    ],
    name: "setILProtectionDiscountNFTController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_maxILProtected",
        type: "uint16",
      },
    ],
    name: "setMaxILProtected",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_maxProtectionsInUpkeep",
        type: "uint8",
      },
    ],
    name: "setMaxProtectionsInUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPairRepository",
    outputs: [
      {
        internalType: "contract ITokenPairRepository",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLPTokensWorthAtBuyTimeUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ILProtectionControllerInterface__factory {
  static readonly abi = _abi;
  static createInterface(): ILProtectionControllerInterfaceInterface {
    return new utils.Interface(
      _abi
    ) as ILProtectionControllerInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILProtectionControllerInterface {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ILProtectionControllerInterface;
  }
}

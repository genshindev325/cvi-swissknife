/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IThetaVault,
  IThetaVaultInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalUSDCAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "platformLiquidityAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dexVolTokenUSDCAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dexVolTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dexUSDCAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintedThetaTokens",
        type: "uint256",
      },
    ],
    name: "FulfillDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalUSDCAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "platformLiquidityAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dexVolTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dexUSDCVolTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dexUSDCAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "burnedThetaTokens",
        type: "uint256",
      },
    ],
    name: "FulfillWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "requestType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "LiquidateRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "requestType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "targetTimestamp",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalUSDCBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    name: "SubmitRequest",
    type: "event",
  },
  {
    inputs: [],
    name: "extraLiqidityPercentage",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "fulfillDepositRequest",
    outputs: [
      {
        internalType: "uint256",
        name: "thetaTokensMinted",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "fulfillWithdrawRequest",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenWithdrawnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "volTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdcAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "liquidateRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minDexPercentageAllowed",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "uint8",
        name: "requestType",
        type: "uint8",
      },
      {
        internalType: "uint168",
        name: "tokenAmount",
        type: "uint168",
      },
      {
        internalType: "uint32",
        name: "targetTimestamp",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "shouldStake",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newDepositCap",
        type: "uint256",
      },
    ],
    name: "setDepositCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newDepositHoldingsPercentage",
        type: "uint16",
      },
    ],
    name: "setDepositHoldings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFulfiller",
        type: "address",
      },
    ],
    name: "setFulfiller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newExtraLiquidityPercentage",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "minDexPercentageAllowed",
        type: "uint16",
      },
    ],
    name: "setLiquidityPercentages",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMinDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMinWithdrawAmount",
        type: "uint256",
      },
    ],
    name: "setMinAmounts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newMinPoolSkewPercentage",
        type: "uint16",
      },
    ],
    name: "setMinPoolSkew",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newLockupPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newLiquidationPeriod",
        type: "uint256",
      },
    ],
    name: "setPeriods",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRequestDelay",
        type: "uint256",
      },
    ],
    name: "setRequestDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRewardRouter",
        name: "rewardRouter",
        type: "address",
      },
    ],
    name: "setRewardRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint168",
        name: "tokenAmount",
        type: "uint168",
      },
    ],
    name: "submitDepositRequest",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint168",
        name: "thetaTokenAmount",
        type: "uint168",
      },
    ],
    name: "submitWithdrawRequest",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdcPlatformLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "intrinsicDEXVolTokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "volTokenPositionBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dexUSDCAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dexVolTokensAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVaultLeveragedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultPositionUnits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "volToken",
    outputs: [
      {
        internalType: "contract IVolatilityToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IThetaVault__factory {
  static readonly abi = _abi;
  static createInterface(): IThetaVaultInterface {
    return new utils.Interface(_abi) as IThetaVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IThetaVault {
    return new Contract(address, _abi, signerOrProvider) as IThetaVault;
  }
}

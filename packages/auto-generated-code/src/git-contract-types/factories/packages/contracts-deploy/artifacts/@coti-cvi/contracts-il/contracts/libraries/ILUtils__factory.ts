/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ILUtils,
  ILUtilsInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-il/contracts/libraries/ILUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "token1EntryPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token2EntryPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1EndPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token2EndPrice",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "maxPrecision",
        type: "uint16",
      },
    ],
    name: "calculateIL",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61054861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80635c441f011461003a575b600080fd5b61004d61004836600461043c565b610064565b60405161ffff909116815260200160405180910390f35b60008061007187876100fd565b9050600061007f86866100fd565b9050600061008d83836100fd565b90506100a561ffff8616670de0b6b3a76400006104a6565b6100c96100ba670de0b6b3a76400008461048e565b6100c384610119565b906100fd565b6100d49060026104c6565b6100e690670de0b6b3a76400006104e5565b6100f091906104a6565b9998505050505050505050565b600061011283670de0b6b3a764000084610176565b9392505050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2182111561015d57604051636155b67d60e01b8152600481018390526024015b60405180910390fd5b610170670de0b6b3a76400008302610251565b92915050565b6000808060001985870985870292508281108382030391505080600014156101bf578382816101b557634e487b7160e01b600052601260045260246000fd5b0492505050610112565b8381106101e957604051631dcf306360e21b81526004810182905260248101859052604401610154565b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b60008161026057506000919050565b50600181600160801b811061027a5760409190911b9060801c5b6801000000000000000081106102955760209190911b9060401c5b64010000000081106102ac5760109190911b9060201c5b6201000081106102c15760089190911b9060101c5b61010081106102d55760049190911b9060081c5b601081106102e85760029190911b9060041c5b600881106102f857600182901b91505b600182848161031757634e487b7160e01b600052601260045260246000fd5b048301901c9150600182848161033d57634e487b7160e01b600052601260045260246000fd5b048301901c9150600182848161036357634e487b7160e01b600052601260045260246000fd5b048301901c9150600182848161038957634e487b7160e01b600052601260045260246000fd5b048301901c915060018284816103af57634e487b7160e01b600052601260045260246000fd5b048301901c915060018284816103d557634e487b7160e01b600052601260045260246000fd5b048301901c915060018284816103fb57634e487b7160e01b600052601260045260246000fd5b048301901c9150600082848161042157634e487b7160e01b600052601260045260246000fd5b049050808310156104325782610434565b805b949350505050565b600080600080600060a08688031215610453578081fd5b85359450602086013593506040860135925060608601359150608086013561ffff81168114610480578182fd5b809150509295509295909350565b600082198211156104a1576104a16104fc565b500190565b6000826104c157634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156104e0576104e06104fc565b500290565b6000828210156104f7576104f76104fc565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a39a7e69ddeebedc273d18ce4bc6e2ebb00d5f8f793d74083f26473ce14d666264736f6c63430008040033";

type ILUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ILUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ILUtils__factory extends ContractFactory {
  constructor(...args: ILUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ILUtils> {
    return super.deploy(overrides || {}) as Promise<ILUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ILUtils {
    return super.attach(address) as ILUtils;
  }
  override connect(signer: Signer): ILUtils__factory {
    return super.connect(signer) as ILUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ILUtilsInterface {
    return new utils.Interface(_abi) as ILUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILUtils {
    return new Contract(address, _abi, signerOrProvider) as ILUtils;
  }
}

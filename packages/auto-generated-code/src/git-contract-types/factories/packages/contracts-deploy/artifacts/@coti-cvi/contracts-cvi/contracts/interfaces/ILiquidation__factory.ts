/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILiquidation,
  ILiquidationInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-cvi/contracts/interfaces/ILiquidation";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionBalance",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPositive",
        type: "bool",
      },
      {
        internalType: "uint168",
        name: "positionUnitsAmount",
        type: "uint168",
      },
      {
        internalType: "uint32",
        name: "openCVIValue",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "leverage",
        type: "uint8",
      },
    ],
    name: "getLiquidationReward",
    outputs: [
      {
        internalType: "uint256",
        name: "finderFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionBalance",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPositive",
        type: "bool",
      },
      {
        internalType: "uint168",
        name: "positionUnitsAmount",
        type: "uint168",
      },
      {
        internalType: "uint32",
        name: "openCVIValue",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "leverage",
        type: "uint8",
      },
    ],
    name: "isLiquidationCandidate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[8]",
        name: "newMaxRewardPercents",
        type: "uint16[8]",
      },
    ],
    name: "setMaxLiquidationRewardPercents",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newMinRewardPercent",
        type: "uint16",
      },
    ],
    name: "setMinLiquidationRewardPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[8]",
        name: "newMinThresholdPercents",
        type: "uint16[8]",
      },
    ],
    name: "setMinLiquidationThresholdPercents",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ILiquidation__factory {
  static readonly abi = _abi;
  static createInterface(): ILiquidationInterface {
    return new utils.Interface(_abi) as ILiquidationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILiquidation {
    return new Contract(address, _abi, signerOrProvider) as ILiquidation;
  }
}

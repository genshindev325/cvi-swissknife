/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRequestFeesCalculator,
  IRequestFeesCalculatorInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-cvi/contracts/interfaces/IRequestFeesCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensLeftAmount",
        type: "uint256",
      },
    ],
    name: "calculateFindersFee",
    outputs: [
      {
        internalType: "uint256",
        name: "findersFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensAmount",
        type: "uint256",
      },
    ],
    name: "calculateKeepersFee",
    outputs: [
      {
        internalType: "uint256",
        name: "keepersFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeDelay",
        type: "uint256",
      },
    ],
    name: "calculateTimeDelayFee",
    outputs: [
      {
        internalType: "uint16",
        name: "feePercentage",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "requestType",
            type: "uint8",
          },
          {
            internalType: "uint168",
            name: "tokenAmount",
            type: "uint168",
          },
          {
            internalType: "uint16",
            name: "timeDelayRequestFeesPercent",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "maxRequestFeesPercent",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "requestTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "targetTimestamp",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "useKeepers",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "maxBuyingPremiumFeePercentage",
            type: "uint16",
          },
        ],
        internalType: "struct IVolatilityToken.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "calculateTimePenaltyFee",
    outputs: [
      {
        internalType: "uint16",
        name: "feePercentage",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxFees",
    outputs: [
      {
        internalType: "uint16",
        name: "maxFeesPercent",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "requestType",
            type: "uint8",
          },
          {
            internalType: "uint168",
            name: "tokenAmount",
            type: "uint168",
          },
          {
            internalType: "uint16",
            name: "timeDelayRequestFeesPercent",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "maxRequestFeesPercent",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "requestTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "targetTimestamp",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "useKeepers",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "maxBuyingPremiumFeePercentage",
            type: "uint16",
          },
        ],
        internalType: "struct IVolatilityToken.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "isLiquidable",
    outputs: [
      {
        internalType: "bool",
        name: "liquidable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minWaitTime",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "findersFeePercent",
        type: "uint16",
      },
    ],
    name: "setFindersFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "keepersFeeMax",
        type: "uint256",
      },
    ],
    name: "setKeepersFeeMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "keepersFeePercent",
        type: "uint16",
      },
    ],
    name: "setKeepersFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newMinWaitTime",
        type: "uint32",
      },
    ],
    name: "setMinWaitTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "minTimeDelayFeePercent",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "maxTimeDelayFeePercent",
        type: "uint16",
      },
    ],
    name: "setTimeDelayFeesParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "beforeTargetTimeMaxPenaltyFeePercent",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "afterTargetMidTime",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "afterTargetMidTimePenaltyFeePercent",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "afterTargetMaxTime",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "afterTargetMaxTimePenaltyFeePercent",
        type: "uint16",
      },
    ],
    name: "setTimePenaltyFeeParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "minTimeWindow",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxTimeWindow",
        type: "uint32",
      },
    ],
    name: "setTimeWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IRequestFeesCalculator__factory {
  static readonly abi = _abi;
  static createInterface(): IRequestFeesCalculatorInterface {
    return new utils.Interface(_abi) as IRequestFeesCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRequestFeesCalculator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IRequestFeesCalculator;
  }
}

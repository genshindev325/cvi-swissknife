/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPlatform,
  IPlatformInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-cvi/contracts/interfaces/IPlatform";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "positionUnitsAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "leverage",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cviValue",
        type: "uint256",
      },
    ],
    name: "ClosePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokensAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "positionAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentPositionBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isBalancePositive",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "positionUnitsAmount",
        type: "uint256",
      },
    ],
    name: "LiquidatePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "leverage",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "positionUnitsAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cviValue",
        type: "uint256",
      },
    ],
    name: "OpenPosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokensAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "PRECISION_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyersLockupPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calculateLatestTurbulenceIndicatorPercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "positionAddress",
        type: "address",
      },
    ],
    name: "calculatePositionBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "currentPositionBalance",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPositive",
        type: "bool",
      },
      {
        internalType: "uint168",
        name: "positionUnitsAmount",
        type: "uint168",
      },
      {
        internalType: "uint8",
        name: "leverage",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "fundingFees",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "marginDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "positionAddress",
        type: "address",
      },
      {
        internalType: "uint168",
        name: "positionUnitsAmount",
        type: "uint168",
      },
    ],
    name: "calculatePositionPendingFees",
    outputs: [
      {
        internalType: "uint256",
        name: "pendingFees",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint168",
        name: "positionUnitsAmount",
        type: "uint168",
      },
      {
        internalType: "uint32",
        name: "minCVI",
        type: "uint32",
      },
    ],
    name: "closePosition",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closePositionFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closingPremiumFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint168",
        name: "positionUnitsAmount",
        type: "uint168",
      },
      {
        internalType: "uint32",
        name: "minCVI",
        type: "uint32",
      },
    ],
    name: "closePositionWithoutFee",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closePositionFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closingPremiumFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cviOracle",
    outputs: [
      {
        internalType: "contract ICVIOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minLPTokenAmount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "lpTokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feesCalculator",
    outputs: [
      {
        internalType: "contract IFeesCalculator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "increaseSharedPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestFundingFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "positionOwners",
        type: "address[]",
      },
    ],
    name: "liquidatePositions",
    outputs: [
      {
        internalType: "uint256",
        name: "finderFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCVIValue",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint168",
        name: "tokenAmount",
        type: "uint168",
      },
      {
        internalType: "uint32",
        name: "maxCVI",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "maxBuyingPremiumFeePercentage",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "leverage",
        type: "uint8",
      },
    ],
    name: "openPosition",
    outputs: [
      {
        internalType: "uint168",
        name: "positionUnitsAmount",
        type: "uint168",
      },
      {
        internalType: "uint168",
        name: "positionedTokenAmount",
        type: "uint168",
      },
      {
        internalType: "uint168",
        name: "openPositionFee",
        type: "uint168",
      },
      {
        internalType: "uint168",
        name: "buyingPremiumFee",
        type: "uint168",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint168",
        name: "tokenAmount",
        type: "uint168",
      },
      {
        internalType: "uint32",
        name: "maxCVI",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "leverage",
        type: "uint8",
      },
    ],
    name: "openPositionWithoutFee",
    outputs: [
      {
        internalType: "uint168",
        name: "positionUnitsAmount",
        type: "uint168",
      },
      {
        internalType: "uint168",
        name: "positionedTokenAmount",
        type: "uint168",
      },
      {
        internalType: "uint168",
        name: "openPositionFee",
        type: "uint168",
      },
      {
        internalType: "uint168",
        name: "buyingPremiumFee",
        type: "uint168",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "positionAddress",
        type: "address",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "uint168",
        name: "positionUnitsAmount",
        type: "uint168",
      },
      {
        internalType: "uint8",
        name: "leverage",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "openCVIValue",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "creationTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "originalCreationTimestamp",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holderAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "shouldLockPosition",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "noPremiumFeeAllowed",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "increaseSharedPoolAllowed",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isLiquidityProvider",
        type: "bool",
      },
    ],
    name: "setAddressSpecificParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newEmergencyWithdrawAllowed",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "newCanPurgeSnapshots",
        type: "bool",
      },
    ],
    name: "setEmergencyParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFeesCalculator",
        name: "newCalculator",
        type: "address",
      },
    ],
    name: "setFeesCalculator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "newOracleRoundId",
        type: "uint80",
      },
    ],
    name: "setLatestOracleRoundId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newLPLockupPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newBuyersLockupPeriod",
        type: "uint256",
      },
    ],
    name: "setLockupPeriods",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "newMaxAllowedLeverage",
        type: "uint8",
      },
    ],
    name: "setMaxAllowedLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newMaxTimeAllowedAfterLatestRound",
        type: "uint32",
      },
    ],
    name: "setMaxTimeAllowedAfterLatestRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "revertLockedTransfers",
        type: "bool",
      },
    ],
    name: "setRevertLockedTransfers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFeesCollector",
        name: "newCollector",
        type: "address",
      },
      {
        internalType: "contract ICVIOracle",
        name: "newOracle",
        type: "address",
      },
      {
        internalType: "contract IRewardsCollector",
        name: "newRewards",
        type: "address",
      },
      {
        internalType: "contract ILiquidation",
        name: "newLiquidation",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newStakingContractAddress",
        type: "address",
      },
    ],
    name: "setSubContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_withAddendum",
        type: "bool",
      },
    ],
    name: "totalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFundingFeesAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLeveragedTokensAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPositionUnitsAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxLPTokenBurnAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "burntAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lpTokenAmount",
        type: "uint256",
      },
    ],
    name: "withdrawLPTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "burntAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPlatform__factory {
  static readonly abi = _abi;
  static createInterface(): IPlatformInterface {
    return new utils.Interface(_abi) as IPlatformInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPlatform {
    return new Contract(address, _abi, signerOrProvider) as IPlatform;
  }
}

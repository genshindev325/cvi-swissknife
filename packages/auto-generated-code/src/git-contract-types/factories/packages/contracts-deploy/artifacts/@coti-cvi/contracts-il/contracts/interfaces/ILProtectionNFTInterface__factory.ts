/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILProtectionNFTInterface,
  ILProtectionNFTInterfaceInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-il/contracts/interfaces/ILProtectionNFTInterface";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "prevValue",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "ProtectionMetadataCIDChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protectionStartTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protectionEndTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premiumCostUSD",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokensWorthAtBuyTimeUSD",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "token1Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "token2Symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "policyPeriod",
        type: "uint256",
      },
    ],
    name: "ProtectionMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum DiscountNFTType",
        name: "discountNFTType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premiumCostBeforeDiscount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premiumCostDiscount",
        type: "uint256",
      },
    ],
    name: "ProtectionMintDiscountDetails",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getOwnerProtections",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "protectionStartTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "protectionEndTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumCostUSD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpTokensWorthAtBuyTimeUSD",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "token1Symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "token2Symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "policyPeriod",
            type: "uint256",
          },
          {
            internalType: "enum DiscountNFTType",
            name: "discountNFTType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "premiumCostDiscountUSD",
            type: "uint256",
          },
        ],
        internalType: "struct ProtectionNFTDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getProtectionDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "protectionStartTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "protectionEndTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumCostUSD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpTokensWorthAtBuyTimeUSD",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "token1Symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "token2Symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "policyPeriod",
            type: "uint256",
          },
          {
            internalType: "enum DiscountNFTType",
            name: "discountNFTType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "premiumCostDiscountUSD",
            type: "uint256",
          },
        ],
        internalType: "struct ProtectionNFTDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getProtectionDetailsByOwnerAndIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "protectionStartTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "protectionEndTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumCostUSD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpTokensWorthAtBuyTimeUSD",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "token1Symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "token2Symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "policyPeriod",
            type: "uint256",
          },
          {
            internalType: "enum DiscountNFTType",
            name: "discountNFTType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "premiumCostDiscountUSD",
            type: "uint256",
          },
        ],
        internalType: "struct ProtectionNFTDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "protectionStartTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "protectionEndTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumCostUSD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpTokensWorthAtBuyTimeUSD",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "token1Symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "token2Symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "policyPeriod",
            type: "uint256",
          },
          {
            internalType: "enum DiscountNFTType",
            name: "discountNFTType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "premiumCostDiscountUSD",
            type: "uint256",
          },
        ],
        internalType: "struct ProtectionNFTCreationDetails",
        name: "_creationDetails",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protectionMetadataCID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_protectionMetadataCID",
        type: "string",
      },
    ],
    name: "setProtectionMetadataCID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ILProtectionNFTInterface__factory {
  static readonly abi = _abi;
  static createInterface(): ILProtectionNFTInterfaceInterface {
    return new utils.Interface(_abi) as ILProtectionNFTInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILProtectionNFTInterface {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ILProtectionNFTInterface;
  }
}

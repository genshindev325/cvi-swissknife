/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFeesCalculator,
  IFeesCalculatorInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint168",
        name: "tokenAmount",
        type: "uint168",
      },
      {
        internalType: "uint8",
        name: "leverage",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "lastTotalLeveragedTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastTotalPositionUnits",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalLeveragedTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPositionUnits",
        type: "uint256",
      },
    ],
    name: "calculateBuyingPremiumFee",
    outputs: [
      {
        internalType: "uint168",
        name: "buyingPremiumFee",
        type: "uint168",
      },
      {
        internalType: "uint16",
        name: "combinedPremiumFeePercentage",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint168",
        name: "tokenAmount",
        type: "uint168",
      },
      {
        internalType: "uint8",
        name: "leverage",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "lastTotalLeveragedTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastTotalPositionUnits",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalLeveragedTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPositionUnits",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_turbulenceIndicatorPercent",
        type: "uint16",
      },
    ],
    name: "calculateBuyingPremiumFeeWithAddendum",
    outputs: [
      {
        internalType: "uint168",
        name: "buyingPremiumFee",
        type: "uint168",
      },
      {
        internalType: "uint16",
        name: "combinedPremiumFeePercentage",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "creationTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isNoLockPositionAddress",
        type: "bool",
      },
    ],
    name: "calculateClosePositionFeePercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calculateClosingPremiumFee",
    outputs: [
      {
        internalType: "uint16",
        name: "combinedPremiumFeePercentage",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLeveragedTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPositionUnits",
        type: "uint256",
      },
    ],
    name: "calculateCollateralRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralRatio",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "period",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "cviValue",
            type: "uint32",
          },
        ],
        internalType: "struct IFeesCalculator.CVIValue[]",
        name: "cviValues",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalLeveragedTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPositionUnits",
        type: "uint256",
      },
    ],
    name: "calculateSingleUnitFundingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fundingFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "period",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "cviValue",
            type: "uint32",
          },
        ],
        internalType: "struct IFeesCalculator.CVIValue",
        name: "cviValue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "collateralRatio",
        type: "uint256",
      },
    ],
    name: "calculateSingleUnitPeriodFundingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fundingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fundingFeeRatePercents",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newRounds",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_lastCVIValue",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_currCVIValue",
        type: "uint32",
      },
    ],
    name: "calculateTurbulenceIndicatorPercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lastDepositTimestamp",
        type: "uint256",
      },
    ],
    name: "calculateWithdrawFeePercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "closePositionFeePercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "closePositionLPFeePercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositFeePercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralToBuyingPremiumMapping",
    outputs: [
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralToExtraFundingFeeMapping",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFundingFeeCoefficients",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openPositionFeePercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openPositionFees",
    outputs: [
      {
        internalType: "uint16",
        name: "openPositionFeePercentResult",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "buyingPremiumFeeMaxPercentResult",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openPositionLPFeePercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleLeverage",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newBuyingPremiumFeeMaxPercentage",
        type: "uint16",
      },
    ],
    name: "setBuyingPremiumFeeMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newBuyingPremiumThreshold",
        type: "uint16",
      },
    ],
    name: "setBuyingPremiumThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newClosePositionFeePercentage",
        type: "uint16",
      },
    ],
    name: "setClosePositionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newClosePositionFeeDecayPeriod",
        type: "uint256",
      },
    ],
    name: "setClosePositionFeeDecay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newClosePositionLPFeePercent",
        type: "uint16",
      },
    ],
    name: "setClosePositionLPFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newClosePositionMaxFeePercentage",
        type: "uint16",
      },
    ],
    name: "setClosePositionMaxFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newClosingPremiumFeeMaxPercentage",
        type: "uint16",
      },
    ],
    name: "setClosingPremiumFeeMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "newCollateralToBuyingPremiumMapping",
        type: "uint16[]",
      },
    ],
    name: "setCollateralToBuyingPremiumMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "newCollateralToExtraFundingFeeMapping",
        type: "uint32[]",
      },
    ],
    name: "setCollateralToExtraFundingFeeMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newDepositFeePercentage",
        type: "uint16",
      },
    ],
    name: "setDepositFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "newFundingFeeCoefficients",
        type: "uint32[]",
      },
    ],
    name: "setFundingFeeCoefficients",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newfundingFeeConstantRate",
        type: "uint16",
      },
    ],
    name: "setFundingFeeConstantRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newFundingFeeDivisionFactor",
        type: "uint32",
      },
    ],
    name: "setFundingFeeDivisionFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newFundingFeeMaxRate",
        type: "uint32",
      },
    ],
    name: "setFundingFeeMaxRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newFundingFeeMinRate",
        type: "uint32",
      },
    ],
    name: "setFundingFeeMinRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newMaxFundingFeeCviThreshold",
        type: "uint32",
      },
    ],
    name: "setMaxFundingFeeCviThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newMaxTurbulenceFeePercentToTrim",
        type: "uint16",
      },
    ],
    name: "setMaxTurbulenceFeePercentToTrim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newMinFundingFeeCviThreshold",
        type: "uint32",
      },
    ],
    name: "setMinFundingFeeCviThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newOpenPositionFeePercentage",
        type: "uint16",
      },
    ],
    name: "setOpenPositionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newOpenPositionLPFeePercent",
        type: "uint16",
      },
    ],
    name: "setOpenPositionLPFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICVIOracle",
        name: "cviOracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newOracleHeartbeatPeriod",
        type: "uint256",
      },
    ],
    name: "setOracleHeartbeatPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newUpdator",
        type: "address",
      },
    ],
    name: "setStateUpdator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IThetaVaultInfo",
        name: "thetaVault",
        type: "address",
      },
    ],
    name: "setThetaVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newTurbulenceDeviationPercentage",
        type: "uint16",
      },
    ],
    name: "setTurbulenceDeviationPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newTurbulenceDeviationThresholdPercent",
        type: "uint16",
      },
    ],
    name: "setTurbulenceDeviationThresholdPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newTurbulenceStepPercentage",
        type: "uint16",
      },
    ],
    name: "setTurbulenceStep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newWithdrawFeePercentage",
        type: "uint16",
      },
    ],
    name: "setWithdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "turbulenceIndicatorPercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "latestTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimestampSnapshot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestTimestampSnapshot",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "latestOracleRoundId",
        type: "uint80",
      },
      {
        internalType: "uint256",
        name: "totalLeveragedTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPositionUnits",
        type: "uint256",
      },
    ],
    name: "updateSnapshots",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "latestSnapshot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "singleUnitFundingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalRounds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cviValueTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint80",
            name: "newLatestRoundId",
            type: "uint80",
          },
          {
            internalType: "uint32",
            name: "cviValue",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "updatedSnapshot",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "updatedLatestRoundId",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "updatedLatestTimestamp",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "updatedTurbulenceData",
            type: "bool",
          },
        ],
        internalType: "struct IFeesCalculator.SnapshotUpdate",
        name: "snapshotUpdate",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newRounds",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "lastCVIValue",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "currCVIValue",
        type: "uint32",
      },
    ],
    name: "updateTurbulenceIndicatorPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFeePercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IFeesCalculator__factory {
  static readonly abi = _abi;
  static createInterface(): IFeesCalculatorInterface {
    return new utils.Interface(_abi) as IFeesCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFeesCalculator {
    return new Contract(address, _abi, signerOrProvider) as IFeesCalculator;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILProtectionDiscountNFTControllerInterface,
  ILProtectionDiscountNFTControllerInterfaceInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-il/contracts/interfaces/ILProtectionDiscountNFTControllerInterface";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "DiscountMarkedAsUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "FreeOfChargeTokensWorthChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "prevValue",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "newValue",
        type: "uint16",
      },
    ],
    name: "PremiumDiscountComponentChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ILProtectionDiscountNFTInterface",
        name: "prevValue",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract ILProtectionDiscountNFTInterface",
        name: "newValue",
        type: "address",
      },
    ],
    name: "ProtectionDiscountNFTChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "enabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeOfChargeTokensWorth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getDiscountDetails",
    outputs: [
      {
        components: [
          {
            internalType: "enum DiscountNFTType",
            name: "discountType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isUsed",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "premiumDiscountComponent",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "freeOfChargeTokensWorth",
            type: "uint256",
          },
        ],
        internalType: "struct DiscountNFTDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "markDiscountAsUsed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "premiumDiscountComponent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "setEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_freeOfChargeTokensWorth",
        type: "uint256",
      },
    ],
    name: "setFreeOfChargeTokensWorth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_premiumDiscountComponent",
        type: "uint16",
      },
    ],
    name: "setPremiumDiscountComponent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILProtectionDiscountNFTInterface",
        name: "_newInstance",
        type: "address",
      },
    ],
    name: "setProtectionDiscountNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ILProtectionDiscountNFTControllerInterface__factory {
  static readonly abi = _abi;
  static createInterface(): ILProtectionDiscountNFTControllerInterfaceInterface {
    return new utils.Interface(
      _abi
    ) as ILProtectionDiscountNFTControllerInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILProtectionDiscountNFTControllerInterface {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ILProtectionDiscountNFTControllerInterface;
  }
}

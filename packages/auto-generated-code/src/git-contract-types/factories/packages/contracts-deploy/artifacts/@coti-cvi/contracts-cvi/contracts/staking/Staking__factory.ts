/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Staking,
  StakingInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-cvi/contracts/staking/Staking";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
    ],
    name: "ProfitAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "goviAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "xGOVIMinted",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "xGOVIBalance",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "xGOVIBurned",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "goviReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "xGOVIBalance",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [],
    name: "PRECISION_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_newClaimableToken",
        type: "address",
      },
    ],
    name: "addClaimableToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAllProfits",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "claimProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimableTokens",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    name: "claimableTokensSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fallbackRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimableTokens",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "goviToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_goviToken",
        type: "address",
      },
      {
        internalType: "contract IStakingVault",
        name: "_stakingVault",
        type: "address",
      },
      {
        internalType: "contract IWETH",
        name: "_wethToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    name: "lastProfits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "profitOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_removedClaimableToken",
        type: "address",
      },
    ],
    name: "removeClaimableToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    name: "savedProfits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "sendProfit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newRewardPerSecond",
        type: "uint256",
      },
    ],
    name: "setRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newLockupTime",
        type: "uint256",
      },
    ],
    name: "setStakingLockupTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_goviAmount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "uint256",
        name: "xGOVIAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeLockupTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakeTimestamps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingVault",
    outputs: [
      {
        internalType: "contract IStakingVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    name: "totalProfits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_xGOVIAmount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [
      {
        internalType: "uint256",
        name: "goviAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wethToken",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612aa0806100206000396000f3fe60806040526004361061023f5760003560e01c8063845c97a11161012e578063a9059cbb116100ab578063c194ee2d1161006f578063c194ee2d146106f3578063c8f33c9114610715578063dd62ed3e1461072b578063e6ea787b1461074b578063f2fde38b1461077b57600080fd5b8063a9059cbb14610653578063b51c116514610673578063c03daea814610693578063c0ab44f6146106b3578063c0c53b8b146106d357600080fd5b806395d89b41116100f257806395d89b41146105b157806399f853a5146105c65780639e447fc6146105f3578063a457c2d714610613578063a694fc3a1461063357600080fd5b8063845c97a11461050f578063887a074b146105475780638b0f154d1461055d5780638da5cb5b1461057d5780638f10369a1461059b57600080fd5b806339509351116101bc57806356b1e8121161018057806356b1e8121461046f57806360ebfee61461049c5780636a3d1d2c146104b857806370a08231146104da578063715018a6146104fa57600080fd5b806339509351146103b75780633ad7e9ea146103d7578063452f3ce01461040f5780634b57b0be1461042f578063548ab23c1461044f57600080fd5b806324e7964a1161020357806324e7964a146103195780632d437a7b146103395780632e17de7814610359578063313ce56714610379578063325f23551461039557600080fd5b80630217ce491461024b57806306fdde0314610288578063095ea7b3146102aa57806318160ddd146102da57806323b872dd146102f957600080fd5b3661024657005b600080fd5b34801561025757600080fd5b5061026b6102663660046126fb565b61079b565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561029457600080fd5b5061029d6107c5565b60405161027f91906127f0565b3480156102b657600080fd5b506102ca6102c5366004612666565b610857565b604051901515815260200161027f565b3480156102e657600080fd5b506035545b60405190815260200161027f565b34801561030557600080fd5b506102ca610314366004612614565b61086f565b34801561032557600080fd5b5060cf5461026b906001600160a01b031681565b34801561034557600080fd5b5060d05461026b906001600160a01b031681565b34801561036557600080fd5b506102eb6103743660046126fb565b610895565b34801561038557600080fd5b506040516012815260200161027f565b3480156103a157600080fd5b506103aa610ad1565b60405161027f91906127b8565b3480156103c357600080fd5b506102ca6103d2366004612666565b610c1c565b3480156103e357600080fd5b506102eb6103f2366004612654565b60cd60209081526000928352604080842090915290825290205481565b34801561041b57600080fd5b5060d25461026b906001600160a01b031681565b34801561043b57600080fd5b5060d15461026b906001600160a01b031681565b34801561045b57600080fd5b506102eb61046a366004612654565b610c3e565b34801561047b57600080fd5b506102eb61048a3660046125c0565b60cb6020526000908152604090205481565b3480156104a857600080fd5b506102eb670de0b6b3a764000081565b3480156104c457600080fd5b506104d86104d33660046125c0565b610c83565b005b3480156104e657600080fd5b506102eb6104f53660046125c0565b610d72565b34801561050657600080fd5b506104d8610d8d565b34801561051b57600080fd5b506102eb61052a366004612654565b60cc60209081526000928352604080842090915290825290205481565b34801561055357600080fd5b506102eb60d35481565b34801561056957600080fd5b506104d861057836600461272b565b610dc3565b34801561058957600080fd5b506065546001600160a01b031661026b565b3480156105a757600080fd5b506102eb60d45481565b3480156105bd57600080fd5b5061029d610e9a565b3480156105d257600080fd5b506102eb6105e13660046125c0565b60ce6020526000908152604090205481565b3480156105ff57600080fd5b506104d861060e3660046126fb565b610ea9565b34801561061f57600080fd5b506102ca61062e366004612666565b610ee0565b34801561063f57600080fd5b506102eb61064e3660046126fb565b610f66565b34801561065f57600080fd5b506102ca61066e366004612666565b6111be565b34801561067f57600080fd5b506104d861068e3660046125c0565b6111cc565b34801561069f57600080fd5b506104d86106ae3660046126fb565b6113d5565b3480156106bf57600080fd5b506102eb6106ce3660046125c0565b611404565b3480156106df57600080fd5b506104d86106ee3660046126b1565b61149b565b3480156106ff57600080fd5b506107086115cb565b60405161027f919061276b565b34801561072157600080fd5b506102eb60d55481565b34801561073757600080fd5b506102eb6107463660046125dc565b61162c565b34801561075757600080fd5b506102ca6107663660046125c0565b60ca6020526000908152604090205460ff1681565b34801561078757600080fd5b506104d86107963660046125c0565b611657565b60c981815481106107ab57600080fd5b6000918252602090912001546001600160a01b0316905081565b6060603680546107d4906129ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610800906129ef565b801561084d5780601f106108225761010080835404028352916020019161084d565b820191906000526020600020905b81548152906001019060200180831161083057829003601f168201915b5050505050905090565b6000336108658185856116f2565b5060019392505050565b60003361087d858285611817565b61088885858561188b565b60019150505b9392505050565b6000600260975414156108c35760405162461bcd60e51b81526004016108ba9061291e565b60405180910390fd5b60026097558161090f5760405162461bcd60e51b8152602060048201526017602482015276416d6f756e74206d75737420626520706f73697469766560481b60448201526064016108ba565b61091833610d72565b82111561095b5760405162461bcd60e51b8152602060048201526011602482015270139bdd08195b9bdd59da081cdd185ad959607a1b60448201526064016108ba565b60d35433600090815260ce6020526040902054429161097991612955565b11156109b65760405162461bcd60e51b815260206004820152600c60248201526b119d5b991cc81b1bd8dad95960a21b60448201526064016108ba565b6109be611a59565b6109c782611af6565b60355460d0546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610a0d57600080fd5b505afa158015610a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a459190612713565b610a4f908461298d565b610a59919061296d565b9050610a653383611b5e565b60d054610a7c906001600160a01b03163383611ca9565b337f204fccf0d92ed8d48f204adb39b2e81e92bad0dedb93f5716ca9478cfb57de008383610aa984610d72565b6040805193845260208401929092529082015260600160405180910390a26001609755919050565b60c95460609060009067ffffffffffffffff811115610b0057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610b29578160200160208202803683370190505b509050610b3d610b3833610d72565b611af6565b6000805b60c954811015610bd9576000610b8b60c98381548110610b7157634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316611d0c565b905080848381518110610bae57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610bc38184612955565b9250508080610bd190612a24565b915050610b41565b5060008111610c165760405162461bcd60e51b8152602060048201526009602482015268139bc81c1c9bd99a5d60ba1b60448201526064016108ba565b50919050565b600033610865818585610c2f838361162c565b610c399190612955565b6116f2565b6000610c5383610c4d85610d72565b84611ead565b6001600160a01b03808516600090815260cd602090815260408083209387168352929052205461088e9190612955565b6065546001600160a01b03163314610cad5760405162461bcd60e51b81526004016108ba90612871565b6001600160a01b038116600090815260ca602052604090205460ff1615610d0c5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b60448201526064016108ba565b6001600160a01b0316600081815260ca60205260408120805460ff1916600190811790915560c9805491820181559091527f66be4f155c5ef2ebd3772b228f2f00681e4ed5826cdb3b1943cc11ad15ad1d280180546001600160a01b0319169091179055565b6001600160a01b031660009081526033602052604090205490565b6065546001600160a01b03163314610db75760405162461bcd60e51b81526004016108ba90612871565b610dc16000611f11565b565b60026097541415610de65760405162461bcd60e51b81526004016108ba9061291e565b60026097556001600160a01b038116600090815260ca6020526040902054819060ff168015610e23575060d0546001600160a01b03828116911614155b610e3f5760405162461bcd60e51b81526004016108ba906128a6565b6000610e4a60355490565b1115610e7457610e5a8382611f63565b610e6f6001600160a01b038216333086612000565b610e90565b60d254610e90906001600160a01b038381169133911686612000565b5050600160975550565b6060603780546107d4906129ef565b6065546001600160a01b03163314610ed35760405162461bcd60e51b81526004016108ba90612871565b610edb611a59565b60d455565b60003381610eee828661162c565b905083811015610f4e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108ba565b610f5b82868684036116f2565b506001949350505050565b600060026097541415610f8b5760405162461bcd60e51b81526004016108ba9061291e565b600260975581610fd75760405162461bcd60e51b8152602060048201526017602482015276416d6f756e74206d75737420626520706f73697469766560481b60448201526064016108ba565b610fdf611a59565b6000610fea33610d72565b1115610ffc57610ffc610b3833610d72565b60005b60c95481101561107757600060c9828154811061102c57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031680835260cb825260408084205433855260cc84528185209285529190925291205550611070816001612955565b9050610fff565b5033600090815260ce6020526040812042905560355460d0546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156110d657600080fd5b505afa1580156110ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110e9190612713565b90506000821180156111205750600081115b156111415780611130838661298d565b61113a919061296d565b9250611145565b8392505b61114f3384612038565b60d054611167906001600160a01b0316333087612000565b337fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed858561119484610d72565b6040805193845260208401929092529082015260600160405180910390a250506001609755919050565b60003361086581858561188b565b6065546001600160a01b031633146111f65760405162461bcd60e51b81526004016108ba90612871565b6001600160a01b038116600090815260ca602052604090205460ff1661122e5760405162461bcd60e51b81526004016108ba906128a6565b6000805b60c95481101561137357826001600160a01b031660c9828154811061126757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156113615760c98054600193506112959084906129ac565b815481106112b357634e487b7160e01b600052603260045260246000fd5b60009182526020909120015460c980546001600160a01b0390921691839081106112ed57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c980548061133a57634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b0319169055019055611373565b61136c816001612955565b9050611232565b50806113b35760405162461bcd60e51b815260206004820152600f60248201526e151bdad95b881b9bdd08199bdd5b99608a1b60448201526064016108ba565b506001600160a01b0316600090815260ca60205260409020805460ff19169055565b6065546001600160a01b031633146113ff5760405162461bcd60e51b81526004016108ba90612871565b60d355565b6000600260975414156114295760405162461bcd60e51b81526004016108ba9061291e565b60026097556114408261143b33610d72565b612117565b61144982611d0c565b9050600081116114915760405162461bcd60e51b8152602060048201526013602482015272273790383937b334ba103337b9103a37b5b2b760691b60448201526064016108ba565b6001609755919050565b60006114a7600161217e565b905080156114bf576000805461ff0019166101001790555b6114d662093a806905ede20f01a45980000061296d565b60d4554260d555610e1060d35560d080546001600160a01b038087166001600160a01b03199283161790925560cf805486841690831617905560d180549285169282169290921790915560d2805490911633179055611533612206565b61153b612235565b61157f6040518060400160405280600581526020016478474f564960d81b8152506040518060400160405280600581526020016478474f564960d81b815250612264565b80156115c5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b606060c980548060200260200160405190810160405280929190818152602001828054801561084d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611605575050505050905090565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6065546001600160a01b031633146116815760405162461bcd60e51b81526004016108ba90612871565b6001600160a01b0381166116e65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108ba565b6116ef81611f11565b50565b6001600160a01b0383166117545760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108ba565b6001600160a01b0382166117b55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108ba565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000611823848461162c565b905060001981146115c5578181101561187e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108ba565b6115c584848484036116f2565b6001600160a01b0383166118ef5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108ba565b6001600160a01b0382166119515760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108ba565b6001600160a01b038316600090815260336020526040902054818110156119c95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108ba565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611a00908490612955565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611a4c91815260200190565b60405180910390a36115c5565b6000611a6460355490565b1115611af057600060d45460d55442611a7d91906129ac565b611a87919061298d565b90508015611aee5760cf54604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b158015611ad557600080fd5b505af1158015611ae9573d6000803e3d6000fd5b505050505b505b4260d555565b60005b60c954811015611b5a57600060c98281548110611b2657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03169050611b478184612117565b50611b53816001612955565b9050611af9565b5050565b6001600160a01b038216611bbe5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016108ba565b6001600160a01b03821660009081526033602052604090205481811015611c325760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016108ba565b6001600160a01b0383166000908152603360205260408120838303905560358054849290611c619084906129ac565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161180a565b505050565b6040516001600160a01b038316602482015260448101829052611ca490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612295565b6001600160a01b038116600090815260ca602052604081205460ff16611d445760405162461bcd60e51b81526004016108ba906128a6565b5033600090815260cd602090815260408083206001600160a01b03851684529091529020548015611ea85733600081815260cd602090815260408083206001600160a01b0387811680865291845282852085905560cb84528285205495855260cc845282852082865290935292209290925560d1549091161415611e535760d154604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b158015611e0857600080fd5b505af1158015611e1c573d6000803e3d6000fd5b505060405133925083156108fc02915083906000818181858888f19350505050158015611e4d573d6000803e3d6000fd5b50611e67565b611e676001600160a01b0383163383611ca9565b6040518181526001600160a01b0383169033907f0aa4d283470c904c551d18bb894d37e17674920f3261a7f854be501e25f421b79060200160405180910390a35b919050565b6001600160a01b03808416600090815260cc6020908152604080832093851683529281528282205460cb909152918120549091670de0b6b3a7640000918591611ef5916129ac565b611eff919061298d565b611f09919061296d565b949350505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b603554611f78670de0b6b3a76400008461298d565b611f82919061296d565b6001600160a01b038216600090815260cb6020526040902054611fa59190612955565b6001600160a01b038216600081815260cb6020526040908190209290925590517f663600aa01a9a8620fdaaa3cf1f1a7e4f278ceee92f15a31b316d4893e91cdf590611ff49085815260200190565b60405180910390a25050565b6040516001600160a01b03808516602483015283166044820152606481018290526115c59085906323b872dd60e01b90608401611cd5565b6001600160a01b03821661208e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108ba565b80603560008282546120a09190612955565b90915550506001600160a01b038216600090815260336020526040812080548392906120cd908490612955565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b612122338284611ead565b33600090815260cd602090815260408083206001600160a01b03871684529091529020546121509190612955565b33600090815260cd602090815260408083206001600160a01b03969096168352949052929092209190915550565b60008054610100900460ff16156121c5578160ff1660011480156121a15750303b155b6121bd5760405162461bcd60e51b81526004016108ba90612823565b506000919050565b60005460ff8084169116106121ec5760405162461bcd60e51b81526004016108ba90612823565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff1661222d5760405162461bcd60e51b81526004016108ba906128d3565b610dc1612367565b600054610100900460ff1661225c5760405162461bcd60e51b81526004016108ba906128d3565b610dc1612395565b600054610100900460ff1661228b5760405162461bcd60e51b81526004016108ba906128d3565b611b5a82826123c5565b60006122ea826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166124139092919063ffffffff16565b805190915015611ca457808060200190518101906123089190612691565b611ca45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108ba565b600054610100900460ff1661238e5760405162461bcd60e51b81526004016108ba906128d3565b6001609755565b600054610100900460ff166123bc5760405162461bcd60e51b81526004016108ba906128d3565b610dc133611f11565b600054610100900460ff166123ec5760405162461bcd60e51b81526004016108ba906128d3565b81516123ff906036906020850190612527565b508051611ca4906037906020840190612527565b6060611f098484600085856001600160a01b0385163b6124755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108ba565b600080866001600160a01b03168587604051612491919061274f565b60006040518083038185875af1925050503d80600081146124ce576040519150601f19603f3d011682016040523d82523d6000602084013e6124d3565b606091505b50915091506124e38282866124ee565b979650505050505050565b606083156124fd57508161088e565b82511561250d5782518084602001fd5b8160405162461bcd60e51b81526004016108ba91906127f0565b828054612533906129ef565b90600052602060002090601f016020900481019282612555576000855561259b565b82601f1061256e57805160ff191683800117855561259b565b8280016001018555821561259b579182015b8281111561259b578251825591602001919060010190612580565b506125a79291506125ab565b5090565b5b808211156125a757600081556001016125ac565b6000602082840312156125d1578081fd5b813561088e81612a55565b600080604083850312156125ee578081fd5b82356125f981612a55565b9150602083013561260981612a55565b809150509250929050565b600080600060608486031215612628578081fd5b833561263381612a55565b9250602084013561264381612a55565b929592945050506040919091013590565b600080604083850312156125ee578182fd5b60008060408385031215612678578182fd5b823561268381612a55565b946020939093013593505050565b6000602082840312156126a2578081fd5b8151801515811461088e578182fd5b6000806000606084860312156126c5578283fd5b83356126d081612a55565b925060208401356126e081612a55565b915060408401356126f081612a55565b809150509250925092565b60006020828403121561270c578081fd5b5035919050565b600060208284031215612724578081fd5b5051919050565b6000806040838503121561273d578182fd5b82359150602083013561260981612a55565b600082516127618184602087016129c3565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156127ac5783516001600160a01b031683529284019291840191600101612787565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156127ac578351835292840192918401916001016127d4565b602081526000825180602084015261280f8160408501602087016129c3565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260139082015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6000821982111561296857612968612a3f565b500190565b60008261298857634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156129a7576129a7612a3f565b500290565b6000828210156129be576129be612a3f565b500390565b60005b838110156129de5781810151838201526020016129c6565b838111156115c55750506000910152565b600181811c90821680612a0357607f821691505b60208210811415610c1657634e487b7160e01b600052602260045260246000fd5b6000600019821415612a3857612a38612a3f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146116ef57600080fdfea264697066735822122083668511d85618ff87ed7f935e3fbd3cabc6ea65c232f89a39b4585405bf09d064736f6c63430008040033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(overrides || {}) as Promise<Staking>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}

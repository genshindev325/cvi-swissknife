/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPositionRewards,
  IPositionRewardsInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-cvi/contracts/interfaces/IPositionRewards";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionUnits",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionTimestamp",
        type: "uint256",
      },
    ],
    name: "calculatePositionReward",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extractRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxClaimPeriod",
        type: "uint256",
      },
    ],
    name: "setMaxClaimPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxDailyReward",
        type: "uint256",
      },
    ],
    name: "setMaxDailyReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxRewardTime",
        type: "uint256",
      },
    ],
    name: "setMaxRewardTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMaxRewardTimePercentageGain",
        type: "uint256",
      },
    ],
    name: "setMaxRewardTimePercentageGain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPlatform",
        name: "newPlatform",
        type: "address",
      },
    ],
    name: "setPlatform",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxSingleReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardMaxLinearPositionUnits",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardMaxLinearGOVI",
        type: "uint256",
      },
    ],
    name: "setRewardCalculationParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRewardFactor",
        type: "uint256",
      },
    ],
    name: "setRewardFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPositionRewards__factory {
  static readonly abi = _abi;
  static createInterface(): IPositionRewardsInterface {
    return new utils.Interface(_abi) as IPositionRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPositionRewards {
    return new Contract(address, _abi, signerOrProvider) as IPositionRewards;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ITreasuryController,
  ITreasuryControllerInterface,
} from "../../../../../../../../packages/contracts-deploy/artifacts/@coti-cvi/contracts-il/contracts/interfaces/ITreasuryController";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "protectionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "feeComponent",
        type: "uint16",
      },
      {
        indexed: true,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "treasuryToken",
        type: "address",
      },
    ],
    name: "DepositFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevValue",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newValue",
        type: "address",
      },
    ],
    name: "TreasuryChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "prevValue",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "newValue",
        type: "address",
      },
    ],
    name: "TreasuryTokenChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_protectionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_feeComponent",
        type: "uint16",
      },
    ],
    name: "depositFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_treasuryToken",
        type: "address",
      },
    ],
    name: "setTreasuryToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ITreasuryController__factory {
  static readonly abi = _abi;
  static createInterface(): ITreasuryControllerInterface {
    return new utils.Interface(_abi) as ITreasuryControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITreasuryController {
    return new Contract(address, _abi, signerOrProvider) as ITreasuryController;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../../../../common";

export type DiscountNFTDetailsStruct = {
  discountType: BigNumberish;
  isUsed: boolean;
  premiumDiscountComponent: BigNumberish;
  freeOfChargeTokensWorth: BigNumberish;
};

export type DiscountNFTDetailsStructOutput = [
  number,
  boolean,
  number,
  BigNumber
] & {
  discountType: number;
  isUsed: boolean;
  premiumDiscountComponent: number;
  freeOfChargeTokensWorth: BigNumber;
};

export interface ILProtectionDiscountNFTControllerInterface
  extends utils.Interface {
  functions: {
    "DEFAULT_ADMIN_ROLE()": FunctionFragment;
    "DISCOUNT_OPERATIONS_ROLE()": FunctionFragment;
    "MAX_PRECISION()": FunctionFragment;
    "enabled()": FunctionFragment;
    "freeOfChargeTokensWorth()": FunctionFragment;
    "getDiscountDetails(address)": FunctionFragment;
    "getRoleAdmin(bytes32)": FunctionFragment;
    "grantRole(bytes32,address)": FunctionFragment;
    "hasRole(bytes32,address)": FunctionFragment;
    "initialize(address,address,uint16,uint256,bool)": FunctionFragment;
    "markDiscountAsUsed(address)": FunctionFragment;
    "owner()": FunctionFragment;
    "premiumDiscountComponent()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "renounceRole(bytes32,address)": FunctionFragment;
    "revokeRole(bytes32,address)": FunctionFragment;
    "setEnabled(bool)": FunctionFragment;
    "setFreeOfChargeTokensWorth(uint256)": FunctionFragment;
    "setPremiumDiscountComponent(uint16)": FunctionFragment;
    "setProtectionDiscountNFT(address)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "DEFAULT_ADMIN_ROLE"
      | "DISCOUNT_OPERATIONS_ROLE"
      | "MAX_PRECISION"
      | "enabled"
      | "freeOfChargeTokensWorth"
      | "getDiscountDetails"
      | "getRoleAdmin"
      | "grantRole"
      | "hasRole"
      | "initialize"
      | "markDiscountAsUsed"
      | "owner"
      | "premiumDiscountComponent"
      | "renounceOwnership"
      | "renounceRole"
      | "revokeRole"
      | "setEnabled"
      | "setFreeOfChargeTokensWorth"
      | "setPremiumDiscountComponent"
      | "setProtectionDiscountNFT"
      | "supportsInterface"
      | "transferOwnership"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DISCOUNT_OPERATIONS_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_PRECISION",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "enabled", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "freeOfChargeTokensWorth",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDiscountDetails",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, BigNumberish, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "markDiscountAsUsed",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "premiumDiscountComponent",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(functionFragment: "setEnabled", values: [boolean]): string;
  encodeFunctionData(
    functionFragment: "setFreeOfChargeTokensWorth",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setPremiumDiscountComponent",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setProtectionDiscountNFT",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DISCOUNT_OPERATIONS_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_PRECISION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "enabled", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "freeOfChargeTokensWorth",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDiscountDetails",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "markDiscountAsUsed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "premiumDiscountComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revokeRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setEnabled", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setFreeOfChargeTokensWorth",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPremiumDiscountComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProtectionDiscountNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "DiscountMarkedAsUsed(address)": EventFragment;
    "FreeOfChargeTokensWorthChanged(uint256,uint256)": EventFragment;
    "Initialized(uint8)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "PremiumDiscountComponentChanged(uint16,uint16)": EventFragment;
    "ProtectionDiscountNFTChanged(address,address)": EventFragment;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": EventFragment;
    "RoleGranted(bytes32,address,address)": EventFragment;
    "RoleRevoked(bytes32,address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DiscountMarkedAsUsed"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "FreeOfChargeTokensWorthChanged"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "PremiumDiscountComponentChanged"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ProtectionDiscountNFTChanged"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleAdminChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleGranted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleRevoked"): EventFragment;
}

export interface DiscountMarkedAsUsedEventObject {
  owner: string;
}
export type DiscountMarkedAsUsedEvent = TypedEvent<
  [string],
  DiscountMarkedAsUsedEventObject
>;

export type DiscountMarkedAsUsedEventFilter =
  TypedEventFilter<DiscountMarkedAsUsedEvent>;

export interface FreeOfChargeTokensWorthChangedEventObject {
  prevValue: BigNumber;
  newValue: BigNumber;
}
export type FreeOfChargeTokensWorthChangedEvent = TypedEvent<
  [BigNumber, BigNumber],
  FreeOfChargeTokensWorthChangedEventObject
>;

export type FreeOfChargeTokensWorthChangedEventFilter =
  TypedEventFilter<FreeOfChargeTokensWorthChangedEvent>;

export interface InitializedEventObject {
  version: number;
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface PremiumDiscountComponentChangedEventObject {
  prevValue: number;
  newValue: number;
}
export type PremiumDiscountComponentChangedEvent = TypedEvent<
  [number, number],
  PremiumDiscountComponentChangedEventObject
>;

export type PremiumDiscountComponentChangedEventFilter =
  TypedEventFilter<PremiumDiscountComponentChangedEvent>;

export interface ProtectionDiscountNFTChangedEventObject {
  prevValue: string;
  newValue: string;
}
export type ProtectionDiscountNFTChangedEvent = TypedEvent<
  [string, string],
  ProtectionDiscountNFTChangedEventObject
>;

export type ProtectionDiscountNFTChangedEventFilter =
  TypedEventFilter<ProtectionDiscountNFTChangedEvent>;

export interface RoleAdminChangedEventObject {
  role: string;
  previousAdminRole: string;
  newAdminRole: string;
}
export type RoleAdminChangedEvent = TypedEvent<
  [string, string, string],
  RoleAdminChangedEventObject
>;

export type RoleAdminChangedEventFilter =
  TypedEventFilter<RoleAdminChangedEvent>;

export interface RoleGrantedEventObject {
  role: string;
  account: string;
  sender: string;
}
export type RoleGrantedEvent = TypedEvent<
  [string, string, string],
  RoleGrantedEventObject
>;

export type RoleGrantedEventFilter = TypedEventFilter<RoleGrantedEvent>;

export interface RoleRevokedEventObject {
  role: string;
  account: string;
  sender: string;
}
export type RoleRevokedEvent = TypedEvent<
  [string, string, string],
  RoleRevokedEventObject
>;

export type RoleRevokedEventFilter = TypedEventFilter<RoleRevokedEvent>;

export interface ILProtectionDiscountNFTController extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ILProtectionDiscountNFTControllerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<[string]>;

    DISCOUNT_OPERATIONS_ROLE(overrides?: CallOverrides): Promise<[string]>;

    MAX_PRECISION(overrides?: CallOverrides): Promise<[number]>;

    enabled(overrides?: CallOverrides): Promise<[boolean]>;

    freeOfChargeTokensWorth(overrides?: CallOverrides): Promise<[BigNumber]>;

    getDiscountDetails(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<[DiscountNFTDetailsStructOutput]>;

    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<[string]>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    initialize(
      _owner: string,
      _protectionDiscountNFT: string,
      _premiumDiscountComponent: BigNumberish,
      _freeOfChargeTokensWorth: BigNumberish,
      _enabled: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    markDiscountAsUsed(
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    premiumDiscountComponent(overrides?: CallOverrides): Promise<[number]>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setEnabled(
      _enabled: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setFreeOfChargeTokensWorth(
      _freeOfChargeTokensWorth: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setPremiumDiscountComponent(
      _premiumDiscountComponent: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setProtectionDiscountNFT(
      _newInstance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

  DISCOUNT_OPERATIONS_ROLE(overrides?: CallOverrides): Promise<string>;

  MAX_PRECISION(overrides?: CallOverrides): Promise<number>;

  enabled(overrides?: CallOverrides): Promise<boolean>;

  freeOfChargeTokensWorth(overrides?: CallOverrides): Promise<BigNumber>;

  getDiscountDetails(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<DiscountNFTDetailsStructOutput>;

  getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;

  grantRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  hasRole(
    role: BytesLike,
    account: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  initialize(
    _owner: string,
    _protectionDiscountNFT: string,
    _premiumDiscountComponent: BigNumberish,
    _freeOfChargeTokensWorth: BigNumberish,
    _enabled: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  markDiscountAsUsed(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  premiumDiscountComponent(overrides?: CallOverrides): Promise<number>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  renounceRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  revokeRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setEnabled(
    _enabled: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setFreeOfChargeTokensWorth(
    _freeOfChargeTokensWorth: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setPremiumDiscountComponent(
    _premiumDiscountComponent: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setProtectionDiscountNFT(
    _newInstance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

    DISCOUNT_OPERATIONS_ROLE(overrides?: CallOverrides): Promise<string>;

    MAX_PRECISION(overrides?: CallOverrides): Promise<number>;

    enabled(overrides?: CallOverrides): Promise<boolean>;

    freeOfChargeTokensWorth(overrides?: CallOverrides): Promise<BigNumber>;

    getDiscountDetails(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<DiscountNFTDetailsStructOutput>;

    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    initialize(
      _owner: string,
      _protectionDiscountNFT: string,
      _premiumDiscountComponent: BigNumberish,
      _freeOfChargeTokensWorth: BigNumberish,
      _enabled: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    markDiscountAsUsed(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    owner(overrides?: CallOverrides): Promise<string>;

    premiumDiscountComponent(overrides?: CallOverrides): Promise<number>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setEnabled(_enabled: boolean, overrides?: CallOverrides): Promise<void>;

    setFreeOfChargeTokensWorth(
      _freeOfChargeTokensWorth: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setPremiumDiscountComponent(
      _premiumDiscountComponent: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setProtectionDiscountNFT(
      _newInstance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "DiscountMarkedAsUsed(address)"(
      owner?: string | null
    ): DiscountMarkedAsUsedEventFilter;
    DiscountMarkedAsUsed(
      owner?: string | null
    ): DiscountMarkedAsUsedEventFilter;

    "FreeOfChargeTokensWorthChanged(uint256,uint256)"(
      prevValue?: null,
      newValue?: null
    ): FreeOfChargeTokensWorthChangedEventFilter;
    FreeOfChargeTokensWorthChanged(
      prevValue?: null,
      newValue?: null
    ): FreeOfChargeTokensWorthChangedEventFilter;

    "Initialized(uint8)"(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;

    "PremiumDiscountComponentChanged(uint16,uint16)"(
      prevValue?: null,
      newValue?: null
    ): PremiumDiscountComponentChangedEventFilter;
    PremiumDiscountComponentChanged(
      prevValue?: null,
      newValue?: null
    ): PremiumDiscountComponentChangedEventFilter;

    "ProtectionDiscountNFTChanged(address,address)"(
      prevValue?: null,
      newValue?: null
    ): ProtectionDiscountNFTChangedEventFilter;
    ProtectionDiscountNFTChanged(
      prevValue?: null,
      newValue?: null
    ): ProtectionDiscountNFTChangedEventFilter;

    "RoleAdminChanged(bytes32,bytes32,bytes32)"(
      role?: BytesLike | null,
      previousAdminRole?: BytesLike | null,
      newAdminRole?: BytesLike | null
    ): RoleAdminChangedEventFilter;
    RoleAdminChanged(
      role?: BytesLike | null,
      previousAdminRole?: BytesLike | null,
      newAdminRole?: BytesLike | null
    ): RoleAdminChangedEventFilter;

    "RoleGranted(bytes32,address,address)"(
      role?: BytesLike | null,
      account?: string | null,
      sender?: string | null
    ): RoleGrantedEventFilter;
    RoleGranted(
      role?: BytesLike | null,
      account?: string | null,
      sender?: string | null
    ): RoleGrantedEventFilter;

    "RoleRevoked(bytes32,address,address)"(
      role?: BytesLike | null,
      account?: string | null,
      sender?: string | null
    ): RoleRevokedEventFilter;
    RoleRevoked(
      role?: BytesLike | null,
      account?: string | null,
      sender?: string | null
    ): RoleRevokedEventFilter;
  };

  estimateGas: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    DISCOUNT_OPERATIONS_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    MAX_PRECISION(overrides?: CallOverrides): Promise<BigNumber>;

    enabled(overrides?: CallOverrides): Promise<BigNumber>;

    freeOfChargeTokensWorth(overrides?: CallOverrides): Promise<BigNumber>;

    getDiscountDetails(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoleAdmin(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      _owner: string,
      _protectionDiscountNFT: string,
      _premiumDiscountComponent: BigNumberish,
      _freeOfChargeTokensWorth: BigNumberish,
      _enabled: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    markDiscountAsUsed(
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    premiumDiscountComponent(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setEnabled(
      _enabled: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setFreeOfChargeTokensWorth(
      _freeOfChargeTokensWorth: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setPremiumDiscountComponent(
      _premiumDiscountComponent: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setProtectionDiscountNFT(
      _newInstance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DEFAULT_ADMIN_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    DISCOUNT_OPERATIONS_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MAX_PRECISION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    enabled(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    freeOfChargeTokensWorth(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDiscountDetails(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoleAdmin(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _owner: string,
      _protectionDiscountNFT: string,
      _premiumDiscountComponent: BigNumberish,
      _freeOfChargeTokensWorth: BigNumberish,
      _enabled: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    markDiscountAsUsed(
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    premiumDiscountComponent(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setEnabled(
      _enabled: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setFreeOfChargeTokensWorth(
      _freeOfChargeTokensWorth: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setPremiumDiscountComponent(
      _premiumDiscountComponent: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setProtectionDiscountNFT(
      _newInstance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}

{
  "name": "ArbitrumMainnet",
  "chainId": "42161",
  "contracts": {
    "CVIDeviationOracle": {
      "address": "0xbcD8bEA7831f392bb019ef3a672CC15866004536",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "_decimals",
              "type": "uint8"
            },
            {
              "internalType": "int256",
              "name": "_initialAnswer",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "int256",
              "name": "current",
              "type": "int256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "roundId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            }
          ],
          "name": "AnswerUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "roundId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "startedBy",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            }
          ],
          "name": "NewRound",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "getAnswer",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "getTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestAnswer",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestRound",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "version",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "_answer",
              "type": "int256"
            }
          ],
          "name": "updateAnswer",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_roundId",
              "type": "uint80"
            },
            {
              "internalType": "int256",
              "name": "_answer",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "_timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_startedAt",
              "type": "uint256"
            }
          ],
          "name": "updateRoundData",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_roundId",
              "type": "uint80"
            }
          ],
          "name": "getRoundData",
          "outputs": [
            {
              "internalType": "uint80",
              "name": "roundId",
              "type": "uint80"
            },
            {
              "internalType": "int256",
              "name": "answer",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint80",
              "name": "answeredInRound",
              "type": "uint80"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestRoundData",
          "outputs": [
            {
              "internalType": "uint80",
              "name": "roundId",
              "type": "uint80"
            },
            {
              "internalType": "int256",
              "name": "answer",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint80",
              "name": "answeredInRound",
              "type": "uint80"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_latestRound",
              "type": "uint256"
            }
          ],
          "name": "setLatestRound",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "description",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "transactionHash": "0x0f9dfa10e064313e7dbe14a227a3ed6606be31a797c3129abe62f3d9be380840",
      "numDeployments": 1,
      "creationBlock": 2373034,
      "history": []
    },
    "CVIFeedOracle": {
      "address": "0xbcD8bEA7831f392bb019ef3a672CC15866004536",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "_decimals",
              "type": "uint8"
            },
            {
              "internalType": "int256",
              "name": "_initialAnswer",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "int256",
              "name": "current",
              "type": "int256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "roundId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            }
          ],
          "name": "AnswerUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "roundId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "startedBy",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            }
          ],
          "name": "NewRound",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "getAnswer",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "getTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestAnswer",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestRound",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "version",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "_answer",
              "type": "int256"
            }
          ],
          "name": "updateAnswer",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_roundId",
              "type": "uint80"
            },
            {
              "internalType": "int256",
              "name": "_answer",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "_timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_startedAt",
              "type": "uint256"
            }
          ],
          "name": "updateRoundData",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_roundId",
              "type": "uint80"
            }
          ],
          "name": "getRoundData",
          "outputs": [
            {
              "internalType": "uint80",
              "name": "roundId",
              "type": "uint80"
            },
            {
              "internalType": "int256",
              "name": "answer",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint80",
              "name": "answeredInRound",
              "type": "uint80"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestRoundData",
          "outputs": [
            {
              "internalType": "uint80",
              "name": "roundId",
              "type": "uint80"
            },
            {
              "internalType": "int256",
              "name": "answer",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint80",
              "name": "answeredInRound",
              "type": "uint80"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_latestRound",
              "type": "uint256"
            }
          ],
          "name": "setLatestRound",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "description",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "transactionHash": "0x0f9dfa10e064313e7dbe14a227a3ed6606be31a797c3129abe62f3d9be380840",
      "numDeployments": 1,
      "receipt": {
        "blockNumber": 2373034
      },
      "creationBlock": 2373034,
      "history": []
    },
    "CVIOracle": {
      "address": "0x649813B6dc6111D67484BaDeDd377D32e4505F85",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract AggregatorV3Interface",
              "name": "_cviAggregator",
              "type": "address"
            },
            {
              "internalType": "contract AggregatorV3Interface",
              "name": "_cviDeviationAggregator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_maxCVIValue",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "_leverage",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "cviAggregator",
          "outputs": [
            {
              "internalType": "contract AggregatorV3Interface",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cviDeviationAggregator",
          "outputs": [
            {
              "internalType": "contract AggregatorV3Interface",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "deviationCheck",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCVILatestRoundData",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "cviValue",
              "type": "uint32"
            },
            {
              "internalType": "uint80",
              "name": "cviRoundId",
              "type": "uint80"
            },
            {
              "internalType": "uint256",
              "name": "cviTimestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_roundId",
              "type": "uint80"
            }
          ],
          "name": "getCVIRoundData",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "cviValue",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "cviTimestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "leverage",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxCVIValue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxDeviation",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newDeviationCheck",
              "type": "bool"
            }
          ],
          "name": "setDeviationCheck",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newMaxDeviation",
              "type": "uint16"
            }
          ],
          "name": "setMaxDeviation",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "transactionHash": "0xd112e8823a7455ef9e73d2d8d9cf3b8fffe0aa3093e28b9b4ac56f89202678de",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x649813B6dc6111D67484BaDeDd377D32e4505F85",
        "transactionIndex": 1,
        "gasUsed": "3850311",
        "logsBloom": "0x
        "blockHash": "0x6bc69e988bc16cb94010ef24d7af261b4fbd244d6f90b50695f55130ef98c322",
        "transactionHash": "0xd112e8823a7455ef9e73d2d8d9cf3b8fffe0aa3093e28b9b4ac56f89202678de",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 29537783,
            "transactionHash": "0xd112e8823a7455ef9e73d2d8d9cf3b8fffe0aa3093e28b9b4ac56f89202678de",
            "address": "0x649813B6dc6111D67484BaDeDd377D32e4505F85",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x6bc69e988bc16cb94010ef24d7af261b4fbd244d6f90b50695f55130ef98c322"
          }
        ],
        "blockNumber": 29537783,
        "cumulativeGasUsed": "3850311",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0xbcD8bEA7831f392bb019ef3a672CC15866004536",
        "0xbcD8bEA7831f392bb019ef3a672CC15866004536",
        "200000000000000000000",
        1
      ],
      "numDeployments": 1,
      "solcInputHash": "8d836039a3333aa7ff1a69dee5a5f235",
      "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_cviAggregator\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_cviDeviationAggregator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxCVIValue\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_leverage\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cviAggregator\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cviDeviationAggregator\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deviationCheck\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCVILatestRoundData\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"cviValue\",\"type\":\"uint32\"},{\"internalType\":\"uint80\",\"name\":\"cviRoundId\",\"type\":\"uint80\"},{\"internalType\":\"uint256\",\"name\":\"cviTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getCVIRoundData\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"cviValue\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"cviTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leverage\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCVIValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDeviation\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_newDeviationCheck\",\"type\":\"bool\"}],\"name\":\"setDeviationCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newMaxDeviation\",\"type\":\"uint16\"}],\"name\":\"setMaxDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@coti-cvi/contracts-cvi/contracts/CVIOracle.sol\":\"CVIOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@coti-cvi/contracts-cvi/contracts/CVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./interfaces/ICVIOracle.sol\\\";\\nimport \\\"./interfaces/AggregatorV3Interface.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract CVIOracle is ICVIOracle, Ownable {\\n\\n    uint256 private constant PRECISION_DECIMALS = 10000;\\n    uint256 private constant CVI_DECIMALS_TRUNCATE = 1e16;\\n\\n    AggregatorV3Interface public immutable cviAggregator;\\n    AggregatorV3Interface public cviDeviationAggregator;\\n    bool public deviationCheck = false;\\n    uint16 public maxDeviation = 1000;\\n\\n    uint8 public leverage;\\n    uint256 public maxCVIValue;\\n\\n    constructor(AggregatorV3Interface _cviAggregator, AggregatorV3Interface _cviDeviationAggregator, uint256 _maxCVIValue, uint8 _leverage) {\\n    \\tcviAggregator = _cviAggregator;\\n        cviDeviationAggregator = _cviDeviationAggregator;\\n        maxCVIValue = _maxCVIValue;\\n        leverage = _leverage;\\n    }\\n\\n    function getCVIRoundData(uint80 _roundId) external view override returns (uint32 cviValue, uint256 cviTimestamp) {\\n        (, int256 cviOracleValue,, uint256 cviOracleTimestamp,) = cviAggregator.getRoundData(_roundId);\\n        cviTimestamp = cviOracleTimestamp;\\n        cviValue = getTruncatedCVIValue(cviOracleValue);\\n    }\\n\\n    function getCVILatestRoundData() external view override returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp) {\\n        (uint80 oracleRoundId, int256 cviOracleValue,, uint256 oracleTimestamp,) = cviAggregator.latestRoundData();\\n        uint32 truncatedCVIOracleValue = getTruncatedCVIValue(cviOracleValue);\\n\\n        if (deviationCheck) {\\n            (, int256 cviDeviationOracleValue,,,) = cviDeviationAggregator.latestRoundData();\\n            uint32 truncatedCVIDeviationOracleValue = getTruncatedCVIValue(cviDeviationOracleValue);\\n\\n            uint256 deviation = truncatedCVIDeviationOracleValue > truncatedCVIOracleValue ? truncatedCVIDeviationOracleValue - truncatedCVIOracleValue : truncatedCVIOracleValue - truncatedCVIDeviationOracleValue;\\n\\n            require(deviation * PRECISION_DECIMALS / truncatedCVIDeviationOracleValue <= maxDeviation, \\\"Deviation too large\\\");\\n        }\\n\\n        return (truncatedCVIOracleValue, oracleRoundId, oracleTimestamp);\\n    }\\n\\n    function setDeviationCheck(bool _newDeviationCheck) external override onlyOwner {\\n        deviationCheck = _newDeviationCheck;\\n    }\\n\\n    function setMaxDeviation(uint16 _newMaxDeviation) external override onlyOwner {\\n        maxDeviation = _newMaxDeviation;\\n    }\\n\\n    function getTruncatedCVIValue(int256 cviOracleValue) private view returns (uint32) {\\n        uint256 cviValue = uint256(cviOracleValue) * leverage;\\n        if (cviValue > maxCVIValue) {\\n            require(uint32(maxCVIValue / CVI_DECIMALS_TRUNCATE) > 0, \\\"CVI must be positive\\\");\\n            return uint32(maxCVIValue / CVI_DECIMALS_TRUNCATE);\\n        }\\n\\n        require(uint32(cviValue / CVI_DECIMALS_TRUNCATE) > 0, \\\"CVI must be positive\\\");\\n        return uint32(cviValue / CVI_DECIMALS_TRUNCATE);\\n    }\\n}\\n\",\"keccak256\":\"0x644d944ded7fda97dbe06fa29a24905be3d443d70aecc3abe30755740f0870dd\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface AggregatorV3Interface {\\n\\n    function decimals() external view returns (uint8);\\n    function description() external view returns (string memory);\\n    function version() external view returns (uint256);\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0xced5b5caed5589268ef29bffb270ce32e3d5611a80cb0a67755276a1a5c82669\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ICVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ICVIOracle {\\n    function getCVIRoundData(uint80 roundId) external view returns (uint32 cviValue, uint256 cviTimestamp);\\n    function getCVILatestRoundData() external view returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp);\\n\\n    function setDeviationCheck(bool newDeviationCheck) external;\\n    function setMaxDeviation(uint16 newMaxDeviation) external;\\n}\\n\",\"keccak256\":\"0xf1871b2e9219f7a11e63d8e3276b7a0a46d8d726d54e385a6326dbdb2bcb1bad\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x60a06040526001805462ffffff60a01b1916607d60ab1b17905534801561002557600080fd5b50604051610b69380380610b698339810160408190526100449161010b565b61004d3361009f565b6001600160601b031960609490941b939093166080526001805460029290925560ff909316600160b81b02600163ff00000160a01b03199091166001600160a01b03929092169190911717905561015e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461010657600080fd5b919050565b60008060008060808587031215610120578384fd5b610129856100ef565b9350610137602086016100ef565b925060408501519150606085015160ff81168114610153578182fd5b939692955090935050565b60805160601c6109df61018a600039600081816101fc0152818161029a01526103c201526109df6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063c1639a2b1161008c578063e0530f4211610066578063e0530f42146101f7578063e34a05d31461021e578063f2fde38b14610231578063fe1e33651461024457600080fd5b8063c1639a2b14610198578063d934c20b146101cd578063de40c5ae146101e457600080fd5b80632a1bab73146100d45780632c86d98e146101015780635a7b84b114610127578063715018a6146101565780638da5cb5b14610160578063986f396b14610185575b600080fd5b6001546100e990600160a81b900461ffff1681565b60405161ffff90911681526020015b60405180910390f35b60015461011590600160b81b900460ff1681565b60405160ff90911681526020016100f8565b61013a61013536600461086f565b610268565b6040805163ffffffff90931683526020830191909152016100f8565b61015e610330565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100f8565b61015e61019336600461082d565b61036f565b6101a06103b7565b6040805163ffffffff909416845269ffffffffffffffffffff9092166020840152908201526060016100f8565b6101d660025481565b6040519081526020016100f8565b60015461016d906001600160a01b031681565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b61015e61022c36600461084d565b6105bc565b61015e61023f366004610806565b610608565b60015461025890600160a01b900460ff1681565b60405190151581526020016100f8565b604051639a6fc8f560e01b815269ffffffffffffffffffff821660048201526000908190819081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639a6fc8f59060240160a06040518083038186803b1580156102dc57600080fd5b505afa1580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610314919061088b565b50935050925050809250610327826106a3565b93505050915091565b6000546001600160a01b031633146103635760405162461bcd60e51b815260040161035a906108e2565b60405180910390fd5b61036d60006107b6565b565b6000546001600160a01b031633146103995760405162461bcd60e51b815260040161035a906108e2565b60018054911515600160a01b0260ff60a01b19909216919091179055565b6000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561041957600080fd5b505afa15801561042d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610451919061088b565b50935050925092506000610464836106a3565b600154909150600160a01b900460ff16156105b05760015460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a0929190829003018186803b1580156104be57600080fd5b505afa1580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f6919061088b565b5050509150506000610507826106a3565b905060008363ffffffff168263ffffffff161161052d576105288285610956565b610537565b6105378483610956565b60015463ffffffff9182169250600160a81b900461ffff1690831661055e61271084610937565b6105689190610917565b11156105ac5760405162461bcd60e51b8152602060048201526013602482015272446576696174696f6e20746f6f206c6172676560681b604482015260640161035a565b5050505b96929550935090915050565b6000546001600160a01b031633146105e65760405162461bcd60e51b815260040161035a906108e2565b6001805461ffff909216600160a81b0261ffff60a81b19909216919091179055565b6000546001600160a01b031633146106325760405162461bcd60e51b815260040161035a906108e2565b6001600160a01b0381166106975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035a565b6106a0816107b6565b50565b60015460009081906106bf90600160b81b900460ff1684610937565b9050600254811115610748576000662386f26fc100006002546106e29190610917565b63ffffffff161161072c5760405162461bcd60e51b8152602060048201526014602482015273435649206d75737420626520706f73697469766560601b604482015260640161035a565b662386f26fc100006002546107419190610917565b9392505050565b600061075b662386f26fc1000083610917565b63ffffffff16116107a55760405162461bcd60e51b8152602060048201526014602482015273435649206d75737420626520706f73697469766560601b604482015260640161035a565b610741662386f26fc1000082610917565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610817578081fd5b81356001600160a01b0381168114610741578182fd5b60006020828403121561083e578081fd5b81358015158114610741578182fd5b60006020828403121561085e578081fd5b813561ffff81168114610741578182fd5b600060208284031215610880578081fd5b813561074181610991565b600080600080600060a086880312156108a2578081fd5b85516108ad81610991565b8095505060208601519350604086015192506060860151915060808601516108d481610991565b809150509295509295909350565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008261093257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156109515761095161097b565b500290565b600063ffffffff838116908316818110156109735761097361097b565b039392505050565b634e487b7160e01b600052601160045260246000fd5b69ffffffffffffffffffff811681146106a057600080fdfea26469706673582212208a5bb5d56c1d824a33195c90f64584aa74c1a16f7b08f934f2ff4f163b56220664736f6c63430008040033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063c1639a2b1161008c578063e0530f4211610066578063e0530f42146101f7578063e34a05d31461021e578063f2fde38b14610231578063fe1e33651461024457600080fd5b8063c1639a2b14610198578063d934c20b146101cd578063de40c5ae146101e457600080fd5b80632a1bab73146100d45780632c86d98e146101015780635a7b84b114610127578063715018a6146101565780638da5cb5b14610160578063986f396b14610185575b600080fd5b6001546100e990600160a81b900461ffff1681565b60405161ffff90911681526020015b60405180910390f35b60015461011590600160b81b900460ff1681565b60405160ff90911681526020016100f8565b61013a61013536600461086f565b610268565b6040805163ffffffff90931683526020830191909152016100f8565b61015e610330565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100f8565b61015e61019336600461082d565b61036f565b6101a06103b7565b6040805163ffffffff909416845269ffffffffffffffffffff9092166020840152908201526060016100f8565b6101d660025481565b6040519081526020016100f8565b60015461016d906001600160a01b031681565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b61015e61022c36600461084d565b6105bc565b61015e61023f366004610806565b610608565b60015461025890600160a01b900460ff1681565b60405190151581526020016100f8565b604051639a6fc8f560e01b815269ffffffffffffffffffff821660048201526000908190819081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639a6fc8f59060240160a06040518083038186803b1580156102dc57600080fd5b505afa1580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610314919061088b565b50935050925050809250610327826106a3565b93505050915091565b6000546001600160a01b031633146103635760405162461bcd60e51b815260040161035a906108e2565b60405180910390fd5b61036d60006107b6565b565b6000546001600160a01b031633146103995760405162461bcd60e51b815260040161035a906108e2565b60018054911515600160a01b0260ff60a01b19909216919091179055565b6000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561041957600080fd5b505afa15801561042d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610451919061088b565b50935050925092506000610464836106a3565b600154909150600160a01b900460ff16156105b05760015460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a0929190829003018186803b1580156104be57600080fd5b505afa1580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f6919061088b565b5050509150506000610507826106a3565b905060008363ffffffff168263ffffffff161161052d576105288285610956565b610537565b6105378483610956565b60015463ffffffff9182169250600160a81b900461ffff1690831661055e61271084610937565b6105689190610917565b11156105ac5760405162461bcd60e51b8152602060048201526013602482015272446576696174696f6e20746f6f206c6172676560681b604482015260640161035a565b5050505b96929550935090915050565b6000546001600160a01b031633146105e65760405162461bcd60e51b815260040161035a906108e2565b6001805461ffff909216600160a81b0261ffff60a81b19909216919091179055565b6000546001600160a01b031633146106325760405162461bcd60e51b815260040161035a906108e2565b6001600160a01b0381166106975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035a565b6106a0816107b6565b50565b60015460009081906106bf90600160b81b900460ff1684610937565b9050600254811115610748576000662386f26fc100006002546106e29190610917565b63ffffffff161161072c5760405162461bcd60e51b8152602060048201526014602482015273435649206d75737420626520706f73697469766560601b604482015260640161035a565b662386f26fc100006002546107419190610917565b9392505050565b600061075b662386f26fc1000083610917565b63ffffffff16116107a55760405162461bcd60e51b8152602060048201526014602482015273435649206d75737420626520706f73697469766560601b604482015260640161035a565b610741662386f26fc1000082610917565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610817578081fd5b81356001600160a01b0381168114610741578182fd5b60006020828403121561083e578081fd5b81358015158114610741578182fd5b60006020828403121561085e578081fd5b813561ffff81168114610741578182fd5b600060208284031215610880578081fd5b813561074181610991565b600080600080600060a086880312156108a2578081fd5b85516108ad81610991565b8095505060208601519350604086015192506060860151915060808601516108d481610991565b809150509295509295909350565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008261093257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156109515761095161097b565b500290565b600063ffffffff838116908316818110156109735761097361097b565b039392505050565b634e487b7160e01b600052601160045260246000fd5b69ffffffffffffffffffff811681146106a057600080fdfea26469706673582212208a5bb5d56c1d824a33195c90f64584aa74c1a16f7b08f934f2ff4f163b56220664736f6c63430008040033",
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 37156,
            "contract": "@coti-cvi/contracts-cvi/contracts/CVIOracle.sol:CVIOracle",
            "label": "_owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 78,
            "contract": "@coti-cvi/contracts-cvi/contracts/CVIOracle.sol:CVIOracle",
            "label": "cviDeviationAggregator",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(AggregatorV3Interface)16465"
          },
          {
            "astId": 81,
            "contract": "@coti-cvi/contracts-cvi/contracts/CVIOracle.sol:CVIOracle",
            "label": "deviationCheck",
            "offset": 20,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 84,
            "contract": "@coti-cvi/contracts-cvi/contracts/CVIOracle.sol:CVIOracle",
            "label": "maxDeviation",
            "offset": 21,
            "slot": "1",
            "type": "t_uint16"
          },
          {
            "astId": 86,
            "contract": "@coti-cvi/contracts-cvi/contracts/CVIOracle.sol:CVIOracle",
            "label": "leverage",
            "offset": 23,
            "slot": "1",
            "type": "t_uint8"
          },
          {
            "astId": 88,
            "contract": "@coti-cvi/contracts-cvi/contracts/CVIOracle.sol:CVIOracle",
            "label": "maxCVIValue",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)16465": {
            "encoding": "inplace",
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_uint16": {
            "encoding": "inplace",
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "creationBlock": 29537783,
      "history": [
        {
          "blockNumber": 21229465,
          "address": "0x844558b667bF494Dc465EccD9250Dee15748ef9d"
        }
      ]
    },
    "CVIUSDCFeesCalculator": {
      "address": "0xf77F5C9ab812D6f49cc4B9Fe1E8279cBb28E73d3",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ICVIOracle",
              "name": "_cviOracle",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "_maxCVIValue",
              "type": "uint16"
            },
            {
              "internalType": "uint8",
              "name": "_oracleLeverage",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "buyingPremiumFeeMaxPercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "buyingPremiumThreshold",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint8",
              "name": "_leverage",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "_lastTotalLeveragedTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_lastTotalPositionUnits",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_totalLeveragedTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_totalPositionUnits",
              "type": "uint256"
            }
          ],
          "name": "calculateBuyingPremiumFee",
          "outputs": [
            {
              "internalType": "uint168",
              "name": "buyingPremiumFee",
              "type": "uint168"
            },
            {
              "internalType": "uint16",
              "name": "combinedPremiumFeePercentage",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint8",
              "name": "_leverage",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "_lastTotalLeveragedTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_lastTotalPositionUnits",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_totalLeveragedTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_totalPositionUnits",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "_turbulenceIndicatorPercent",
              "type": "uint16"
            }
          ],
          "name": "calculateBuyingPremiumFeeWithAddendum",
          "outputs": [
            {
              "internalType": "uint168",
              "name": "buyingPremiumFee",
              "type": "uint168"
            },
            {
              "internalType": "uint16",
              "name": "combinedPremiumFeePercentage",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_creationTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isNoLockPositionAddress",
              "type": "bool"
            }
          ],
          "name": "calculateClosePositionFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "calculateClosingPremiumFee",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "premiumFeePercentage",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_totalLeveragedTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_totalPositionUnits",
              "type": "uint256"
            }
          ],
          "name": "calculateCollateralRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "period",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "cviValue",
                  "type": "uint32"
                }
              ],
              "internalType": "struct IFeesCalculator.CVIValue[]",
              "name": "_cviValues",
              "type": "tuple[]"
            },
            {
              "internalType": "uint256",
              "name": "_totalLeveragedTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_totalPositionUnits",
              "type": "uint256"
            }
          ],
          "name": "calculateSingleUnitFundingFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "fundingFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "period",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "cviValue",
                  "type": "uint32"
                }
              ],
              "internalType": "struct IFeesCalculator.CVIValue",
              "name": "_cviValue",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "_collateralRatio",
              "type": "uint256"
            }
          ],
          "name": "calculateSingleUnitPeriodFundingFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "fundingFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fundingFeeRatePercents",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "totalTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "newRounds",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_lastCVIValue",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_currCVIValue",
              "type": "uint32"
            }
          ],
          "name": "calculateTurbulenceIndicatorPercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "calculateWithdrawFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "closePositionFeeDecayPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "closePositionFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "closePositionLPFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "closePositionMaxFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "closingPremiumFeeMaxPercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "collateralToBuyingPremiumMapping",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "collateralToExtraFundingFeeMapping",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cviOracle",
          "outputs": [
            {
              "internalType": "contract ICVIOracle",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "depositFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fundingFeeConstantRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fundingFeeDivisionFactor",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fundingFeeMaxRate",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fundingFeeMinRate",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCollateralToBuyingPremiumMapping",
          "outputs": [
            {
              "internalType": "uint16[]",
              "name": "",
              "type": "uint16[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCollateralToExtraFundingFeeMapping",
          "outputs": [
            {
              "internalType": "uint32[]",
              "name": "",
              "type": "uint32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getFundingFeeCoefficients",
          "outputs": [
            {
              "internalType": "uint32[]",
              "name": "",
              "type": "uint32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxCVIValue",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxFundingFeeCviThreshold",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxTurbulenceFeePercentToTrim",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minFundingFeeCviThreshold",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "openPositionFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "openPositionFees",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "openPositionFeePercentResult",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "buyingPremiumFeeMaxPercentResult",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "openPositionLPFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "oracleHeartbeatPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "oracleLeverage",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newBuyingPremiumFeeMaxPercentage",
              "type": "uint16"
            }
          ],
          "name": "setBuyingPremiumFeeMax",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newBuyingPremiumThreshold",
              "type": "uint16"
            }
          ],
          "name": "setBuyingPremiumThreshold",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newClosePositionFeePercentage",
              "type": "uint16"
            }
          ],
          "name": "setClosePositionFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newClosePositionFeeDecayPeriod",
              "type": "uint256"
            }
          ],
          "name": "setClosePositionFeeDecay",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newClosePositionLPFeePercent",
              "type": "uint16"
            }
          ],
          "name": "setClosePositionLPFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newClosePositionMaxFeePercentage",
              "type": "uint16"
            }
          ],
          "name": "setClosePositionMaxFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newClosingPremiumFeeMaxPercentage",
              "type": "uint16"
            }
          ],
          "name": "setClosingPremiumFeeMax",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16[]",
              "name": "_newCollateralToBuyingPremiumMapping",
              "type": "uint16[]"
            }
          ],
          "name": "setCollateralToBuyingPremiumMapping",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32[]",
              "name": "_newCollateralToExtraFundingFeeMapping",
              "type": "uint32[]"
            }
          ],
          "name": "setCollateralToExtraFundingFeeMapping",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newDepositFeePercentage",
              "type": "uint16"
            }
          ],
          "name": "setDepositFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32[]",
              "name": "_newFundingFeeCoefficients",
              "type": "uint32[]"
            }
          ],
          "name": "setFundingFeeCoefficients",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newfundingFeeConstantRate",
              "type": "uint16"
            }
          ],
          "name": "setFundingFeeConstantRate",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_newFundingFeeDivisionFactor",
              "type": "uint32"
            }
          ],
          "name": "setFundingFeeDivisionFactor",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_newFundingFeeMaxRate",
              "type": "uint32"
            }
          ],
          "name": "setFundingFeeMaxRate",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_newFundingFeeMinRate",
              "type": "uint32"
            }
          ],
          "name": "setFundingFeeMinRate",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_newMaxFundingFeeCviThreshold",
              "type": "uint32"
            }
          ],
          "name": "setMaxFundingFeeCviThreshold",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newMaxTurbulenceFeePercentToTrim",
              "type": "uint16"
            }
          ],
          "name": "setMaxTurbulenceFeePercentToTrim",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_newMinFundingFeeCviThreshold",
              "type": "uint32"
            }
          ],
          "name": "setMinFundingFeeCviThreshold",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newOpenPositionFeePercentage",
              "type": "uint16"
            }
          ],
          "name": "setOpenPositionFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newOpenPositionLPFeePercent",
              "type": "uint16"
            }
          ],
          "name": "setOpenPositionLPFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract ICVIOracle",
              "name": "_cviOracle",
              "type": "address"
            }
          ],
          "name": "setOracle",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newOracleHeartbeatPeriod",
              "type": "uint256"
            }
          ],
          "name": "setOracleHeartbeatPeriod",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newUpdator",
              "type": "address"
            }
          ],
          "name": "setStateUpdator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IThetaVaultInfo",
              "name": "_thetaVault",
              "type": "address"
            }
          ],
          "name": "setThetaVault",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newTurbulenceDeviationPercentage",
              "type": "uint16"
            }
          ],
          "name": "setTurbulenceDeviationPercent",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newTurbulenceDeviationThresholdPercent",
              "type": "uint16"
            }
          ],
          "name": "setTurbulenceDeviationThresholdPercent",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newTurbulenceStepPercentage",
              "type": "uint16"
            }
          ],
          "name": "setTurbulenceStep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newWithdrawFeePercentage",
              "type": "uint16"
            }
          ],
          "name": "setWithdrawFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stateUpdator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "thetaVault",
          "outputs": [
            {
              "internalType": "contract IThetaVaultInfo",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "turbulenceDeviationPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "turbulenceDeviationThresholdPercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "turbulenceIndicatorPercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "turbulenceStepPercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_latestTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_blockTimestampSnapshot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_latestTimestampSnapshot",
              "type": "uint256"
            },
            {
              "internalType": "uint80",
              "name": "_latestOracleRoundId",
              "type": "uint80"
            },
            {
              "internalType": "uint256",
              "name": "_totalLeveragedTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_totalPositionUnits",
              "type": "uint256"
            }
          ],
          "name": "updateSnapshots",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "latestSnapshot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "singleUnitFundingFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalRounds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cviValueTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "newLatestRoundId",
                  "type": "uint80"
                },
                {
                  "internalType": "uint32",
                  "name": "cviValue",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "updatedSnapshot",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "updatedLatestRoundId",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "updatedLatestTimestamp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "updatedTurbulenceData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IFeesCalculator.SnapshotUpdate",
              "name": "snapshotUpdate",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_totalTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_newRounds",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_lastCVIValue",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_currCVIValue",
              "type": "uint32"
            }
          ],
          "name": "updateTurbulenceIndicatorPercent",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0xa348a6ab45188ee1f71849536b5a3b3af492e75f750027ec59774b8a69548453",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0xf77F5C9ab812D6f49cc4B9Fe1E8279cBb28E73d3",
        "transactionIndex": 3,
        "gasUsed": "15038375",
        "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000080000000000000000000000000000000000000000000000000000000400000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000880000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000020000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
        "blockHash": "0xa3195af074adaaf98c43e364b03c2c87931c01333ea049d7791300a11252cd9f",
        "transactionHash": "0xa348a6ab45188ee1f71849536b5a3b3af492e75f750027ec59774b8a69548453",
        "logs": [
          {
            "transactionIndex": 3,
            "blockNumber": 51806565,
            "transactionHash": "0xa348a6ab45188ee1f71849536b5a3b3af492e75f750027ec59774b8a69548453",
            "address": "0xf77F5C9ab812D6f49cc4B9Fe1E8279cBb28E73d3",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 2,
            "blockHash": "0xa3195af074adaaf98c43e364b03c2c87931c01333ea049d7791300a11252cd9f"
          }
        ],
        "blockNumber": 51806565,
        "cumulativeGasUsed": "16075503",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0x0000000000000000000000000000000000000000",
        "20000",
        1
      ],
      "numDeployments": 3,
      "solcInputHash": "efd66f4033c3ee3c585a06f2e8cc58c0",
      "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ICVIOracle\",\"name\":\"_cviOracle\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_maxCVIValue\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"_oracleLeverage\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyingPremiumFeeMaxPercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyingPremiumThreshold\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"_tokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint8\",\"name\":\"_leverage\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_lastTotalLeveragedTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lastTotalPositionUnits\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalLeveragedTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalPositionUnits\",\"type\":\"uint256\"}],\"name\":\"calculateBuyingPremiumFee\",\"outputs\":[{\"internalType\":\"uint168\",\"name\":\"buyingPremiumFee\",\"type\":\"uint168\"},{\"internalType\":\"uint16\",\"name\":\"combinedPremiumFeePercentage\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"_tokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint8\",\"name\":\"_leverage\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_lastTotalLeveragedTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lastTotalPositionUnits\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalLeveragedTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalPositionUnits\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_turbulenceIndicatorPercent\",\"type\":\"uint16\"}],\"name\":\"calculateBuyingPremiumFeeWithAddendum\",\"outputs\":[{\"internalType\":\"uint168\",\"name\":\"buyingPremiumFee\",\"type\":\"uint168\"},{\"internalType\":\"uint16\",\"name\":\"combinedPremiumFeePercentage\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_creationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isNoLockPositionAddress\",\"type\":\"bool\"}],\"name\":\"calculateClosePositionFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateClosingPremiumFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"premiumFeePercentage\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalLeveragedTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalPositionUnits\",\"type\":\"uint256\"}],\"name\":\"calculateCollateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"cviValue\",\"type\":\"uint32\"}],\"internalType\":\"struct IFeesCalculator.CVIValue[]\",\"name\":\"_cviValues\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_totalLeveragedTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalPositionUnits\",\"type\":\"uint256\"}],\"name\":\"calculateSingleUnitFundingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fundingFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"cviValue\",\"type\":\"uint32\"}],\"internalType\":\"struct IFeesCalculator.CVIValue\",\"name\":\"_cviValue\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_collateralRatio\",\"type\":\"uint256\"}],\"name\":\"calculateSingleUnitPeriodFundingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fundingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingFeeRatePercents\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newRounds\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_lastCVIValue\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_currCVIValue\",\"type\":\"uint32\"}],\"name\":\"calculateTurbulenceIndicatorPercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"calculateWithdrawFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closePositionFeeDecayPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closePositionFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closePositionLPFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closePositionMaxFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closingPremiumFeeMaxPercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collateralToBuyingPremiumMapping\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collateralToExtraFundingFeeMapping\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cviOracle\",\"outputs\":[{\"internalType\":\"contract ICVIOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingFeeConstantRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingFeeDivisionFactor\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingFeeMaxRate\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingFeeMinRate\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralToBuyingPremiumMapping\",\"outputs\":[{\"internalType\":\"uint16[]\",\"name\":\"\",\"type\":\"uint16[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralToExtraFundingFeeMapping\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFundingFeeCoefficients\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCVIValue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFundingFeeCviThreshold\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTurbulenceFeePercentToTrim\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFundingFeeCviThreshold\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openPositionFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openPositionFees\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"openPositionFeePercentResult\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"buyingPremiumFeeMaxPercentResult\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openPositionLPFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleHeartbeatPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleLeverage\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newBuyingPremiumFeeMaxPercentage\",\"type\":\"uint16\"}],\"name\":\"setBuyingPremiumFeeMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newBuyingPremiumThreshold\",\"type\":\"uint16\"}],\"name\":\"setBuyingPremiumThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newClosePositionFeePercentage\",\"type\":\"uint16\"}],\"name\":\"setClosePositionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newClosePositionFeeDecayPeriod\",\"type\":\"uint256\"}],\"name\":\"setClosePositionFeeDecay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newClosePositionLPFeePercent\",\"type\":\"uint16\"}],\"name\":\"setClosePositionLPFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newClosePositionMaxFeePercentage\",\"type\":\"uint16\"}],\"name\":\"setClosePositionMaxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newClosingPremiumFeeMaxPercentage\",\"type\":\"uint16\"}],\"name\":\"setClosingPremiumFeeMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16[]\",\"name\":\"_newCollateralToBuyingPremiumMapping\",\"type\":\"uint16[]\"}],\"name\":\"setCollateralToBuyingPremiumMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"_newCollateralToExtraFundingFeeMapping\",\"type\":\"uint32[]\"}],\"name\":\"setCollateralToExtraFundingFeeMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newDepositFeePercentage\",\"type\":\"uint16\"}],\"name\":\"setDepositFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"_newFundingFeeCoefficients\",\"type\":\"uint32[]\"}],\"name\":\"setFundingFeeCoefficients\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newfundingFeeConstantRate\",\"type\":\"uint16\"}],\"name\":\"setFundingFeeConstantRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newFundingFeeDivisionFactor\",\"type\":\"uint32\"}],\"name\":\"setFundingFeeDivisionFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newFundingFeeMaxRate\",\"type\":\"uint32\"}],\"name\":\"setFundingFeeMaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newFundingFeeMinRate\",\"type\":\"uint32\"}],\"name\":\"setFundingFeeMinRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newMaxFundingFeeCviThreshold\",\"type\":\"uint32\"}],\"name\":\"setMaxFundingFeeCviThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newMaxTurbulenceFeePercentToTrim\",\"type\":\"uint16\"}],\"name\":\"setMaxTurbulenceFeePercentToTrim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newMinFundingFeeCviThreshold\",\"type\":\"uint32\"}],\"name\":\"setMinFundingFeeCviThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newOpenPositionFeePercentage\",\"type\":\"uint16\"}],\"name\":\"setOpenPositionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newOpenPositionLPFeePercent\",\"type\":\"uint16\"}],\"name\":\"setOpenPositionLPFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICVIOracle\",\"name\":\"_cviOracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newOracleHeartbeatPeriod\",\"type\":\"uint256\"}],\"name\":\"setOracleHeartbeatPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newUpdator\",\"type\":\"address\"}],\"name\":\"setStateUpdator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IThetaVaultInfo\",\"name\":\"_thetaVault\",\"type\":\"address\"}],\"name\":\"setThetaVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newTurbulenceDeviationPercentage\",\"type\":\"uint16\"}],\"name\":\"setTurbulenceDeviationPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newTurbulenceDeviationThresholdPercent\",\"type\":\"uint16\"}],\"name\":\"setTurbulenceDeviationThresholdPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newTurbulenceStepPercentage\",\"type\":\"uint16\"}],\"name\":\"setTurbulenceStep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newWithdrawFeePercentage\",\"type\":\"uint16\"}],\"name\":\"setWithdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stateUpdator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thetaVault\",\"outputs\":[{\"internalType\":\"contract IThetaVaultInfo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"turbulenceDeviationPercentage\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"turbulenceDeviationThresholdPercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"turbulenceIndicatorPercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"turbulenceStepPercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_latestTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_blockTimestampSnapshot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_latestTimestampSnapshot\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"_latestOracleRoundId\",\"type\":\"uint80\"},{\"internalType\":\"uint256\",\"name\":\"_totalLeveragedTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalPositionUnits\",\"type\":\"uint256\"}],\"name\":\"updateSnapshots\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"latestSnapshot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"singleUnitFundingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRounds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cviValueTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"newLatestRoundId\",\"type\":\"uint80\"},{\"internalType\":\"uint32\",\"name\":\"cviValue\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"updatedSnapshot\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updatedLatestRoundId\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updatedLatestTimestamp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updatedTurbulenceData\",\"type\":\"bool\"}],\"internalType\":\"struct IFeesCalculator.SnapshotUpdate\",\"name\":\"snapshotUpdate\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newRounds\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_lastCVIValue\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_currCVIValue\",\"type\":\"uint32\"}],\"name\":\"updateTurbulenceIndicatorPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/platform/FeesCalculatorContracts.sol\":\"CVIUSDCFeesCalculator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@coti-cvi/contracts-cvi/contracts/FeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./interfaces/IFeesCalculator.sol\\\";\\n\\ncontract FeesCalculator is IFeesCalculator, Ownable {\\n\\n    uint256 private constant PRECISION_DECIMALS = 1e10;\\n\\n    uint256 private constant FUNDING_FEE_BASE_PERIOD = 1 days;\\n\\n    uint256 private constant MAX_FUNDING_FEE_PERCENTAGE = 1000000;\\n    uint16 private constant CVI_DECIMALS = 100;\\n\\n    uint16 private constant MAX_PERCENTAGE = 10000;\\n\\n    uint16 private constant COLATERAL_VALUES_NUM = 101; // From 0.00 to 1.00 inclusive\\n\\n    uint32 public fundingFeeMinRate = 2000;\\n    uint32 public fundingFeeMaxRate = 100000;\\n\\n    uint32 public minFundingFeeCviThreshold = 150;\\n    uint32 public maxFundingFeeCviThreshold = 50;\\n    uint32 public fundingFeeDivisionFactor = 5;\\n\\n    uint32[] private fundingFeeCoefficients = [100000, 114869, 131950, 151571, 174110];\\n\\n    uint32 public maxCVIValue;\\n\\n    uint16 public override depositFeePercent = 0;\\n    uint16 public override withdrawFeePercent = 0;\\n    uint16 public override openPositionFeePercent = 15;\\n    uint16 public override openPositionLPFeePercent = 15;\\n    uint16 public override closePositionLPFeePercent = 0;\\n    uint16 public buyingPremiumFeeMaxPercent = 1000;\\n    uint16 public closingPremiumFeeMaxPercent = 1000;\\n    uint16 public override closePositionFeePercent = 30;\\n\\n    uint16 public buyingPremiumThreshold = 6500; // 1.0 is MAX_PERCENTAGE = 10000\\n\\n    uint16 public closePositionMaxFeePercent = 300;\\n\\n    uint16 public maxTurbulenceFeePercentToTrim = 100;\\n    uint16 public turbulenceStepPercent = 1000;\\n    uint16 public override turbulenceIndicatorPercent = 0;\\n\\n    uint256 public oracleHeartbeatPeriod = 55 minutes;\\n    uint256 public closePositionFeeDecayPeriod = 24 hours;\\n    uint256 public fundingFeeConstantRate = 3000;\\n\\n    uint16 public turbulenceDeviationThresholdPercent = 7000; // 1.0 is MAX_PERCENTAGE = 10000\\n    uint16 public turbulenceDeviationPercentage = 500; // 1.0 is MAX_PERCENTAGE = 10000\\n    uint8 public override oracleLeverage = 1;\\n\\n    uint16[] public collateralToBuyingPremiumMapping = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 6, 8, 9, 11, 14, 16, 20, 24, 29, 35, 42, 52, 63, 77, 94, 115, 140, 172, 212, 261, 323, 399, 495, 615, 765, 953, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000];\\n    uint32[] public collateralToExtraFundingFeeMapping = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\n\\n    ICVIOracle public cviOracle;\\n    IThetaVaultInfo public thetaVault;\\n    address public stateUpdator;\\n\\n    modifier onlyStateUpdator {\\n        require(msg.sender == stateUpdator, \\\"Not allowed\\\");\\n        _;\\n    }\\n\\n    constructor(ICVIOracle _cviOracle, uint32 _maxCVIValue, uint8 _oracleLeverage) {\\n        maxCVIValue = _maxCVIValue;\\n        cviOracle = _cviOracle;\\n        oracleLeverage = _oracleLeverage;\\n    }\\n\\n    function updateTurbulenceIndicatorPercent(uint256 _totalTime, uint256 _newRounds, uint32 _lastCVIValue, uint32 _currCVIValue) external override onlyStateUpdator {\\n        uint16 updatedTurbulenceIndicatorPercent = calculateTurbulenceIndicatorPercent(_totalTime, _newRounds, _lastCVIValue, _currCVIValue);\\n\\n        if (updatedTurbulenceIndicatorPercent != turbulenceIndicatorPercent) {\\n            turbulenceIndicatorPercent = updatedTurbulenceIndicatorPercent;\\n        }\\n    }\\n\\n    function setOracle(ICVIOracle _cviOracle) external override onlyOwner {\\n        cviOracle = _cviOracle;\\n    }\\n\\n    function setThetaVault(IThetaVaultInfo _thetaVault) external override onlyOwner {\\n        thetaVault = _thetaVault;\\n    }\\n\\n    function setFundingFeeMinRate(uint32 _newFundingFeeMinRate) external override onlyOwner {\\n        fundingFeeMinRate = _newFundingFeeMinRate;\\n    }\\n\\n    function setFundingFeeMaxRate(uint32 _newFundingFeeMaxRate) external override onlyOwner {\\n        fundingFeeMaxRate = _newFundingFeeMaxRate;\\n    }\\n\\n    function setMinFundingFeeCviThreshold(uint32 _newMinFundingFeeCviThreshold) external override onlyOwner {\\n        minFundingFeeCviThreshold = _newMinFundingFeeCviThreshold;\\n    }\\n\\n    function setMaxFundingFeeCviThreshold(uint32 _newMaxFundingFeeCviThreshold) external override onlyOwner {\\n        maxFundingFeeCviThreshold = _newMaxFundingFeeCviThreshold;\\n    }\\n\\n    function setFundingFeeDivisionFactor(uint32 _newFundingFeeDivisionFactor) external override onlyOwner {\\n        fundingFeeDivisionFactor = _newFundingFeeDivisionFactor;\\n    }\\n\\n    function setFundingFeeCoefficients(uint32[] calldata _newFundingFeeCoefficients) external override onlyOwner {\\n        require(_newFundingFeeCoefficients.length == fundingFeeDivisionFactor, \\\"Bad size\\\");\\n        fundingFeeCoefficients = _newFundingFeeCoefficients;\\n    }\\n\\n    function setStateUpdator(address _newUpdator) external override onlyOwner {\\n        stateUpdator = _newUpdator;\\n    }\\n\\n    function setDepositFee(uint16 _newDepositFeePercentage) external override onlyOwner {\\n        require(_newDepositFeePercentage < MAX_PERCENTAGE, \\\"Fee exceeds maximum\\\");\\n        depositFeePercent = _newDepositFeePercentage;\\n    }\\n\\n    function setWithdrawFee(uint16 _newWithdrawFeePercentage) external override onlyOwner {\\n        require(_newWithdrawFeePercentage < MAX_PERCENTAGE, \\\"Fee exceeds maximum\\\");\\n        withdrawFeePercent = _newWithdrawFeePercentage;\\n    }\\n\\n    function setOpenPositionFee(uint16 _newOpenPositionFeePercentage) external override onlyOwner {\\n        require(_newOpenPositionFeePercentage < MAX_PERCENTAGE, \\\"Fee exceeds maximum\\\");\\n        openPositionFeePercent = _newOpenPositionFeePercentage;\\n    }\\n\\n    function setClosePositionFee(uint16 _newClosePositionFeePercentage) external override onlyOwner {\\n        require(_newClosePositionFeePercentage < MAX_PERCENTAGE, \\\"Fee exceeds maximum\\\");\\n        require(_newClosePositionFeePercentage <= closePositionMaxFeePercent, \\\"Min fee above max fee\\\");\\n        closePositionFeePercent = _newClosePositionFeePercentage;\\n    }\\n\\n    function setOpenPositionLPFee(uint16 _newOpenPositionLPFeePercent) external override onlyOwner {\\n        require(_newOpenPositionLPFeePercent < MAX_PERCENTAGE, \\\"Fee exceeds maximum\\\");\\n        openPositionLPFeePercent = _newOpenPositionLPFeePercent;\\n    }\\n\\n    function setClosePositionLPFee(uint16 _newClosePositionLPFeePercent) external override onlyOwner {\\n        require(_newClosePositionLPFeePercent < MAX_PERCENTAGE, \\\"Fee exceeds maximum\\\");\\n        closePositionLPFeePercent = _newClosePositionLPFeePercent;\\n    }\\n\\n    function setClosePositionMaxFee(uint16 _newClosePositionMaxFeePercentage) external override onlyOwner {\\n        require(_newClosePositionMaxFeePercentage < MAX_PERCENTAGE, \\\"Fee exceeds maximum\\\");\\n        require(_newClosePositionMaxFeePercentage >= closePositionFeePercent, \\\"Max fee below min fee\\\");\\n        closePositionMaxFeePercent = _newClosePositionMaxFeePercentage;\\n    }\\n\\n    function setClosePositionFeeDecay(uint256 _newClosePositionFeeDecayPeriod) external override onlyOwner {\\n        require(_newClosePositionFeeDecayPeriod > 0, \\\"Period must be positive\\\");\\n        closePositionFeeDecayPeriod = _newClosePositionFeeDecayPeriod;\\n    }\\n\\n    function setOracleHeartbeatPeriod(uint256 _newOracleHeartbeatPeriod) external override onlyOwner {\\n        require(_newOracleHeartbeatPeriod > 0, \\\"Heartbeat must be positive\\\");\\n        oracleHeartbeatPeriod = _newOracleHeartbeatPeriod;\\n    }\\n\\n    function setBuyingPremiumFeeMax(uint16 _newBuyingPremiumFeeMaxPercentage) external override onlyOwner {\\n        require(_newBuyingPremiumFeeMaxPercentage < MAX_PERCENTAGE, \\\"Fee exceeds maximum\\\");\\n        buyingPremiumFeeMaxPercent = _newBuyingPremiumFeeMaxPercentage;\\n    }\\n\\n    function setBuyingPremiumThreshold(uint16 _newBuyingPremiumThreshold) external override onlyOwner {\\n        require(_newBuyingPremiumThreshold < MAX_PERCENTAGE, \\\"Threshold exceeds maximum\\\");\\n        buyingPremiumThreshold = _newBuyingPremiumThreshold;   \\n    }\\n\\n    function setClosingPremiumFeeMax(uint16 _newClosingPremiumFeeMaxPercentage) external override onlyOwner {\\n        require(_newClosingPremiumFeeMaxPercentage < MAX_PERCENTAGE, \\\"Fee exceeds maximum\\\");\\n        closingPremiumFeeMaxPercent = _newClosingPremiumFeeMaxPercentage;\\n    }\\n\\n    function setCollateralToBuyingPremiumMapping(uint16[] calldata _newCollateralToBuyingPremiumMapping) external override onlyOwner {\\n        require(_newCollateralToBuyingPremiumMapping.length == COLATERAL_VALUES_NUM, \\\"Bad mapping size\\\");\\n        collateralToBuyingPremiumMapping = _newCollateralToBuyingPremiumMapping;\\n    }\\n\\n    function setFundingFeeConstantRate(uint16 _newfundingFeeConstantRate) external override onlyOwner {\\n        require(_newfundingFeeConstantRate < fundingFeeMaxRate, \\\"Fee exceeds maximum\\\");\\n        fundingFeeConstantRate = _newfundingFeeConstantRate;\\n    }\\n\\n    function setCollateralToExtraFundingFeeMapping(uint32[] calldata _newCollateralToExtraFundingFeeMapping) external override onlyOwner {\\n        require(_newCollateralToExtraFundingFeeMapping.length == COLATERAL_VALUES_NUM, \\\"Bad mapping size\\\");\\n        collateralToExtraFundingFeeMapping = _newCollateralToExtraFundingFeeMapping;\\n    }\\n\\n    function setTurbulenceStep(uint16 _newTurbulenceStepPercentage) external override onlyOwner {\\n        require(_newTurbulenceStepPercentage < MAX_PERCENTAGE, \\\"Step exceeds maximum\\\");\\n        turbulenceStepPercent = _newTurbulenceStepPercentage;\\n    }\\n    \\n    function setMaxTurbulenceFeePercentToTrim(uint16 _newMaxTurbulenceFeePercentToTrim) external override onlyOwner {\\n        require(_newMaxTurbulenceFeePercentToTrim < MAX_PERCENTAGE, \\\"Fee exceeds maximum\\\");\\n        maxTurbulenceFeePercentToTrim = _newMaxTurbulenceFeePercentToTrim;\\n    }\\n\\n     function setTurbulenceDeviationThresholdPercent(uint16 _newTurbulenceDeviationThresholdPercent) external override onlyOwner {\\n        require(_newTurbulenceDeviationThresholdPercent < MAX_PERCENTAGE, \\\"Threshold exceeds maximum\\\");\\n        turbulenceDeviationThresholdPercent = _newTurbulenceDeviationThresholdPercent;\\n    }\\n\\n    function setTurbulenceDeviationPercent(uint16 _newTurbulenceDeviationPercentage) external override onlyOwner {\\n        require(_newTurbulenceDeviationPercentage < MAX_PERCENTAGE, \\\"Deviation exceeds maximum\\\");\\n        turbulenceDeviationPercentage = _newTurbulenceDeviationPercentage;\\n    }\\n\\n    function calculateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 _lastCVIValue, uint32 _currCVIValue) public view override returns (uint16) {\\n        uint16 updatedTurbulenceIndicatorPercent = turbulenceIndicatorPercent;\\n\\n        uint256 CVIDeltaPercent = uint256(_currCVIValue > _lastCVIValue ? (_currCVIValue - _lastCVIValue) : (_lastCVIValue - _currCVIValue)) * MAX_PERCENTAGE / _lastCVIValue;\\n        uint256 maxAllowedTurbulenceTimes = CVIDeltaPercent * MAX_PERCENTAGE / (uint256(turbulenceDeviationThresholdPercent) * turbulenceDeviationPercentage);\\n\\n        uint256 decayTimes = 0;\\n        uint256 turbulenceTimes = 0;\\n        uint256 totalHeartbeats = totalTime / oracleHeartbeatPeriod;\\n        if (newRounds > totalHeartbeats) {\\n            turbulenceTimes = newRounds - totalHeartbeats;\\n            turbulenceTimes = turbulenceTimes >  maxAllowedTurbulenceTimes ? maxAllowedTurbulenceTimes : turbulenceTimes;\\n            decayTimes = newRounds - turbulenceTimes;\\n        } else {\\n            decayTimes = newRounds;\\n        }\\n\\n        for (uint256 i = 0; i < decayTimes; i++) {\\n            updatedTurbulenceIndicatorPercent = updatedTurbulenceIndicatorPercent / 2;\\n        }\\n\\n        if (updatedTurbulenceIndicatorPercent < maxTurbulenceFeePercentToTrim) {\\n            updatedTurbulenceIndicatorPercent = 0;\\n        }\\n\\n        for (uint256 i = 0; i < turbulenceTimes; i++) {\\n            updatedTurbulenceIndicatorPercent = updatedTurbulenceIndicatorPercent + uint16(uint256(buyingPremiumFeeMaxPercent) * turbulenceStepPercent / MAX_PERCENTAGE);\\n        }\\n\\n        if (updatedTurbulenceIndicatorPercent > buyingPremiumFeeMaxPercent) {\\n            updatedTurbulenceIndicatorPercent = buyingPremiumFeeMaxPercent;\\n        }\\n\\n        return updatedTurbulenceIndicatorPercent;\\n    }\\n\\n    function calculateBuyingPremiumFee(uint168 _tokenAmount, uint8 _leverage, uint256 _lastTotalLeveragedTokens, uint256 _lastTotalPositionUnits, uint256 _totalLeveragedTokens, uint256 _totalPositionUnits) external view override returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage) {\\n        (buyingPremiumFee, combinedPremiumFeePercentage) =  _calculateBuyingPremiumFeeWithParameters(_tokenAmount, _leverage, _lastTotalLeveragedTokens, _lastTotalPositionUnits, _totalLeveragedTokens, _totalPositionUnits, turbulenceIndicatorPercent);\\n    }\\n    \\n    function calculateBuyingPremiumFeeWithAddendum(uint168 _tokenAmount, uint8 _leverage, uint256 _lastTotalLeveragedTokens, uint256 _lastTotalPositionUnits, uint256 _totalLeveragedTokens, uint256 _totalPositionUnits, uint16 _turbulenceIndicatorPercent) external view override returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage) {\\n        (buyingPremiumFee, combinedPremiumFeePercentage) = _calculateBuyingPremiumFeeWithParameters(_tokenAmount, _leverage,\\n            _lastTotalLeveragedTokens, _lastTotalPositionUnits, _totalLeveragedTokens, _totalPositionUnits, _turbulenceIndicatorPercent);\\n    }\\n\\n    function calculateClosingPremiumFee() external view override returns (uint16 premiumFeePercentage) {\\n        return closePositionLPFeePercent;\\n    }\\n\\n    function calculateSingleUnitFundingFee(CVIValue[] memory _cviValues, uint256 _totalLeveragedTokens, uint256 _totalPositionUnits) public override view returns (uint256 fundingFee) {\\n        uint256 collateralRatio = calculateCollateralRatio(_totalLeveragedTokens, _totalPositionUnits);\\n\\n        for (uint8 i = 0; i < _cviValues.length; i++) {\\n            (uint256 currFundingFee,) = calculateSingleUnitPeriodFundingFee(_cviValues[i], collateralRatio);\\n            fundingFee = fundingFee + currFundingFee;\\n        }\\n    }\\n\\n    function updateSnapshots(uint256 _latestTimestamp, uint256 _blockTimestampSnapshot, uint256 _latestTimestampSnapshot, uint80 _latestOracleRoundId, uint256 _totalLeveragedTokens, uint256 _totalPositionUnits) external override view returns (SnapshotUpdate memory snapshotUpdate) {\\n        (uint32 cviValue, uint80 periodEndRoundId, uint256 periodEndTimestamp) = cviOracle.getCVILatestRoundData();\\n        snapshotUpdate.cviValue = cviValue;\\n        snapshotUpdate.cviValueTimestamp = periodEndTimestamp;\\n\\n        snapshotUpdate.latestSnapshot = _blockTimestampSnapshot;\\n        if (snapshotUpdate.latestSnapshot != 0) { // Block was already updated\\n            snapshotUpdate.singleUnitFundingFee = 0;\\n            return snapshotUpdate;\\n        }\\n\\n        if (_latestTimestamp == 0) { // For first recorded block\\n            snapshotUpdate.latestSnapshot = PRECISION_DECIMALS;\\n            snapshotUpdate.updatedSnapshot = true;\\n            snapshotUpdate.newLatestRoundId = periodEndRoundId;\\n            snapshotUpdate.updatedLatestRoundId = true;\\n            snapshotUpdate.updatedLatestTimestamp = true;\\n            snapshotUpdate.singleUnitFundingFee = 0;\\n            return snapshotUpdate;\\n        }\\n\\n        uint80 periodStartRoundId = _latestOracleRoundId;\\n        require(periodEndRoundId >= periodStartRoundId, \\\"Bad round id\\\");\\n\\n        snapshotUpdate.totalRounds = periodEndRoundId - periodStartRoundId;\\n\\n        IFeesCalculator.CVIValue[] memory cviValues = new IFeesCalculator.CVIValue[](snapshotUpdate.totalRounds > 0 ? 2 : 1);\\n        \\n        if (snapshotUpdate.totalRounds > 0) {\\n            (uint32 periodStartCVIValue, uint256 periodStartTimestamp) = cviOracle.getCVIRoundData(periodStartRoundId);\\n            cviValues[0] = IFeesCalculator.CVIValue(periodEndTimestamp - _latestTimestamp, periodStartCVIValue);\\n            cviValues[1] = IFeesCalculator.CVIValue(block.timestamp - periodEndTimestamp, cviValue);\\n\\n            snapshotUpdate.newLatestRoundId = periodEndRoundId;\\n            snapshotUpdate.updatedLatestRoundId = true;\\n\\n            snapshotUpdate.totalTime = periodEndTimestamp - periodStartTimestamp;\\n            snapshotUpdate.updatedTurbulenceData = true;\\n        } else {\\n            cviValues[0] = IFeesCalculator.CVIValue(block.timestamp - _latestTimestamp, cviValue);\\n        }\\n\\n        snapshotUpdate.singleUnitFundingFee = calculateSingleUnitFundingFee(cviValues, _totalLeveragedTokens, _totalPositionUnits);\\n        snapshotUpdate.latestSnapshot = _latestTimestampSnapshot + snapshotUpdate.singleUnitFundingFee;\\n        snapshotUpdate.updatedSnapshot = true;\\n        snapshotUpdate.updatedLatestTimestamp = true;\\n    }\\n\\n    function calculateClosePositionFeePercent(uint256 _creationTimestamp, bool _isNoLockPositionAddress) external view override returns (uint16) {\\n        if (block.timestamp - _creationTimestamp >= closePositionFeeDecayPeriod || _isNoLockPositionAddress) {\\n            return closePositionFeePercent;\\n        }\\n\\n        uint16 decay = uint16((closePositionMaxFeePercent - closePositionFeePercent) * (block.timestamp - _creationTimestamp) / \\n            closePositionFeeDecayPeriod);\\n        return closePositionMaxFeePercent - decay;\\n    }\\n\\n    function calculateWithdrawFeePercent(uint256) external view override returns (uint16) {\\n        return withdrawFeePercent;\\n    }\\n\\n    function openPositionFees() external view override returns (uint16 openPositionFeePercentResult, uint16 buyingPremiumFeeMaxPercentResult) {\\n        openPositionFeePercentResult = openPositionFeePercent;\\n        buyingPremiumFeeMaxPercentResult = buyingPremiumFeeMaxPercent;\\n    }\\n\\n    function calculateSingleUnitPeriodFundingFee(CVIValue memory _cviValue, uint256 _collateralRatio) public view override returns (uint256 fundingFee, uint256 fundingFeeRatePercents) {\\n        if (_cviValue.cviValue == 0 || _cviValue.period == 0) {\\n            return (0, 0);\\n        }\\n\\n        fundingFeeRatePercents = fundingFeeMaxRate;\\n        uint32 integerCVIValue = _cviValue.cviValue / oracleLeverage / CVI_DECIMALS;\\n        if (integerCVIValue > maxFundingFeeCviThreshold) {\\n            if (integerCVIValue >= minFundingFeeCviThreshold) {\\n                fundingFeeRatePercents = fundingFeeMinRate;\\n            } else {\\n\\n                uint256 exponent = (integerCVIValue - maxFundingFeeCviThreshold) / fundingFeeDivisionFactor;\\n                uint256 coefficientIndex = (integerCVIValue - maxFundingFeeCviThreshold) % fundingFeeDivisionFactor;\\n\\n                // Note: overflow is not possible as the exponent can only get larger, and other parts are constants\\n                // However, 2 ** exponent can overflow if cvi value is wrong\\n\\n                require(exponent < 256, \\\"exponent overflow\\\");\\n                fundingFeeRatePercents = PRECISION_DECIMALS / (2 ** exponent) / fundingFeeCoefficients[coefficientIndex] + fundingFeeConstantRate;\\n            }\\n        }\\n\\n        uint256 index = _collateralRatio * 10**2 / PRECISION_DECIMALS;\\n        fundingFeeRatePercents += collateralToExtraFundingFeeMapping[index >= collateralToExtraFundingFeeMapping.length ? collateralToExtraFundingFeeMapping.length - 1 : index];\\n\\n        if (fundingFeeRatePercents > fundingFeeMaxRate) {\\n            fundingFeeRatePercents = fundingFeeMaxRate;\\n        }\\n\\n        fundingFee = PRECISION_DECIMALS * fundingFeeRatePercents * _cviValue.period * _cviValue.cviValue /\\n            FUNDING_FEE_BASE_PERIOD / MAX_FUNDING_FEE_PERCENTAGE / maxCVIValue;\\n    }\\n\\n    function _calculateBuyingPremiumFeeWithParameters(uint168 _tokenAmount, uint8 _leverage, uint256 _lastTotalLeveragedTokens, uint256 _lastTotalPositionUnits, uint256 _totalLeveragedTokens, uint256 _totalPositionUnits, uint16 _turbulenceIndicatorPercent) private view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage) {\\n        uint256 collateralRatio = calculateCollateralRatio(_totalLeveragedTokens, _totalPositionUnits);\\n        uint256 lastCollateralRatio = calculateCollateralRatio(_lastTotalLeveragedTokens, _lastTotalPositionUnits);\\n\\n        uint16 buyingPremiumFeePercentage = 0;\\n        if (collateralRatio >= PRECISION_DECIMALS) {\\n            buyingPremiumFeePercentage = calculateRelativePercentage(buyingPremiumFeeMaxPercent, collateralRatio, lastCollateralRatio);\\n        } else {\\n            if (collateralRatio >= buyingPremiumThreshold * PRECISION_DECIMALS / MAX_PERCENTAGE) {\\n                buyingPremiumFeePercentage = calculateRelativePercentage(collateralToBuyingPremiumMapping[collateralRatio * 10**2 / PRECISION_DECIMALS], collateralRatio, lastCollateralRatio);\\n            }\\n        }\\n\\n        combinedPremiumFeePercentage = openPositionLPFeePercent + _turbulenceIndicatorPercent + buyingPremiumFeePercentage;\\n        if (combinedPremiumFeePercentage > buyingPremiumFeeMaxPercent) {\\n            combinedPremiumFeePercentage = buyingPremiumFeeMaxPercent;\\n        }\\n\\n        uint256 __buyingPremiumFee = uint256(_tokenAmount) * _leverage * combinedPremiumFeePercentage / MAX_PERCENTAGE;\\n        buyingPremiumFee = uint168(__buyingPremiumFee);\\n        require(__buyingPremiumFee == buyingPremiumFee, \\\"Too much tokens\\\");\\n    }\\n\\n    function calculateCollateralRatio(uint256 _totalLeveragedTokens, uint256 _totalPositionUnits) public view override returns (uint256 collateralRatio) {\\n        uint256 vaultPositionUnits = 0;\\n\\n        if (address(thetaVault) != address(0)) {\\n            vaultPositionUnits = thetaVault.vaultPositionUnits();\\n        }\\n\\n        collateralRatio = _totalLeveragedTokens == 0 ? 0 : (_totalPositionUnits - vaultPositionUnits) * PRECISION_DECIMALS / _totalLeveragedTokens;\\n    }\\n    \\n    function calculateRelativePercentage(uint16 _percentage, uint256 _collateralRatio, uint256 _lastCollateralRatio) private view returns (uint16) {\\n        if (_lastCollateralRatio >= buyingPremiumThreshold * PRECISION_DECIMALS / MAX_PERCENTAGE || _collateralRatio == _lastCollateralRatio) {\\n            return _percentage;\\n        }\\n\\n        return uint16(_percentage * (_collateralRatio - buyingPremiumThreshold * PRECISION_DECIMALS / MAX_PERCENTAGE) / (_collateralRatio - _lastCollateralRatio));\\n    }\\n\\n    function getCollateralToBuyingPremiumMapping() external view override returns(uint16[] memory) {\\n        return collateralToBuyingPremiumMapping;\\n    }\\n\\n    function getCollateralToExtraFundingFeeMapping() external view override returns(uint32[] memory) {\\n        return collateralToExtraFundingFeeMapping;\\n    }\\n\\n    function getFundingFeeCoefficients() external view override returns(uint32[] memory) {\\n        return fundingFeeCoefficients;\\n    }\\n}\\n\",\"keccak256\":\"0x1923a324f6f781bb718b45c84add1c09a78cd6d222d437020f4f254021666233\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ICVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ICVIOracle {\\n    function getCVIRoundData(uint80 roundId) external view returns (uint32 cviValue, uint256 cviTimestamp);\\n    function getCVILatestRoundData() external view returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp);\\n\\n    function setDeviationCheck(bool newDeviationCheck) external;\\n    function setMaxDeviation(uint16 newMaxDeviation) external;\\n}\\n\",\"keccak256\":\"0xf1871b2e9219f7a11e63d8e3276b7a0a46d8d726d54e385a6326dbdb2bcb1bad\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IThetaVaultInfo.sol\\\";\\n\\ninterface IFeesCalculator {\\n\\n    struct CVIValue {\\n        uint256 period;\\n        uint32 cviValue;\\n    }\\n\\n    struct SnapshotUpdate {\\n        uint256 latestSnapshot;\\n        uint256 singleUnitFundingFee;\\n        uint256 totalTime;\\n        uint256 totalRounds;\\n        uint256 cviValueTimestamp;\\n        uint80 newLatestRoundId;\\n        uint32 cviValue;\\n        bool updatedSnapshot;\\n        bool updatedLatestRoundId;\\n        bool updatedLatestTimestamp;\\n        bool updatedTurbulenceData;\\n    }\\n\\n    function updateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 lastCVIValue, uint32 currCVIValue) external;\\n\\n    function setOracle(ICVIOracle cviOracle) external;\\n    function setThetaVault(IThetaVaultInfo thetaVault) external;\\n\\n    function setStateUpdator(address newUpdator) external;\\n\\n    function setFundingFeeMinRate(uint32 newFundingFeeMinRate) external;\\n    function setFundingFeeMaxRate(uint32 newFundingFeeMaxRate) external;\\n    function setMinFundingFeeCviThreshold(uint32 newMinFundingFeeCviThreshold) external;\\n    function setMaxFundingFeeCviThreshold(uint32 newMaxFundingFeeCviThreshold) external;\\n    function setFundingFeeDivisionFactor(uint32 newFundingFeeDivisionFactor) external;\\n    function setFundingFeeCoefficients(uint32[] calldata newFundingFeeCoefficients) external;\\n\\n    function setDepositFee(uint16 newDepositFeePercentage) external;\\n    function setWithdrawFee(uint16 newWithdrawFeePercentage) external;\\n    function setOpenPositionFee(uint16 newOpenPositionFeePercentage) external;\\n    function setOpenPositionLPFee(uint16 newOpenPositionLPFeePercent) external;\\n    function setClosePositionLPFee(uint16 newClosePositionLPFeePercent) external;\\n    function setClosePositionFee(uint16 newClosePositionFeePercentage) external;\\n    function setClosePositionMaxFee(uint16 newClosePositionMaxFeePercentage) external;\\n    function setClosePositionFeeDecay(uint256 newClosePositionFeeDecayPeriod) external;\\n    \\n    function setOracleHeartbeatPeriod(uint256 newOracleHeartbeatPeriod) external;\\n    function setBuyingPremiumFeeMax(uint16 newBuyingPremiumFeeMaxPercentage) external;\\n    function setBuyingPremiumThreshold(uint16 newBuyingPremiumThreshold) external;\\n    function setClosingPremiumFeeMax(uint16 newClosingPremiumFeeMaxPercentage) external;\\n    function setCollateralToBuyingPremiumMapping(uint16[] calldata newCollateralToBuyingPremiumMapping) external;\\n    function setFundingFeeConstantRate(uint16 newfundingFeeConstantRate) external;\\n    function setCollateralToExtraFundingFeeMapping(uint32[] calldata newCollateralToExtraFundingFeeMapping) external;\\n    function setTurbulenceStep(uint16 newTurbulenceStepPercentage) external;\\n    function setMaxTurbulenceFeePercentToTrim(uint16 newMaxTurbulenceFeePercentToTrim) external;\\n    function setTurbulenceDeviationThresholdPercent(uint16 newTurbulenceDeviationThresholdPercent) external;\\n    function setTurbulenceDeviationPercent(uint16 newTurbulenceDeviationPercentage) external;\\n\\n    function calculateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 _lastCVIValue, uint32 _currCVIValue) external view returns (uint16);\\n\\n    function calculateBuyingPremiumFee(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n    function calculateBuyingPremiumFeeWithAddendum(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits, uint16 _turbulenceIndicatorPercent) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n\\n    function calculateClosingPremiumFee() external view returns (uint16 combinedPremiumFeePercentage);\\n\\n    function calculateSingleUnitFundingFee(CVIValue[] memory cviValues, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 fundingFee);\\n    function calculateSingleUnitPeriodFundingFee(CVIValue memory cviValue, uint256 collateralRatio) external view returns (uint256 fundingFee, uint256 fundingFeeRatePercents);\\n    function updateSnapshots(uint256 latestTimestamp, uint256 blockTimestampSnapshot, uint256 latestTimestampSnapshot, uint80 latestOracleRoundId, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (SnapshotUpdate memory snapshotUpdate);\\n\\n    function calculateClosePositionFeePercent(uint256 creationTimestamp, bool isNoLockPositionAddress) external view returns (uint16);\\n    function calculateWithdrawFeePercent(uint256 lastDepositTimestamp) external view returns (uint16);\\n\\n    function calculateCollateralRatio(uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 collateralRatio);\\n\\n    function depositFeePercent() external view returns (uint16);\\n    function withdrawFeePercent() external view returns (uint16);\\n    function openPositionFeePercent() external view returns (uint16);\\n    function closePositionFeePercent() external view returns (uint16);\\n    function openPositionLPFeePercent() external view returns (uint16);\\n    function closePositionLPFeePercent() external view returns (uint16);\\n\\n    function openPositionFees() external view returns (uint16 openPositionFeePercentResult, uint16 buyingPremiumFeeMaxPercentResult);\\n\\n    function turbulenceIndicatorPercent() external view returns (uint16);\\n    function oracleLeverage() external view returns (uint8);\\n\\n    function getCollateralToBuyingPremiumMapping() external view returns(uint16[] memory);\\n    function getCollateralToExtraFundingFeeMapping() external view returns(uint32[] memory);\\n    function getFundingFeeCoefficients() external view returns(uint32[] memory);\\n}\\n\",\"keccak256\":\"0x4a28b87395a2a35ac1152b83f96630ad4fa1b844b5abca4270486c9c08f388ea\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVaultInfo.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IThetaVaultInfo {\\n    function totalVaultLeveragedAmount() external view returns (uint256);\\n    function vaultPositionUnits() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8077ab6dec8937112a2e2567d9b524a10ba640b7891c4bb40729bfbb648c0c1e\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/platform/FeesCalculatorContracts.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport '@coti-cvi/contracts-cvi/contracts/FeesCalculator.sol';\\n\\ncontract CVIUSDCFeesCalculator is FeesCalculator {\\n  constructor(\\n    ICVIOracle _cviOracle,\\n    uint16 _maxCVIValue,\\n    uint8 _oracleLeverage\\n  ) FeesCalculator(_cviOracle, _maxCVIValue, _oracleLeverage) {}\\n}\\n\\ncontract CVIUSDCFeesCalculator2X is FeesCalculator {\\n  constructor(\\n    ICVIOracle _cviOracle,\\n    uint16 _maxCVIValue,\\n    uint8 _oracleLeverage\\n  ) FeesCalculator(_cviOracle, _maxCVIValue, _oracleLeverage) {}\\n}\\n\",\"keccak256\":\"0xa40a63d88c732d7bfd29ad6b46a7d9e61019498e63077c4882f24d4671c932fb\",\"license\":\"GPL-3.0\"}},\"version\":1}",
      "bytecode": "0x600080546001600160a01b03167c96000186a0000007d00000000000000000000000000000000000000000179055600180546001600160401b031916640500000032179055610120604052620186a060809081526201c0b560a0526202036e60c0526202501360e0526202a81e610100526200008090600290600562000852565b5060038054600160201b600160f01b0319167b03e80064012c1964001e03e803e80000000f000f0000000000000000179055610ce4600455620151806005908155610bb8600690815560078054640101f41b5864ffffffffff1990911617905560408051610ca081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081018290526101c081018290526101e08101829052610200810182905261022081018290526102408101829052610260810182905261028081018290526102a081018290526102c081018290526102e08101829052610300810182905261032081018290526103408101829052610360810182905261038081018290526103a081018290526103c081018290526103e08101829052610400810182905261042081018290526104408101829052610460810182905261048081018290526104a081018290526104c081018290526104e08101829052610500810182905261052081018290526105408101829052610560810182905261058081018290526105a081018290526105c081018290526105e08101829052610600810182905261062081018290526106408101829052610660810182905261068081018290526106a081018290526106c081018290526106e08101829052610700810182905261072081018290526107408101829052610760810182905261078081018290526107a081018290526107c081018290526107e08101829052610800810191909152610820810192909252610840820152600861086082018190526009610880830152600b6108a0830152600e6108c083015260106108e083015260146109008301526018610920830152601d6109408301526023610960830152602a61098083015260346109a0830152603f6109c0830152604d6109e0830152605e610a008301526073610a20830152608c610a4083015260ac610a6083015260d4610a80830152610105610aa0830152610143610ac083015261018f610ae08301526101ef610b00830152610267610b208301526102fd610b408301526103b9610b608301526103e8610b808301819052610ba08301819052610bc08301819052610be08301819052610c008301819052610c208301819052610c408301819052610c608301819052610c808301526200041f91606562000907565b5060408051610ca081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081018290526101c081018290526101e08101829052610200810182905261022081018290526102408101829052610260810182905261028081018290526102a081018290526102c081018290526102e08101829052610300810182905261032081018290526103408101829052610360810182905261038081018290526103a081018290526103c081018290526103e08101829052610400810182905261042081018290526104408101829052610460810182905261048081018290526104a081018290526104c081018290526104e08101829052610500810182905261052081018290526105408101829052610560810182905261058081018290526105a081018290526105c081018290526105e08101829052610600810182905261062081018290526106408101829052610660810182905261068081018290526106a081018290526106c081018290526106e08101829052610700810182905261072081018290526107408101829052610760810182905261078081018290526107a081018290526107c081018290526107e08101829052610800810182905261082081018290526108408101829052610860810182905261088081018290526108a081018290526108c081018290526108e08101829052610900810182905261092081018290526109408101829052610960810182905261098081018290526109a081018290526109c081018290526109e08101829052610a008101829052610a208101829052610a408101829052610a608101829052610a808101829052610aa08101829052610ac08101829052610ae08101829052610b008101829052610b208101829052610b408101829052610b608101829052610b808101829052610ba08101829052610bc08101829052610be08101829052610c008101829052610c208101829052610c408101829052610c608101829052610c8081019190915262000759906009906065620009a3565b503480156200076757600080fd5b5060405162003e4e38038062003e4e8339810160408190526200078a9162000a27565b8261ffff8316826200079c3362000802565b6003805463ffffffff191663ffffffff9390931692909217909155600a80546001600160a01b0319166001600160a01b0393909316929092179091556007805460ff60201b191664010000000060ff909316929092029190911790555062000a8d915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090600701600890048101928215620008f55791602002820160005b83821115620008c157835183826101000a81548163ffffffff021916908362ffffff16021790555092602001926004016020816003010492830192600103026200087c565b8015620008f35782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620008c1565b505b506200090392915062000a10565b5090565b82805482825590600052602060002090600f01601090048101928215620008f55791602002820160005b838211156200097357835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030262000931565b8015620008f35782816101000a81549061ffff021916905560020160208160010104928301926001030262000973565b82805482825590600052602060002090600701600890048101928215620008f55791602002820160005b83821115620008c157835183826101000a81548163ffffffff021916908360ff1602179055509260200192600401602081600301049283019260010302620009cd565b5b8082111562000903576000815560010162000a11565b60008060006060848603121562000a3c578283fd5b83516001600160a01b038116811462000a53578384fd5b602085015190935061ffff8116811462000a6b578283fd5b604085015190925060ff8116811462000a82578182fd5b809150509250925092565b6133b18062000a9d6000396000f3fe608060405234801561001057600080fd5b50600436106104535760003560e01c80638da5cb5b11610241578063cc1252ae1161013b578063dfc4d213116100c3578063f359b46f11610087578063f359b46f14610a60578063f3ce730514610a75578063f948b5eb14610a8a578063fc2fcb3e14610a9e578063fcaf5acb14610ab357600080fd5b8063dfc4d213146109fd578063e32d794314610a12578063ea030b9c14610a25578063f1f92aee14610a3a578063f2fde38b14610a4d57600080fd5b8063d7db90c11161010a578063d7db90c1146109ae578063d90db25d146109b7578063d934c20b146109ca578063db711e78146109da578063db9c778b146109ea57600080fd5b8063cc1252ae1461095e578063cdb3632a14610973578063d1b98f8814610988578063d622662f1461099b57600080fd5b8063af2f18c5116101c9578063bb60672b1161018d578063bb60672b146108ea578063c11387d114610910578063c1176c8014610923578063c6e885d514610938578063cb7241e51461094b57600080fd5b8063af2f18c514610883578063af39a75814610896578063b0df807d146108ad578063b7346678146108c0578063b88da0cf146108d357600080fd5b8063a2028d9711610210578063a2028d971461082c578063a3fe27c014610841578063a4b2202714610854578063a6fa3a151461085d578063aa1ae8281461087057600080fd5b80638da5cb5b146107e25780638f3b0d5e146107f35780639ba2af45146108065780639c6313391461081957600080fd5b8063406cab16116103525780636266124e116102da57806376ebae421161029e57806376ebae421461075c5780637adbf973146107715780637e3dd0f0146107845780637fdaf750146107af57806381005cc3146107c257600080fd5b80636266124e1461071057806366733a78146107235780636f7d782814610738578063715018a61461074b578063759dbcad1461075357600080fd5b806350e0942b1161032157806350e0942b146106a25780635939e48c146106b75780635c9f97e5146106ca578063619a5567146106ea57806361d93c97146106fd57600080fd5b8063406cab161461064457806341574ce81461065957806346b55fbb1461066c578063495ef7051461068d57600080fd5b80631d8ccf30116103e0578063322ce8f0116103a4578063322ce8f0146105e357806334c1c683146105f657806334fb45f414610609578063358a123f1461061c5780633a087eb71461062f57600080fd5b80631d8ccf30146105715780631f3a18241461059c5780632cda452a146105af5780632f98e707146105bd5780633017ac17146105d057600080fd5b806307b68b811161042757806307b68b81146104c45780630fe21264146104ea5780631437d6d4146104fd57806316bf9f29146105325780631bffac9f1461054957600080fd5b806236c69a14610458578063024c55971461046d578063044b7b571461048057806304afbb6a14610493575b600080fd5b61046b610466366004612c50565b610abb565b005b61046b61047b366004612d27565b610b57565b61046b61048e366004612b08565b610bd6565b6001546104aa90600160201b900463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b6104d76104d2366004612dfd565b610c22565b60405161ffff90911681526020016104bb565b61046b6104f8366004612c50565b610ddd565b61051061050b366004612c6a565b610e4f565b604080516001600160a81b03909316835261ffff9091166020830152016104bb565b6000546104aa90600160a01b900463ffffffff1681565b61055c610557366004612c26565b610e80565b604080519283526020830191909152016104bb565b600b54610584906001600160a01b031681565b6040516001600160a01b0390911681526020016104bb565b61046b6105aa366004612c50565b611178565b6007546104d79061ffff1681565b61046b6105cb366004612be6565b6111dd565b61046b6105de366004612c50565b611261565b61046b6105f1366004612c50565b6112d2565b6104aa610604366004612d27565b611346565b61046b610617366004612c50565b611380565b61046b61062a366004612be6565b611418565b6003546104d790600160a01b900461ffff1681565b6003546104d790600160d01b900461ffff1681565b610510610667366004612cbe565b611491565b61067f61067a366004612d8a565b6114b3565b6040519081526020016104bb565b6003546104d790600160301b900461ffff1681565b6003546104d790600160601b900461ffff1681565b61046b6106c5366004612b08565b61158d565b6106dd6106d8366004612dab565b6115d9565b6040516104bb9190612fb9565b600c54610584906001600160a01b031681565b61046b61070b366004612e46565b611a0b565b61046b61071e366004612c50565b611a5b565b6003546104d790600160901b900461ffff1681565b600a54610584906001600160a01b031681565b61046b611ad1565b61067f60065481565b6003546104d790600160501b900461ffff1681565b61046b61077f366004612b08565b611b07565b6003546040805161ffff600160401b840481168252600160701b9093049092166020830152016104bb565b61046b6107bd366004612c50565b611b53565b6104d76107d0366004612d27565b50600354600160301b900461ffff1690565b6000546001600160a01b0316610584565b61046b610801366004612be6565b611bf2565b61067f610814366004612b24565b611c6b565b61046b610827366004612c50565b611ceb565b6003546104d790600160401b900461ffff1681565b61046b61084f366004612c50565b611d5c565b61067f60055481565b6104d761086b366004612d27565b611dcd565b6104d761087e366004612d57565b611e05565b61046b610891366004612c50565b611ea3565b6000546104aa90600160c01b900463ffffffff1681565b61046b6108bb366004612c50565b611f40565b61046b6108ce366004612e46565b61200a565b6000546104aa90600160e01b900463ffffffff1681565b6007546108fe90600160201b900460ff1681565b60405160ff90911681526020016104bb565b61046b61091e366004612c50565b61205a565b6003546104d790600160c01b900461ffff1681565b61046b610946366004612e46565b612124565b61046b610959366004612c50565b612175565b6003546104d790600160201b900461ffff1681565b6003546104d790600160b01b900461ffff1681565b61046b610996366004612e46565b6121e6565b61046b6109a9366004612dfd565b61222c565b61067f60045481565b61046b6109c5366004612e46565b6122be565b6003546104aa9063ffffffff1681565b6001546104aa9063ffffffff1681565b61046b6109f8366004612d27565b61230d565b6003546104d790600160701b900461ffff1681565b61046b610a20366004612c50565b61238c565b610a2d6123fd565b6040516104bb9190612ed1565b600354600160601b900461ffff166104d7565b61046b610a5b366004612b08565b61247d565b6003546104d790600160e01b900461ffff1681565b6003546104d790600160801b900461ffff1681565b6007546104d79062010000900461ffff1681565b610aa6612518565b6040516104bb9190612f19565b610aa661259b565b6000546001600160a01b03163314610aee5760405162461bcd60e51b8152600401610ae590612f84565b60405180910390fd5b61271061ffff821610610b3f5760405162461bcd60e51b81526020600482015260196024820152785468726573686f6c642065786365656473206d6178696d756d60381b6044820152606401610ae5565b6007805461ffff191661ffff92909216919091179055565b6000546001600160a01b03163314610b815760405162461bcd60e51b8152600401610ae590612f84565b60008111610bd15760405162461bcd60e51b815260206004820152601a60248201527f486561727462656174206d75737420626520706f7369746976650000000000006044820152606401610ae5565b600455565b6000546001600160a01b03163314610c005760405162461bcd60e51b8152600401610ae590612f84565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b600354600090600160e01b900461ffff168163ffffffff858116906127109086168210610c5857610c538688613262565b610c62565b610c628787613262565b63ffffffff16610c729190613209565b610c7c91906130f3565b600754909150600090610c9b9061ffff62010000820481169116613209565b610ca761271084613209565b610cb191906130f3565b905060008060006004548b610cc691906130f3565b9050808a1115610cfe57610cda818b61324b565b9150838211610ce95781610ceb565b835b9150610cf7828b61324b565b9250610d02565b8992505b60005b83811015610d2c57610d186002886130d2565b965080610d248161329f565b915050610d05565b5060035461ffff600160c01b90910481169087161015610d4b57600095505b60005b82811015610da35760035461271090610d7b9061ffff600160d01b8204811691600160701b900416613209565b610d8591906130f3565b610d8f9088613094565b965080610d9b8161329f565b915050610d4e565b5060035461ffff600160701b90910481169087161115610dce57600354600160701b900461ffff1695505b50939998505050505050505050565b6000546001600160a01b03163314610e075760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610610e2c5760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160201b0265ffff0000000019909216919091179055565b600080610e718888888888886003601c9054906101000a900461ffff166125f8565b90999098509650505050505050565b600080836020015163ffffffff1660001480610e9b57508351155b15610eab57506000905080611171565b50600080546007546020860151600160c01b90920463ffffffff169291606491610ee091600160201b90910460ff1690613107565b610eea9190613107565b60015490915063ffffffff90811690821611156110535760005463ffffffff600160e01b909104811690821610610f3257600054600160a01b900463ffffffff169150611053565b60015460009063ffffffff600160201b8204811691610f52911684613262565b610f5c9190613107565b60015463ffffffff9182169250600091600160201b8204811691610f81911685613262565b610f8b91906132da565b63ffffffff1690506101008210610fd85760405162461bcd60e51b81526020600482015260116024820152706578706f6e656e74206f766572666c6f7760781b6044820152606401610ae5565b60065460028281548110610ffc57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060088204015460079091166004026101000a900463ffffffff1661102b846002613161565b61103a906402540be4006130f3565b61104491906130f3565b61104e91906130ba565b935050505b60006402540be400611066866064613209565b61107091906130f3565b60098054919250908210156110855781611094565b6009546110949060019061324b565b815481106110b257634e487b7160e01b600052603260045260246000fd5b600091825260209091206008820401546110de916007166004026101000a900463ffffffff16846130ba565b600054909350600160c01b900463ffffffff1683111561110b57600054600160c01b900463ffffffff1692505b6003546020870151875163ffffffff92831692620f424092620151809291169061113a886402540be400613209565b6111449190613209565b61114e9190613209565b61115891906130f3565b61116291906130f3565b61116c91906130f3565b935050505b9250929050565b6000546001600160a01b031633146111a25760405162461bcd60e51b8152600401610ae590612f84565b600054600160c01b900463ffffffff1661ffff8216106111d45760405162461bcd60e51b8152600401610ae590612f57565b61ffff16600655565b6000546001600160a01b031633146112075760405162461bcd60e51b8152600401610ae590612f84565b600154600160201b900463ffffffff1681146112505760405162461bcd60e51b81526020600482015260086024820152674261642073697a6560c01b6044820152606401610ae5565b61125c600283836128c8565b505050565b6000546001600160a01b0316331461128b5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff8216106112b05760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160c01b0261ffff60c01b19909216919091179055565b6000546001600160a01b031633146112fc5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff8216106113215760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160301b0267ffff00000000000019909216919091179055565b6009818154811061135657600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b031633146113aa5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff8216106113f65760405162461bcd60e51b8152602060048201526014602482015273537465702065786365656473206d6178696d756d60601b6044820152606401610ae5565b6003805461ffff909216600160d01b0261ffff60d01b19909216919091179055565b6000546001600160a01b031633146114425760405162461bcd60e51b8152600401610ae590612f84565b606581146114855760405162461bcd60e51b815260206004820152601060248201526f426164206d617070696e672073697a6560801b6044820152606401610ae5565b61125c6008838361297d565b6000806114a3898989898989896125f8565b909a909950975050505050505050565b600b5460009081906001600160a01b03161561155257600b60009054906101000a90046001600160a01b03166001600160a01b0316634568b3b16040518163ffffffff1660e01b815260040160206040518083038186803b15801561151757600080fd5b505afa15801561152b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154f9190612d3f565b90505b831561158257836402540be400611569838661324b565b6115739190613209565b61157d91906130f3565b611585565b60005b949350505050565b6000546001600160a01b031633146115b75760405162461bcd60e51b8152600401610ae590612f84565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b604080516101608101825260008082526020820181905281830181905260608083018290526080830182905260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301829052600a54845163c1639a2b60e01b8152945193949293849384936001600160a01b039093169263c1639a2b92600480840193829003018186803b15801561167757600080fd5b505afa15801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116af9190612e8f565b63ffffffff831660c0880152608087018190528b87529194509250905088156116e15750506000602083015250611a01565b8961172357506402540be4008352600160e084018190526001600160501b0390911660a084015261010083018190526101208301525060006020820152611a01565b866001600160501b03808216908416101561176f5760405162461bcd60e51b815260206004820152600c60248201526b109859081c9bdd5b99081a5960a21b6044820152606401610ae5565b611779818461327f565b6001600160501b03166060860181905260009061179757600161179a565b60025b60ff1667ffffffffffffffff8111156117c357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561180857816020015b60408051808201909152600080825260208201528152602001906001900390816117e15790505b5060608701519091501561197b57600a54604051635a7b84b160e01b81526001600160501b038416600482015260009182916001600160a01b0390911690635a7b84b190602401604080518083038186803b15801561186657600080fd5b505afa15801561187a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189e9190612e62565b9150915060405180604001604052808f876118b9919061324b565b81526020018363ffffffff16815250836000815181106118e957634e487b7160e01b600052603260045260246000fd5b60200260200101819052506040518060400160405280864261190b919061324b565b81526020018863ffffffff168152508360018151811061193b57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526001600160501b03861660a08901526001610100890152611967818661324b565b6040890152505060016101408701526119ce565b60405180604001604052808d42611992919061324b565b81526020018663ffffffff16815250816000815181106119c257634e487b7160e01b600052603260045260246000fd5b60200260200101819052505b6119d9818989611c6b565b602087018190526119ea908b6130ba565b86525050600160e085018190526101208501525050505b9695505050505050565b6000546001600160a01b03163314611a355760405162461bcd60e51b8152600401610ae590612f84565b6000805463ffffffff909216600160c01b0263ffffffff60c01b19909216919091179055565b6000546001600160a01b03163314611a855760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610611aaa5760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160401b0269ffff000000000000000019909216919091179055565b6000546001600160a01b03163314611afb5760405162461bcd60e51b8152600401610ae590612f84565b611b0560006127ce565b565b6000546001600160a01b03163314611b315760405162461bcd60e51b8152600401610ae590612f84565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611b7d5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610611bd25760405162461bcd60e51b815260206004820152601960248201527f446576696174696f6e2065786365656473206d6178696d756d000000000000006044820152606401610ae5565b6007805461ffff909216620100000263ffff000019909216919091179055565b6000546001600160a01b03163314611c1c5760405162461bcd60e51b8152600401610ae590612f84565b60658114611c5f5760405162461bcd60e51b815260206004820152601060248201526f426164206d617070696e672073697a6560801b6044820152606401610ae5565b61125c600983836128c8565b600080611c7884846114b3565b905060005b85518160ff161015611ce2576000611cbf878360ff1681518110611cb157634e487b7160e01b600052603260045260246000fd5b602002602001015184610e80565b509050611ccc81856130ba565b9350508080611cda906132ba565b915050611c7d565b50509392505050565b6000546001600160a01b03163314611d155760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610611d3a5760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160701b0261ffff60701b19909216919091179055565b6000546001600160a01b03163314611d865760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610611dab5760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160801b0261ffff60801b19909216919091179055565b60088181548110611ddd57600080fd5b9060005260206000209060109182820401919006600202915054906101000a900461ffff1681565b600554600090611e15844261324b565b101580611e1f5750815b15611e385750600354600160901b900461ffff16611e9d565b600554600090611e48854261324b565b600354611e699061ffff600160901b8204811691600160b01b900416613228565b61ffff16611e779190613209565b611e8191906130f3565b600354909150611585908290600160b01b900461ffff16613228565b92915050565b6000546001600160a01b03163314611ecd5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610611f1e5760405162461bcd60e51b81526020600482015260196024820152785468726573686f6c642065786365656473206d6178696d756d60381b6044820152606401610ae5565b6003805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b6000546001600160a01b03163314611f6a5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610611f8f5760405162461bcd60e51b8152600401610ae590612f57565b60035461ffff600160901b90910481169082161015611fe85760405162461bcd60e51b81526020600482015260156024820152744d6178206665652062656c6f77206d696e2066656560581b6044820152606401610ae5565b6003805461ffff909216600160b01b0261ffff60b01b19909216919091179055565b6000546001600160a01b031633146120345760405162461bcd60e51b8152600401610ae590612f84565b6000805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b6000546001600160a01b031633146120845760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff8216106120a95760405162461bcd60e51b8152600401610ae590612f57565b60035461ffff600160b01b909104811690821611156121025760405162461bcd60e51b81526020600482015260156024820152744d696e206665652061626f7665206d61782066656560581b6044820152606401610ae5565b6003805461ffff909216600160901b0261ffff60901b19909216919091179055565b6000546001600160a01b0316331461214e5760405162461bcd60e51b8152600401610ae590612f84565b6001805463ffffffff909216600160201b0267ffffffff0000000019909216919091179055565b6000546001600160a01b0316331461219f5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff8216106121c45760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160501b0261ffff60501b19909216919091179055565b6000546001600160a01b031633146122105760405162461bcd60e51b8152600401610ae590612f84565b6001805463ffffffff191663ffffffff92909216919091179055565b600c546001600160a01b031633146122745760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b6044820152606401610ae5565b600061228285858585610c22565b60035490915061ffff808316600160e01b90920416146122b7576003805461ffff60e01b1916600160e01b61ffff8416021790555b5050505050565b6000546001600160a01b031633146122e85760405162461bcd60e51b8152600401610ae590612f84565b6000805463ffffffff909216600160e01b026001600160e01b03909216919091179055565b6000546001600160a01b031633146123375760405162461bcd60e51b8152600401610ae590612f84565b600081116123875760405162461bcd60e51b815260206004820152601760248201527f506572696f64206d75737420626520706f7369746976650000000000000000006044820152606401610ae5565b600555565b6000546001600160a01b031633146123b65760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff8216106123db5760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160601b0261ffff60601b19909216919091179055565b6060600880548060200260200160405190810160405280929190818152602001828054801561247357602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161243a5790505b5050505050905090565b6000546001600160a01b031633146124a75760405162461bcd60e51b8152600401610ae590612f84565b6001600160a01b03811661250c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ae5565b612515816127ce565b50565b6060600980548060200260200160405190810160405280929190818152602001828054801561247357602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116125555790505050505050905090565b60606002805480602002602001604051908101604052809291908181526020018280548015612473576000918252602091829020805463ffffffff1684529082028301929091600491018084116125555790505050505050905090565b600080600061260786866114b3565b9050600061261589896114b3565b905060006402540be40083106126455760035461263e90600160701b900461ffff16848461281e565b90506126e3565b60035461271090612667906402540be40090600160a01b900461ffff16613209565b61267191906130f3565b83106126e3576126e060086402540be40061268d866064613209565b61269791906130f3565b815481106126b557634e487b7160e01b600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16848461281e565b90505b60035481906126fe908890600160501b900461ffff16613094565b6127089190613094565b60035490945061ffff600160701b9091048116908516111561273557600354600160701b900461ffff1693505b600061271061ffff168561ffff168d60ff168f6001600160a81b031661275b9190613209565b6127659190613209565b61276f91906130f3565b9050809550856001600160a81b031681146127be5760405162461bcd60e51b815260206004820152600f60248201526e546f6f206d75636820746f6b656e7360881b6044820152606401610ae5565b5050505097509795505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60035460009061271090612843906402540be40090600160a01b900461ffff16613209565b61284d91906130f3565b8210158061285a57508183145b156128665750826128c1565b612870828461324b565b60035461271090612892906402540be40090600160a01b900461ffff16613209565b61289c91906130f3565b6128a6908561324b565b6128b49061ffff8716613209565b6128be91906130f3565b90505b9392505050565b8280548282559060005260206000209060070160089004810192821561296d5791602002820160005b8382111561293b57833563ffffffff1683826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026128f1565b801561296b5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261293b565b505b50612979929150612a18565b5090565b82805482825590600052602060002090600f0160109004810192821561296d5791602002820160005b838211156129ea57833561ffff1683826101000a81548161ffff021916908361ffff16021790555092602001926002016020816001010492830192600103026129a6565b801561296b5782816101000a81549061ffff02191690556002016020816001010492830192600103026129ea565b5b808211156129795760008155600101612a19565b60008083601f840112612a3e578081fd5b50813567ffffffffffffffff811115612a55578182fd5b6020830191508360208260051b850101111561117157600080fd5b600060408284031215612a81578081fd5b6040516040810181811067ffffffffffffffff82111715612aa457612aa4613329565b604052823581529050806020830135612abc81613354565b6020919091015292915050565b803561ffff81168114612adb57600080fd5b919050565b80356001600160a81b0381168114612adb57600080fd5b803560ff81168114612adb57600080fd5b600060208284031215612b19578081fd5b81356128c18161333f565b600080600060608486031215612b38578182fd5b833567ffffffffffffffff80821115612b4f578384fd5b818601915086601f830112612b62578384fd5b8135602082821115612b7657612b76613329565b612b84818360051b01613063565b8281528181019350848201600684901b860183018b1015612ba3578788fd5b8795505b83861015612bce57612bb98b82612a70565b85526001959095019493820193604001612ba7565b50999088013598506040909701359695505050505050565b60008060208385031215612bf8578182fd5b823567ffffffffffffffff811115612c0e578283fd5b612c1a85828601612a2d565b90969095509350505050565b60008060608385031215612c38578182fd5b612c428484612a70565b946040939093013593505050565b600060208284031215612c61578081fd5b6128c182612ac9565b60008060008060008060c08789031215612c82578182fd5b612c8b87612ae0565b9550612c9960208801612af7565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080600080600060e0888a031215612cd8578485fd5b612ce188612ae0565b9650612cef60208901612af7565b955060408801359450606088013593506080880135925060a08801359150612d1960c08901612ac9565b905092959891949750929550565b600060208284031215612d38578081fd5b5035919050565b600060208284031215612d50578081fd5b5051919050565b60008060408385031215612d69578182fd5b8235915060208301358015158114612d7f578182fd5b809150509250929050565b60008060408385031215612d9c578182fd5b50508035926020909101359150565b60008060008060008060c08789031215612dc3578384fd5b8635955060208701359450604087013593506060870135612de381613366565b9598949750929560808101359460a0909101359350915050565b60008060008060808587031215612e12578182fd5b84359350602085013592506040850135612e2b81613354565b91506060850135612e3b81613354565b939692955090935050565b600060208284031215612e57578081fd5b81356128c181613354565b60008060408385031215612e74578182fd5b8251612e7f81613354565b6020939093015192949293505050565b600080600060608486031215612ea3578081fd5b8351612eae81613354565b6020850151909350612ebf81613366565b80925050604084015190509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612f0d57835161ffff1683529284019291840191600101612eed565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612f0d57835163ffffffff1683529284019291840191600101612f35565b6020808252601390820152724665652065786365656473206d6178696d756d60681b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600061016082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015161300860a08401826001600160501b03169052565b5060c083015161302060c084018263ffffffff169052565b5060e083015161303460e084018215159052565b506101008381015115159083015261012080840151151590830152610140928301511515929091019190915290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561308c5761308c613329565b604052919050565b600061ffff8083168185168083038211156130b1576130b16132fd565b01949350505050565b600082198211156130cd576130cd6132fd565b500190565b600061ffff808416806130e7576130e7613313565b92169190910492915050565b60008261310257613102613313565b500490565b600063ffffffff808416806130e7576130e7613313565b600181815b8085111561315957816000190482111561313f5761313f6132fd565b8085161561314c57918102915b93841c9390800290613123565b509250929050565b60006128c1838360008261317757506001611e9d565b8161318457506000611e9d565b816001811461319a57600281146131a4576131c0565b6001915050611e9d565b60ff8411156131b5576131b56132fd565b50506001821b611e9d565b5060208310610133831016604e8410600b84101617156131e3575081810a611e9d565b6131ed838361311e565b8060001904821115613201576132016132fd565b029392505050565b6000816000190483118215151615613223576132236132fd565b500290565b600061ffff83811690831681811015613243576132436132fd565b039392505050565b60008282101561325d5761325d6132fd565b500390565b600063ffffffff83811690831681811015613243576132436132fd565b60006001600160501b0383811690831681811015613243576132436132fd565b60006000198214156132b3576132b36132fd565b5060010190565b600060ff821660ff8114156132d1576132d16132fd565b60010192915050565b600063ffffffff808416806132f1576132f1613313565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461251557600080fd5b63ffffffff8116811461251557600080fd5b6001600160501b038116811461251557600080fdfea2646970667358221220d4f4fa9fbbdbffce9a58252fe098d478a8ecadda851167d9a29c71e837fa762364736f6c63430008040033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106104535760003560e01c80638da5cb5b11610241578063cc1252ae1161013b578063dfc4d213116100c3578063f359b46f11610087578063f359b46f14610a60578063f3ce730514610a75578063f948b5eb14610a8a578063fc2fcb3e14610a9e578063fcaf5acb14610ab357600080fd5b8063dfc4d213146109fd578063e32d794314610a12578063ea030b9c14610a25578063f1f92aee14610a3a578063f2fde38b14610a4d57600080fd5b8063d7db90c11161010a578063d7db90c1146109ae578063d90db25d146109b7578063d934c20b146109ca578063db711e78146109da578063db9c778b146109ea57600080fd5b8063cc1252ae1461095e578063cdb3632a14610973578063d1b98f8814610988578063d622662f1461099b57600080fd5b8063af2f18c5116101c9578063bb60672b1161018d578063bb60672b146108ea578063c11387d114610910578063c1176c8014610923578063c6e885d514610938578063cb7241e51461094b57600080fd5b8063af2f18c514610883578063af39a75814610896578063b0df807d146108ad578063b7346678146108c0578063b88da0cf146108d357600080fd5b8063a2028d9711610210578063a2028d971461082c578063a3fe27c014610841578063a4b2202714610854578063a6fa3a151461085d578063aa1ae8281461087057600080fd5b80638da5cb5b146107e25780638f3b0d5e146107f35780639ba2af45146108065780639c6313391461081957600080fd5b8063406cab16116103525780636266124e116102da57806376ebae421161029e57806376ebae421461075c5780637adbf973146107715780637e3dd0f0146107845780637fdaf750146107af57806381005cc3146107c257600080fd5b80636266124e1461071057806366733a78146107235780636f7d782814610738578063715018a61461074b578063759dbcad1461075357600080fd5b806350e0942b1161032157806350e0942b146106a25780635939e48c146106b75780635c9f97e5146106ca578063619a5567146106ea57806361d93c97146106fd57600080fd5b8063406cab161461064457806341574ce81461065957806346b55fbb1461066c578063495ef7051461068d57600080fd5b80631d8ccf30116103e0578063322ce8f0116103a4578063322ce8f0146105e357806334c1c683146105f657806334fb45f414610609578063358a123f1461061c5780633a087eb71461062f57600080fd5b80631d8ccf30146105715780631f3a18241461059c5780632cda452a146105af5780632f98e707146105bd5780633017ac17146105d057600080fd5b806307b68b811161042757806307b68b81146104c45780630fe21264146104ea5780631437d6d4146104fd57806316bf9f29146105325780631bffac9f1461054957600080fd5b806236c69a14610458578063024c55971461046d578063044b7b571461048057806304afbb6a14610493575b600080fd5b61046b610466366004612c50565b610abb565b005b61046b61047b366004612d27565b610b57565b61046b61048e366004612b08565b610bd6565b6001546104aa90600160201b900463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b6104d76104d2366004612dfd565b610c22565b60405161ffff90911681526020016104bb565b61046b6104f8366004612c50565b610ddd565b61051061050b366004612c6a565b610e4f565b604080516001600160a81b03909316835261ffff9091166020830152016104bb565b6000546104aa90600160a01b900463ffffffff1681565b61055c610557366004612c26565b610e80565b604080519283526020830191909152016104bb565b600b54610584906001600160a01b031681565b6040516001600160a01b0390911681526020016104bb565b61046b6105aa366004612c50565b611178565b6007546104d79061ffff1681565b61046b6105cb366004612be6565b6111dd565b61046b6105de366004612c50565b611261565b61046b6105f1366004612c50565b6112d2565b6104aa610604366004612d27565b611346565b61046b610617366004612c50565b611380565b61046b61062a366004612be6565b611418565b6003546104d790600160a01b900461ffff1681565b6003546104d790600160d01b900461ffff1681565b610510610667366004612cbe565b611491565b61067f61067a366004612d8a565b6114b3565b6040519081526020016104bb565b6003546104d790600160301b900461ffff1681565b6003546104d790600160601b900461ffff1681565b61046b6106c5366004612b08565b61158d565b6106dd6106d8366004612dab565b6115d9565b6040516104bb9190612fb9565b600c54610584906001600160a01b031681565b61046b61070b366004612e46565b611a0b565b61046b61071e366004612c50565b611a5b565b6003546104d790600160901b900461ffff1681565b600a54610584906001600160a01b031681565b61046b611ad1565b61067f60065481565b6003546104d790600160501b900461ffff1681565b61046b61077f366004612b08565b611b07565b6003546040805161ffff600160401b840481168252600160701b9093049092166020830152016104bb565b61046b6107bd366004612c50565b611b53565b6104d76107d0366004612d27565b50600354600160301b900461ffff1690565b6000546001600160a01b0316610584565b61046b610801366004612be6565b611bf2565b61067f610814366004612b24565b611c6b565b61046b610827366004612c50565b611ceb565b6003546104d790600160401b900461ffff1681565b61046b61084f366004612c50565b611d5c565b61067f60055481565b6104d761086b366004612d27565b611dcd565b6104d761087e366004612d57565b611e05565b61046b610891366004612c50565b611ea3565b6000546104aa90600160c01b900463ffffffff1681565b61046b6108bb366004612c50565b611f40565b61046b6108ce366004612e46565b61200a565b6000546104aa90600160e01b900463ffffffff1681565b6007546108fe90600160201b900460ff1681565b60405160ff90911681526020016104bb565b61046b61091e366004612c50565b61205a565b6003546104d790600160c01b900461ffff1681565b61046b610946366004612e46565b612124565b61046b610959366004612c50565b612175565b6003546104d790600160201b900461ffff1681565b6003546104d790600160b01b900461ffff1681565b61046b610996366004612e46565b6121e6565b61046b6109a9366004612dfd565b61222c565b61067f60045481565b61046b6109c5366004612e46565b6122be565b6003546104aa9063ffffffff1681565b6001546104aa9063ffffffff1681565b61046b6109f8366004612d27565b61230d565b6003546104d790600160701b900461ffff1681565b61046b610a20366004612c50565b61238c565b610a2d6123fd565b6040516104bb9190612ed1565b600354600160601b900461ffff166104d7565b61046b610a5b366004612b08565b61247d565b6003546104d790600160e01b900461ffff1681565b6003546104d790600160801b900461ffff1681565b6007546104d79062010000900461ffff1681565b610aa6612518565b6040516104bb9190612f19565b610aa661259b565b6000546001600160a01b03163314610aee5760405162461bcd60e51b8152600401610ae590612f84565b60405180910390fd5b61271061ffff821610610b3f5760405162461bcd60e51b81526020600482015260196024820152785468726573686f6c642065786365656473206d6178696d756d60381b6044820152606401610ae5565b6007805461ffff191661ffff92909216919091179055565b6000546001600160a01b03163314610b815760405162461bcd60e51b8152600401610ae590612f84565b60008111610bd15760405162461bcd60e51b815260206004820152601a60248201527f486561727462656174206d75737420626520706f7369746976650000000000006044820152606401610ae5565b600455565b6000546001600160a01b03163314610c005760405162461bcd60e51b8152600401610ae590612f84565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b600354600090600160e01b900461ffff168163ffffffff858116906127109086168210610c5857610c538688613262565b610c62565b610c628787613262565b63ffffffff16610c729190613209565b610c7c91906130f3565b600754909150600090610c9b9061ffff62010000820481169116613209565b610ca761271084613209565b610cb191906130f3565b905060008060006004548b610cc691906130f3565b9050808a1115610cfe57610cda818b61324b565b9150838211610ce95781610ceb565b835b9150610cf7828b61324b565b9250610d02565b8992505b60005b83811015610d2c57610d186002886130d2565b965080610d248161329f565b915050610d05565b5060035461ffff600160c01b90910481169087161015610d4b57600095505b60005b82811015610da35760035461271090610d7b9061ffff600160d01b8204811691600160701b900416613209565b610d8591906130f3565b610d8f9088613094565b965080610d9b8161329f565b915050610d4e565b5060035461ffff600160701b90910481169087161115610dce57600354600160701b900461ffff1695505b50939998505050505050505050565b6000546001600160a01b03163314610e075760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610610e2c5760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160201b0265ffff0000000019909216919091179055565b600080610e718888888888886003601c9054906101000a900461ffff166125f8565b90999098509650505050505050565b600080836020015163ffffffff1660001480610e9b57508351155b15610eab57506000905080611171565b50600080546007546020860151600160c01b90920463ffffffff169291606491610ee091600160201b90910460ff1690613107565b610eea9190613107565b60015490915063ffffffff90811690821611156110535760005463ffffffff600160e01b909104811690821610610f3257600054600160a01b900463ffffffff169150611053565b60015460009063ffffffff600160201b8204811691610f52911684613262565b610f5c9190613107565b60015463ffffffff9182169250600091600160201b8204811691610f81911685613262565b610f8b91906132da565b63ffffffff1690506101008210610fd85760405162461bcd60e51b81526020600482015260116024820152706578706f6e656e74206f766572666c6f7760781b6044820152606401610ae5565b60065460028281548110610ffc57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060088204015460079091166004026101000a900463ffffffff1661102b846002613161565b61103a906402540be4006130f3565b61104491906130f3565b61104e91906130ba565b935050505b60006402540be400611066866064613209565b61107091906130f3565b60098054919250908210156110855781611094565b6009546110949060019061324b565b815481106110b257634e487b7160e01b600052603260045260246000fd5b600091825260209091206008820401546110de916007166004026101000a900463ffffffff16846130ba565b600054909350600160c01b900463ffffffff1683111561110b57600054600160c01b900463ffffffff1692505b6003546020870151875163ffffffff92831692620f424092620151809291169061113a886402540be400613209565b6111449190613209565b61114e9190613209565b61115891906130f3565b61116291906130f3565b61116c91906130f3565b935050505b9250929050565b6000546001600160a01b031633146111a25760405162461bcd60e51b8152600401610ae590612f84565b600054600160c01b900463ffffffff1661ffff8216106111d45760405162461bcd60e51b8152600401610ae590612f57565b61ffff16600655565b6000546001600160a01b031633146112075760405162461bcd60e51b8152600401610ae590612f84565b600154600160201b900463ffffffff1681146112505760405162461bcd60e51b81526020600482015260086024820152674261642073697a6560c01b6044820152606401610ae5565b61125c600283836128c8565b505050565b6000546001600160a01b0316331461128b5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff8216106112b05760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160c01b0261ffff60c01b19909216919091179055565b6000546001600160a01b031633146112fc5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff8216106113215760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160301b0267ffff00000000000019909216919091179055565b6009818154811061135657600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b031633146113aa5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff8216106113f65760405162461bcd60e51b8152602060048201526014602482015273537465702065786365656473206d6178696d756d60601b6044820152606401610ae5565b6003805461ffff909216600160d01b0261ffff60d01b19909216919091179055565b6000546001600160a01b031633146114425760405162461bcd60e51b8152600401610ae590612f84565b606581146114855760405162461bcd60e51b815260206004820152601060248201526f426164206d617070696e672073697a6560801b6044820152606401610ae5565b61125c6008838361297d565b6000806114a3898989898989896125f8565b909a909950975050505050505050565b600b5460009081906001600160a01b03161561155257600b60009054906101000a90046001600160a01b03166001600160a01b0316634568b3b16040518163ffffffff1660e01b815260040160206040518083038186803b15801561151757600080fd5b505afa15801561152b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154f9190612d3f565b90505b831561158257836402540be400611569838661324b565b6115739190613209565b61157d91906130f3565b611585565b60005b949350505050565b6000546001600160a01b031633146115b75760405162461bcd60e51b8152600401610ae590612f84565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b604080516101608101825260008082526020820181905281830181905260608083018290526080830182905260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301829052600a54845163c1639a2b60e01b8152945193949293849384936001600160a01b039093169263c1639a2b92600480840193829003018186803b15801561167757600080fd5b505afa15801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116af9190612e8f565b63ffffffff831660c0880152608087018190528b87529194509250905088156116e15750506000602083015250611a01565b8961172357506402540be4008352600160e084018190526001600160501b0390911660a084015261010083018190526101208301525060006020820152611a01565b866001600160501b03808216908416101561176f5760405162461bcd60e51b815260206004820152600c60248201526b109859081c9bdd5b99081a5960a21b6044820152606401610ae5565b611779818461327f565b6001600160501b03166060860181905260009061179757600161179a565b60025b60ff1667ffffffffffffffff8111156117c357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561180857816020015b60408051808201909152600080825260208201528152602001906001900390816117e15790505b5060608701519091501561197b57600a54604051635a7b84b160e01b81526001600160501b038416600482015260009182916001600160a01b0390911690635a7b84b190602401604080518083038186803b15801561186657600080fd5b505afa15801561187a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189e9190612e62565b9150915060405180604001604052808f876118b9919061324b565b81526020018363ffffffff16815250836000815181106118e957634e487b7160e01b600052603260045260246000fd5b60200260200101819052506040518060400160405280864261190b919061324b565b81526020018863ffffffff168152508360018151811061193b57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526001600160501b03861660a08901526001610100890152611967818661324b565b6040890152505060016101408701526119ce565b60405180604001604052808d42611992919061324b565b81526020018663ffffffff16815250816000815181106119c257634e487b7160e01b600052603260045260246000fd5b60200260200101819052505b6119d9818989611c6b565b602087018190526119ea908b6130ba565b86525050600160e085018190526101208501525050505b9695505050505050565b6000546001600160a01b03163314611a355760405162461bcd60e51b8152600401610ae590612f84565b6000805463ffffffff909216600160c01b0263ffffffff60c01b19909216919091179055565b6000546001600160a01b03163314611a855760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610611aaa5760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160401b0269ffff000000000000000019909216919091179055565b6000546001600160a01b03163314611afb5760405162461bcd60e51b8152600401610ae590612f84565b611b0560006127ce565b565b6000546001600160a01b03163314611b315760405162461bcd60e51b8152600401610ae590612f84565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611b7d5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610611bd25760405162461bcd60e51b815260206004820152601960248201527f446576696174696f6e2065786365656473206d6178696d756d000000000000006044820152606401610ae5565b6007805461ffff909216620100000263ffff000019909216919091179055565b6000546001600160a01b03163314611c1c5760405162461bcd60e51b8152600401610ae590612f84565b60658114611c5f5760405162461bcd60e51b815260206004820152601060248201526f426164206d617070696e672073697a6560801b6044820152606401610ae5565b61125c600983836128c8565b600080611c7884846114b3565b905060005b85518160ff161015611ce2576000611cbf878360ff1681518110611cb157634e487b7160e01b600052603260045260246000fd5b602002602001015184610e80565b509050611ccc81856130ba565b9350508080611cda906132ba565b915050611c7d565b50509392505050565b6000546001600160a01b03163314611d155760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610611d3a5760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160701b0261ffff60701b19909216919091179055565b6000546001600160a01b03163314611d865760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610611dab5760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160801b0261ffff60801b19909216919091179055565b60088181548110611ddd57600080fd5b9060005260206000209060109182820401919006600202915054906101000a900461ffff1681565b600554600090611e15844261324b565b101580611e1f5750815b15611e385750600354600160901b900461ffff16611e9d565b600554600090611e48854261324b565b600354611e699061ffff600160901b8204811691600160b01b900416613228565b61ffff16611e779190613209565b611e8191906130f3565b600354909150611585908290600160b01b900461ffff16613228565b92915050565b6000546001600160a01b03163314611ecd5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610611f1e5760405162461bcd60e51b81526020600482015260196024820152785468726573686f6c642065786365656473206d6178696d756d60381b6044820152606401610ae5565b6003805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b6000546001600160a01b03163314611f6a5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff821610611f8f5760405162461bcd60e51b8152600401610ae590612f57565b60035461ffff600160901b90910481169082161015611fe85760405162461bcd60e51b81526020600482015260156024820152744d6178206665652062656c6f77206d696e2066656560581b6044820152606401610ae5565b6003805461ffff909216600160b01b0261ffff60b01b19909216919091179055565b6000546001600160a01b031633146120345760405162461bcd60e51b8152600401610ae590612f84565b6000805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b6000546001600160a01b031633146120845760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff8216106120a95760405162461bcd60e51b8152600401610ae590612f57565b60035461ffff600160b01b909104811690821611156121025760405162461bcd60e51b81526020600482015260156024820152744d696e206665652061626f7665206d61782066656560581b6044820152606401610ae5565b6003805461ffff909216600160901b0261ffff60901b19909216919091179055565b6000546001600160a01b0316331461214e5760405162461bcd60e51b8152600401610ae590612f84565b6001805463ffffffff909216600160201b0267ffffffff0000000019909216919091179055565b6000546001600160a01b0316331461219f5760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff8216106121c45760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160501b0261ffff60501b19909216919091179055565b6000546001600160a01b031633146122105760405162461bcd60e51b8152600401610ae590612f84565b6001805463ffffffff191663ffffffff92909216919091179055565b600c546001600160a01b031633146122745760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b6044820152606401610ae5565b600061228285858585610c22565b60035490915061ffff808316600160e01b90920416146122b7576003805461ffff60e01b1916600160e01b61ffff8416021790555b5050505050565b6000546001600160a01b031633146122e85760405162461bcd60e51b8152600401610ae590612f84565b6000805463ffffffff909216600160e01b026001600160e01b03909216919091179055565b6000546001600160a01b031633146123375760405162461bcd60e51b8152600401610ae590612f84565b600081116123875760405162461bcd60e51b815260206004820152601760248201527f506572696f64206d75737420626520706f7369746976650000000000000000006044820152606401610ae5565b600555565b6000546001600160a01b031633146123b65760405162461bcd60e51b8152600401610ae590612f84565b61271061ffff8216106123db5760405162461bcd60e51b8152600401610ae590612f57565b6003805461ffff909216600160601b0261ffff60601b19909216919091179055565b6060600880548060200260200160405190810160405280929190818152602001828054801561247357602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161243a5790505b5050505050905090565b6000546001600160a01b031633146124a75760405162461bcd60e51b8152600401610ae590612f84565b6001600160a01b03811661250c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ae5565b612515816127ce565b50565b6060600980548060200260200160405190810160405280929190818152602001828054801561247357602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116125555790505050505050905090565b60606002805480602002602001604051908101604052809291908181526020018280548015612473576000918252602091829020805463ffffffff1684529082028301929091600491018084116125555790505050505050905090565b600080600061260786866114b3565b9050600061261589896114b3565b905060006402540be40083106126455760035461263e90600160701b900461ffff16848461281e565b90506126e3565b60035461271090612667906402540be40090600160a01b900461ffff16613209565b61267191906130f3565b83106126e3576126e060086402540be40061268d866064613209565b61269791906130f3565b815481106126b557634e487b7160e01b600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16848461281e565b90505b60035481906126fe908890600160501b900461ffff16613094565b6127089190613094565b60035490945061ffff600160701b9091048116908516111561273557600354600160701b900461ffff1693505b600061271061ffff168561ffff168d60ff168f6001600160a81b031661275b9190613209565b6127659190613209565b61276f91906130f3565b9050809550856001600160a81b031681146127be5760405162461bcd60e51b815260206004820152600f60248201526e546f6f206d75636820746f6b656e7360881b6044820152606401610ae5565b5050505097509795505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60035460009061271090612843906402540be40090600160a01b900461ffff16613209565b61284d91906130f3565b8210158061285a57508183145b156128665750826128c1565b612870828461324b565b60035461271090612892906402540be40090600160a01b900461ffff16613209565b61289c91906130f3565b6128a6908561324b565b6128b49061ffff8716613209565b6128be91906130f3565b90505b9392505050565b8280548282559060005260206000209060070160089004810192821561296d5791602002820160005b8382111561293b57833563ffffffff1683826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026128f1565b801561296b5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261293b565b505b50612979929150612a18565b5090565b82805482825590600052602060002090600f0160109004810192821561296d5791602002820160005b838211156129ea57833561ffff1683826101000a81548161ffff021916908361ffff16021790555092602001926002016020816001010492830192600103026129a6565b801561296b5782816101000a81549061ffff02191690556002016020816001010492830192600103026129ea565b5b808211156129795760008155600101612a19565b60008083601f840112612a3e578081fd5b50813567ffffffffffffffff811115612a55578182fd5b6020830191508360208260051b850101111561117157600080fd5b600060408284031215612a81578081fd5b6040516040810181811067ffffffffffffffff82111715612aa457612aa4613329565b604052823581529050806020830135612abc81613354565b6020919091015292915050565b803561ffff81168114612adb57600080fd5b919050565b80356001600160a81b0381168114612adb57600080fd5b803560ff81168114612adb57600080fd5b600060208284031215612b19578081fd5b81356128c18161333f565b600080600060608486031215612b38578182fd5b833567ffffffffffffffff80821115612b4f578384fd5b818601915086601f830112612b62578384fd5b8135602082821115612b7657612b76613329565b612b84818360051b01613063565b8281528181019350848201600684901b860183018b1015612ba3578788fd5b8795505b83861015612bce57612bb98b82612a70565b85526001959095019493820193604001612ba7565b50999088013598506040909701359695505050505050565b60008060208385031215612bf8578182fd5b823567ffffffffffffffff811115612c0e578283fd5b612c1a85828601612a2d565b90969095509350505050565b60008060608385031215612c38578182fd5b612c428484612a70565b946040939093013593505050565b600060208284031215612c61578081fd5b6128c182612ac9565b60008060008060008060c08789031215612c82578182fd5b612c8b87612ae0565b9550612c9960208801612af7565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080600080600060e0888a031215612cd8578485fd5b612ce188612ae0565b9650612cef60208901612af7565b955060408801359450606088013593506080880135925060a08801359150612d1960c08901612ac9565b905092959891949750929550565b600060208284031215612d38578081fd5b5035919050565b600060208284031215612d50578081fd5b5051919050565b60008060408385031215612d69578182fd5b8235915060208301358015158114612d7f578182fd5b809150509250929050565b60008060408385031215612d9c578182fd5b50508035926020909101359150565b60008060008060008060c08789031215612dc3578384fd5b8635955060208701359450604087013593506060870135612de381613366565b9598949750929560808101359460a0909101359350915050565b60008060008060808587031215612e12578182fd5b84359350602085013592506040850135612e2b81613354565b91506060850135612e3b81613354565b939692955090935050565b600060208284031215612e57578081fd5b81356128c181613354565b60008060408385031215612e74578182fd5b8251612e7f81613354565b6020939093015192949293505050565b600080600060608486031215612ea3578081fd5b8351612eae81613354565b6020850151909350612ebf81613366565b80925050604084015190509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612f0d57835161ffff1683529284019291840191600101612eed565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612f0d57835163ffffffff1683529284019291840191600101612f35565b6020808252601390820152724665652065786365656473206d6178696d756d60681b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600061016082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015161300860a08401826001600160501b03169052565b5060c083015161302060c084018263ffffffff169052565b5060e083015161303460e084018215159052565b506101008381015115159083015261012080840151151590830152610140928301511515929091019190915290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561308c5761308c613329565b604052919050565b600061ffff8083168185168083038211156130b1576130b16132fd565b01949350505050565b600082198211156130cd576130cd6132fd565b500190565b600061ffff808416806130e7576130e7613313565b92169190910492915050565b60008261310257613102613313565b500490565b600063ffffffff808416806130e7576130e7613313565b600181815b8085111561315957816000190482111561313f5761313f6132fd565b8085161561314c57918102915b93841c9390800290613123565b509250929050565b60006128c1838360008261317757506001611e9d565b8161318457506000611e9d565b816001811461319a57600281146131a4576131c0565b6001915050611e9d565b60ff8411156131b5576131b56132fd565b50506001821b611e9d565b5060208310610133831016604e8410600b84101617156131e3575081810a611e9d565b6131ed838361311e565b8060001904821115613201576132016132fd565b029392505050565b6000816000190483118215151615613223576132236132fd565b500290565b600061ffff83811690831681811015613243576132436132fd565b039392505050565b60008282101561325d5761325d6132fd565b500390565b600063ffffffff83811690831681811015613243576132436132fd565b60006001600160501b0383811690831681811015613243576132436132fd565b60006000198214156132b3576132b36132fd565b5060010190565b600060ff821660ff8114156132d1576132d16132fd565b60010192915050565b600063ffffffff808416806132f1576132f1613313565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461251557600080fd5b63ffffffff8116811461251557600080fd5b6001600160501b038116811461251557600080fdfea2646970667358221220d4f4fa9fbbdbffce9a58252fe098d478a8ecadda851167d9a29c71e837fa762364736f6c63430008040033",
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 37324,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "_owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1027,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "fundingFeeMinRate",
            "offset": 20,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 1030,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "fundingFeeMaxRate",
            "offset": 24,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 1033,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "minFundingFeeCviThreshold",
            "offset": 28,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 1036,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "maxFundingFeeCviThreshold",
            "offset": 0,
            "slot": "1",
            "type": "t_uint32"
          },
          {
            "astId": 1039,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "fundingFeeDivisionFactor",
            "offset": 4,
            "slot": "1",
            "type": "t_uint32"
          },
          {
            "astId": 1048,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "fundingFeeCoefficients",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint32)dyn_storage"
          },
          {
            "astId": 1050,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "maxCVIValue",
            "offset": 0,
            "slot": "3",
            "type": "t_uint32"
          },
          {
            "astId": 1054,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "depositFeePercent",
            "offset": 4,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1058,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "withdrawFeePercent",
            "offset": 6,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1062,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "openPositionFeePercent",
            "offset": 8,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1066,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "openPositionLPFeePercent",
            "offset": 10,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1070,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "closePositionLPFeePercent",
            "offset": 12,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1073,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "buyingPremiumFeeMaxPercent",
            "offset": 14,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1076,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "closingPremiumFeeMaxPercent",
            "offset": 16,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1080,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "closePositionFeePercent",
            "offset": 18,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1083,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "buyingPremiumThreshold",
            "offset": 20,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1086,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "closePositionMaxFeePercent",
            "offset": 22,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1089,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "maxTurbulenceFeePercentToTrim",
            "offset": 24,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1092,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "turbulenceStepPercent",
            "offset": 26,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1096,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "turbulenceIndicatorPercent",
            "offset": 28,
            "slot": "3",
            "type": "t_uint16"
          },
          {
            "astId": 1099,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "oracleHeartbeatPeriod",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1102,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "closePositionFeeDecayPeriod",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 1105,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "fundingFeeConstantRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 1108,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "turbulenceDeviationThresholdPercent",
            "offset": 0,
            "slot": "7",
            "type": "t_uint16"
          },
          {
            "astId": 1111,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "turbulenceDeviationPercentage",
            "offset": 2,
            "slot": "7",
            "type": "t_uint16"
          },
          {
            "astId": 1115,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "oracleLeverage",
            "offset": 4,
            "slot": "7",
            "type": "t_uint8"
          },
          {
            "astId": 1220,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "collateralToBuyingPremiumMapping",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint16)dyn_storage"
          },
          {
            "astId": 1325,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "collateralToExtraFundingFeeMapping",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint32)dyn_storage"
          },
          {
            "astId": 1328,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "cviOracle",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(ICVIOracle)16426"
          },
          {
            "astId": 1331,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "thetaVault",
            "offset": 0,
            "slot": "11",
            "type": "t_contract(IThetaVaultInfo)18336"
          },
          {
            "astId": 1333,
            "contract": "contracts/platform/FeesCalculatorContracts.sol:CVIUSDCFeesCalculator",
            "label": "stateUpdator",
            "offset": 0,
            "slot": "12",
            "type": "t_address"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint16)dyn_storage": {
            "base": "t_uint16",
            "encoding": "dynamic_array",
            "label": "uint16[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint32)dyn_storage": {
            "base": "t_uint32",
            "encoding": "dynamic_array",
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_contract(ICVIOracle)16426": {
            "encoding": "inplace",
            "label": "contract ICVIOracle",
            "numberOfBytes": "20"
          },
          "t_contract(IThetaVaultInfo)18336": {
            "encoding": "inplace",
            "label": "contract IThetaVaultInfo",
            "numberOfBytes": "20"
          },
          "t_uint16": {
            "encoding": "inplace",
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "encoding": "inplace",
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "creationBlock": 51806565,
      "history": [
        {
          "blockNumber": 36889721,
          "address": "0xd5F468E5769BFcA313646070C18A267DA42d9F4E",
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract ICVIOracle",
                  "name": "_cviOracle",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "_maxCVIValue",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "_oracleLeverage",
                  "type": "uint8"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "buyingPremiumFeeMaxPercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "buyingPremiumThreshold",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint168",
                  "name": "_tokenAmount",
                  "type": "uint168"
                },
                {
                  "internalType": "uint8",
                  "name": "_leverage",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "_lastTotalLeveragedTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_lastTotalPositionUnits",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalLeveragedTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalPositionUnits",
                  "type": "uint256"
                }
              ],
              "name": "calculateBuyingPremiumFee",
              "outputs": [
                {
                  "internalType": "uint168",
                  "name": "buyingPremiumFee",
                  "type": "uint168"
                },
                {
                  "internalType": "uint16",
                  "name": "combinedPremiumFeePercentage",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint168",
                  "name": "_tokenAmount",
                  "type": "uint168"
                },
                {
                  "internalType": "uint8",
                  "name": "_leverage",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "_lastTotalLeveragedTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_lastTotalPositionUnits",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalLeveragedTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalPositionUnits",
                  "type": "uint256"
                },
                {
                  "internalType": "uint16",
                  "name": "_turbulenceIndicatorPercent",
                  "type": "uint16"
                }
              ],
              "name": "calculateBuyingPremiumFeeWithAddendum",
              "outputs": [
                {
                  "internalType": "uint168",
                  "name": "buyingPremiumFee",
                  "type": "uint168"
                },
                {
                  "internalType": "uint16",
                  "name": "combinedPremiumFeePercentage",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_creationTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_isNoLockPositionAddress",
                  "type": "bool"
                }
              ],
              "name": "calculateClosePositionFeePercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "calculateClosingPremiumFee",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "premiumFeePercentage",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_totalLeveragedTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalPositionUnits",
                  "type": "uint256"
                }
              ],
              "name": "calculateCollateralRatio",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "collateralRatio",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "period",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "cviValue",
                      "type": "uint32"
                    }
                  ],
                  "internalType": "struct IFeesCalculator.CVIValue[]",
                  "name": "_cviValues",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalLeveragedTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalPositionUnits",
                  "type": "uint256"
                }
              ],
              "name": "calculateSingleUnitFundingFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "fundingFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "period",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "cviValue",
                      "type": "uint32"
                    }
                  ],
                  "internalType": "struct IFeesCalculator.CVIValue",
                  "name": "_cviValue",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "_collateralRatio",
                  "type": "uint256"
                }
              ],
              "name": "calculateSingleUnitPeriodFundingFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "fundingFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fundingFeeRatePercents",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "totalTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "newRounds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "_lastCVIValue",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "_currCVIValue",
                  "type": "uint32"
                }
              ],
              "name": "calculateTurbulenceIndicatorPercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "calculateWithdrawFeePercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "closePositionFeeDecayPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "closePositionFeePercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "closePositionLPFeePercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "closePositionMaxFeePercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "closingPremiumFeeMaxPercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "collateralToBuyingPremiumMapping",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "collateralToExtraFundingFeeMapping",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "cviOracle",
              "outputs": [
                {
                  "internalType": "contract ICVIOracle",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "depositFeePercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fundingFeeConstantRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCollateralToBuyingPremiumMapping",
              "outputs": [
                {
                  "internalType": "uint16[]",
                  "name": "",
                  "type": "uint16[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCollateralToExtraFundingFeeMapping",
              "outputs": [
                {
                  "internalType": "uint32[]",
                  "name": "",
                  "type": "uint32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxCVIValue",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxTurbulenceFeePercentToTrim",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "openPositionFeePercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "openPositionFees",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "openPositionFeePercentResult",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "buyingPremiumFeeMaxPercentResult",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "openPositionLPFeePercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oracleHeartbeatPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oracleLeverage",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newBuyingPremiumFeeMaxPercentage",
                  "type": "uint16"
                }
              ],
              "name": "setBuyingPremiumFeeMax",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newBuyingPremiumThreshold",
                  "type": "uint16"
                }
              ],
              "name": "setBuyingPremiumThreshold",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newClosePositionFeePercentage",
                  "type": "uint16"
                }
              ],
              "name": "setClosePositionFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newClosePositionFeeDecayPeriod",
                  "type": "uint256"
                }
              ],
              "name": "setClosePositionFeeDecay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newClosePositionLPFeePercent",
                  "type": "uint16"
                }
              ],
              "name": "setClosePositionLPFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newClosePositionMaxFeePercentage",
                  "type": "uint16"
                }
              ],
              "name": "setClosePositionMaxFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newClosingPremiumFeeMaxPercentage",
                  "type": "uint16"
                }
              ],
              "name": "setClosingPremiumFeeMax",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16[]",
                  "name": "_newCollateralToBuyingPremiumMapping",
                  "type": "uint16[]"
                }
              ],
              "name": "setCollateralToBuyingPremiumMapping",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32[]",
                  "name": "_newCollateralToExtraFundingFeeMapping",
                  "type": "uint32[]"
                }
              ],
              "name": "setCollateralToExtraFundingFeeMapping",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newDepositFeePercentage",
                  "type": "uint16"
                }
              ],
              "name": "setDepositFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newfundingFeeConstantRate",
                  "type": "uint16"
                }
              ],
              "name": "setFundingFeeConstantRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newMaxTurbulenceFeePercentToTrim",
                  "type": "uint16"
                }
              ],
              "name": "setMaxTurbulenceFeePercentToTrim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newOpenPositionFeePercentage",
                  "type": "uint16"
                }
              ],
              "name": "setOpenPositionFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newOpenPositionLPFeePercent",
                  "type": "uint16"
                }
              ],
              "name": "setOpenPositionLPFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ICVIOracle",
                  "name": "_cviOracle",
                  "type": "address"
                }
              ],
              "name": "setOracle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newOracleHeartbeatPeriod",
                  "type": "uint256"
                }
              ],
              "name": "setOracleHeartbeatPeriod",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newUpdator",
                  "type": "address"
                }
              ],
              "name": "setStateUpdator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IThetaVaultInfo",
                  "name": "_thetaVault",
                  "type": "address"
                }
              ],
              "name": "setThetaVault",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newTurbulenceDeviationPercentage",
                  "type": "uint16"
                }
              ],
              "name": "setTurbulenceDeviationPercent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newTurbulenceDeviationThresholdPercent",
                  "type": "uint16"
                }
              ],
              "name": "setTurbulenceDeviationThresholdPercent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newTurbulenceStepPercentage",
                  "type": "uint16"
                }
              ],
              "name": "setTurbulenceStep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_newWithdrawFeePercentage",
                  "type": "uint16"
                }
              ],
              "name": "setWithdrawFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "stateUpdator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "thetaVault",
              "outputs": [
                {
                  "internalType": "contract IThetaVaultInfo",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "turbulenceDeviationPercentage",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "turbulenceDeviationThresholdPercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "turbulenceIndicatorPercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "turbulenceStepPercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_latestTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_blockTimestampSnapshot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_latestTimestampSnapshot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "_latestOracleRoundId",
                  "type": "uint80"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalLeveragedTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalPositionUnits",
                  "type": "uint256"
                }
              ],
              "name": "updateSnapshots",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "latestSnapshot",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "singleUnitFundingFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalRounds",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "cviValueTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint80",
                      "name": "newLatestRoundId",
                      "type": "uint80"
                    },
                    {
                      "internalType": "uint32",
                      "name": "cviValue",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bool",
                      "name": "updatedSnapshot",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "updatedLatestRoundId",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "updatedLatestTimestamp",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "updatedTurbulenceData",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IFeesCalculator.SnapshotUpdate",
                  "name": "snapshotUpdate",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_totalTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_newRounds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "_lastCVIValue",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "_currCVIValue",
                  "type": "uint32"
                }
              ],
              "name": "updateTurbulenceIndicatorPercent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawFeePercent",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ]
        },
        {
          "blockNumber": 29537824,
          "address": "0xe72Cf93E7d6CACd66560ac9F2E5D63CDFA8b9fc6"
        },
        {
          "blockNumber": 27433495,
          "address": "0x2655f9e0a83ef7e9Fad4d1CBbCD7e4211c0AD6CF"
        },
        {
          "blockNumber": 21238031,
          "address": "0x6DCE00Ea8d6f8Ca9cC3c35813C7aae6382E4201E"
        }
      ]
    },
    "CVIUSDCLiquidation": {
      "address": "0xDA8D0386e91b2334b23C043978383a91728A68Eb",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_maxCVIValue",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "LIQUIDATION_MAX_FEE_PERCENTAGE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_positionBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isPositive",
              "type": "bool"
            },
            {
              "internalType": "uint168",
              "name": "_positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_openCVIValue",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "_leverage",
              "type": "uint8"
            }
          ],
          "name": "getLiquidationReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "finderFeeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_positionBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isPositive",
              "type": "bool"
            },
            {
              "internalType": "uint168",
              "name": "_positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_openCVIValue",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "_leverage",
              "type": "uint8"
            }
          ],
          "name": "isLiquidationCandidate",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "liquidationMaxRewardPercents",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "liquidationMinRewardPercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "liquidationMinThresholdPercents",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxCVIValue",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16[8]",
              "name": "_newMaxRewardPercents",
              "type": "uint16[8]"
            }
          ],
          "name": "setMaxLiquidationRewardPercents",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newMinRewardPercent",
              "type": "uint16"
            }
          ],
          "name": "setMinLiquidationRewardPercent",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16[8]",
              "name": "_newMinThresholdPercents",
              "type": "uint16[8]"
            }
          ],
          "name": "setMinLiquidationThresholdPercents",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "transactionHash": "0x66dfaa250ab610345850ca747227a10dbba78adcc9ab0a480189bdd87f58844a",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0xDA8D0386e91b2334b23C043978383a91728A68Eb",
        "transactionIndex": 1,
        "gasUsed": "4661959",
        "logsBloom": "0x
        "blockHash": "0x13c739c506ddd5506831676aece0b7d560a1cff658c3af285d8582060a8804f8",
        "transactionHash": "0x66dfaa250ab610345850ca747227a10dbba78adcc9ab0a480189bdd87f58844a",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 29537811,
            "transactionHash": "0x66dfaa250ab610345850ca747227a10dbba78adcc9ab0a480189bdd87f58844a",
            "address": "0xDA8D0386e91b2334b23C043978383a91728A68Eb",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x13c739c506ddd5506831676aece0b7d560a1cff658c3af285d8582060a8804f8"
          }
        ],
        "blockNumber": 29537811,
        "cumulativeGasUsed": "4661959",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "20000"
      ],
      "numDeployments": 1,
      "solcInputHash": "8d836039a3333aa7ff1a69dee5a5f235",
      "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_maxCVIValue\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LIQUIDATION_MAX_FEE_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_positionBalance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isPositive\",\"type\":\"bool\"},{\"internalType\":\"uint168\",\"name\":\"_positionUnitsAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint32\",\"name\":\"_openCVIValue\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"_leverage\",\"type\":\"uint8\"}],\"name\":\"getLiquidationReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"finderFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_positionBalance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isPositive\",\"type\":\"bool\"},{\"internalType\":\"uint168\",\"name\":\"_positionUnitsAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint32\",\"name\":\"_openCVIValue\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"_leverage\",\"type\":\"uint8\"}],\"name\":\"isLiquidationCandidate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidationMaxRewardPercents\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationMinRewardPercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidationMinThresholdPercents\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCVIValue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16[8]\",\"name\":\"_newMaxRewardPercents\",\"type\":\"uint16[8]\"}],\"name\":\"setMaxLiquidationRewardPercents\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newMinRewardPercent\",\"type\":\"uint16\"}],\"name\":\"setMinLiquidationRewardPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16[8]\",\"name\":\"_newMinThresholdPercents\",\"type\":\"uint16[8]\"}],\"name\":\"setMinLiquidationThresholdPercents\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/platform/LiquiditationContracts.sol\":\"CVIUSDCLiquidation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@coti-cvi/contracts-cvi/contracts/Liquidation.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILiquidation.sol\\\";\\n\\ncontract Liquidation is ILiquidation, Ownable {\\n\\n    uint8 private constant MAX_LEVERAGE = 8;\\n\\n    uint16 public liquidationMinRewardPercent = 5;\\n    uint256 public constant LIQUIDATION_MAX_FEE_PERCENTAGE = 1000;\\n\\n    uint16[MAX_LEVERAGE] public liquidationMinThresholdPercents = [50, 50, 100, 100, 150, 150, 200, 200];\\n    uint16[MAX_LEVERAGE] public liquidationMaxRewardPercents = [30, 30, 30, 30, 30, 30, 30, 30];\\n\\n    uint32 public maxCVIValue;\\n\\n    constructor(uint32 _maxCVIValue) {\\n        maxCVIValue = _maxCVIValue;\\n    }\\n\\n    function setMinLiquidationThresholdPercents(uint16[MAX_LEVERAGE] calldata _newMinThresholdPercents) external override onlyOwner {\\n        for (uint256 i = 0; i < MAX_LEVERAGE; i++) {\\n            require(_newMinThresholdPercents[i] >= liquidationMaxRewardPercents[i], \\\"Threshold less than some max\\\");    \\n        }\\n\\n        liquidationMinThresholdPercents = _newMinThresholdPercents;\\n    }\\n\\n    function setMinLiquidationRewardPercent(uint16 _newMinRewardPercent) external override onlyOwner {\\n        for (uint256 i = 0; i < MAX_LEVERAGE; i++) {\\n            require(_newMinRewardPercent <= liquidationMaxRewardPercents[i], \\\"Min greater than some max\\\");    \\n        }\\n        \\n        liquidationMinRewardPercent = _newMinRewardPercent;\\n    }\\n\\n    function setMaxLiquidationRewardPercents(uint16[MAX_LEVERAGE] calldata _newMaxRewardPercents) external override onlyOwner {\\n        for (uint256 i = 0; i < MAX_LEVERAGE; i++) {\\n            require(_newMaxRewardPercents[i] <= liquidationMinThresholdPercents[i], \\\"Some max greater than threshold\\\");\\n            require(_newMaxRewardPercents[i] >= liquidationMinRewardPercent, \\\"Some max less than min\\\");\\n        }\\n\\n        liquidationMaxRewardPercents = _newMaxRewardPercents;\\n    }\\n\\n    function isLiquidationCandidate(uint256 _positionBalance, bool _isPositive, uint168 _positionUnitsAmount, uint32 _openCVIValue, uint8 _leverage) public view override returns (bool) {\\n        uint256 originalBalance = calculateOriginalBalance(_positionUnitsAmount, _openCVIValue, _leverage);\\n        return (!_isPositive ||  _positionBalance < originalBalance * liquidationMinThresholdPercents[_leverage - 1] / LIQUIDATION_MAX_FEE_PERCENTAGE);\\n    }\\n\\n    function getLiquidationReward(uint256 _positionBalance, bool _isPositive, uint168 _positionUnitsAmount, uint32 _openCVIValue, uint8 _leverage) external view override returns (uint256 finderFeeAmount) {\\n        if (!isLiquidationCandidate(_positionBalance, _isPositive, _positionUnitsAmount, _openCVIValue, _leverage)) {\\n            return 0;\\n        }\\n\\n        uint256 originalBalance = calculateOriginalBalance(_positionUnitsAmount, _openCVIValue, _leverage);\\n        uint256 minLiuquidationReward = originalBalance * liquidationMinRewardPercent / LIQUIDATION_MAX_FEE_PERCENTAGE;\\n\\n        if (!_isPositive || _positionBalance < minLiuquidationReward) {\\n            return minLiuquidationReward;\\n        }\\n\\n        uint256 maxLiquidationReward = originalBalance * liquidationMaxRewardPercents[_leverage - 1] / LIQUIDATION_MAX_FEE_PERCENTAGE;\\n        \\n        if (_isPositive && _positionBalance >= minLiuquidationReward && _positionBalance <= maxLiquidationReward) {\\n            finderFeeAmount = _positionBalance;\\n        } else {\\n            finderFeeAmount = maxLiquidationReward;\\n        }\\n    }\\n\\n    function calculateOriginalBalance(uint168 _positionUnitsAmount, uint32 _openCVIValue, uint8 _leverage) private view returns (uint256) {\\n        return _positionUnitsAmount * _openCVIValue / maxCVIValue - _positionUnitsAmount * _openCVIValue / maxCVIValue * (_leverage - 1) / _leverage;\\n    }\\n}\\n\",\"keccak256\":\"0xf2480f385f9167a1adff7b21c9bfc699eb3420d7f2a987984083a77c738935db\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ILiquidation.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ILiquidation {\\t\\n\\tfunction setMinLiquidationThresholdPercents(uint16[8] calldata newMinThresholdPercents) external;\\n\\tfunction setMinLiquidationRewardPercent(uint16 newMinRewardPercent) external;\\n\\tfunction setMaxLiquidationRewardPercents(uint16[8] calldata newMaxRewardPercents) external;\\n\\tfunction isLiquidationCandidate(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (bool);\\n\\tfunction getLiquidationReward(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (uint256 finderFeeAmount);\\n}\\n\",\"keccak256\":\"0x0799656b324ed8d65391313156e1dfe7d99b6dadb08e71cd6a515d19731539bd\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/platform/LiquiditationContracts.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport '@coti-cvi/contracts-cvi/contracts/Liquidation.sol';\\n\\ncontract CVIUSDCLiquidation is Liquidation {\\n  constructor(uint16 _maxCVIValue) Liquidation(_maxCVIValue) {}\\n}\\n\\ncontract CVIUSDCLiquidation2X is Liquidation {\\n  constructor(uint16 _maxCVIValue) Liquidation(_maxCVIValue) {}\\n}\",\"keccak256\":\"0x9315c11095293e41e3fb4f768d821b7cee856d2020cc095a895e818168b869ec\",\"license\":\"GPL-3.0\"}},\"version\":1}",
      "bytecode": "0x6000805461ffff60a01b1916600560a01b1790556101806040526032608081815260a091909152606460c081905260e05260966101008190526101205260c861014081905261016052620000589060019060086200015c565b506040805161010081018252601e80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152620000aa9060029060086200015c565b50348015620000b857600080fd5b5060405162000ee838038062000ee8833981016040819052620000db916200020f565b61ffff8116620000eb336200010c565b6003805463ffffffff191663ffffffff92909216919091179055506200023a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600183019183908215620001e65791602002820160005b83821115620001b457835183826101000a81548161ffff021916908360ff160217905550926020019260020160208160010104928301926001030262000173565b8015620001e45782816101000a81549061ffff0219169055600201602081600101049283019260010302620001b4565b505b50620001f4929150620001f8565b5090565b5b80821115620001f45760008155600101620001f9565b60006020828403121562000221578081fd5b815161ffff8116811462000233578182fd5b9392505050565b610c9e806200024a6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063b191ad2d1161008c578063c9dc245011610066578063c9dc2450146101b6578063d934c20b146101bf578063e19cc3a7146101e4578063f2fde38b146101f757600080fd5b8063b191ad2d1461016d578063b76f61c71461018e578063c5e686bc146101a157600080fd5b806307b6ef92146100d45780633e670229146100ff578063715018a6146101225780638da5cb5b1461012c57806398d3bc6414610147578063af1681301461015a575b600080fd5b6100e76100e2366004610a7e565b61020a565b60405161ffff90911681526020015b60405180910390f35b61011261010d366004610a96565b610238565b60405190151581526020016100f6565b61012a6102c3565b005b6000546040516001600160a01b0390911681526020016100f6565b6100e7610155366004610a7e565b610302565b61012a610168366004610a33565b610312565b61018061017b366004610a96565b610430565b6040519081526020016100f6565b61012a61019c366004610a33565b61053d565b6000546100e790600160a01b900461ffff1681565b6101806103e881565b6003546101cf9063ffffffff1681565b60405163ffffffff90911681526020016100f6565b61012a6101f2366004610a5c565b6106e3565b61012a610205366004610a05565b6107e0565b6002816008811061021a57600080fd5b60109182820401919006600202915054906101000a900461ffff1681565b60008061024685858561087b565b90508515806102b657506103e8600161025f8186610bfe565b60ff166008811061028057634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff16826102a99190610bb7565b6102b39190610b74565b87105b9150505b95945050505050565b6000546001600160a01b031633146102f65760405162461bcd60e51b81526004016102ed90610b19565b60405180910390fd5b6103006000610906565b565b6001816008811061021a57600080fd5b6000546001600160a01b0316331461033c5760405162461bcd60e51b81526004016102ed90610b19565b60005b600881101561041e576002816008811061036957634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff168282600881106103a757634e487b7160e01b600052603260045260246000fd5b6020020160208101906103ba9190610a5c565b61ffff16101561040c5760405162461bcd60e51b815260206004820152601c60248201527f5468726573686f6c64206c657373207468616e20736f6d65206d61780000000060448201526064016102ed565b8061041681610c21565b91505061033f565b5061042c6001826008610956565b5050565b600061043f8686868686610238565b61044b575060006102ba565b600061045885858561087b565b60008054919250906103e89061047990600160a01b900461ffff1684610bb7565b6104839190610b74565b905086158061049157508088105b1561049f5791506102ba9050565b60006103e860026104b1600188610bfe565b60ff16600881106104d257634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff16846104fb9190610bb7565b6105059190610b74565b90508780156105145750818910155b80156105205750808911155b1561052d57889350610531565b8093505b50505095945050505050565b6000546001600160a01b031633146105675760405162461bcd60e51b81526004016102ed90610b19565b60005b60088110156106d5576001816008811061059457634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff168282600881106105d257634e487b7160e01b600052603260045260246000fd5b6020020160208101906105e59190610a5c565b61ffff1611156106375760405162461bcd60e51b815260206004820152601f60248201527f536f6d65206d61782067726561746572207468616e207468726573686f6c640060448201526064016102ed565b600054600160a01b900461ffff1682826008811061066557634e487b7160e01b600052603260045260246000fd5b6020020160208101906106789190610a5c565b61ffff1610156106c35760405162461bcd60e51b815260206004820152601660248201527529b7b6b29036b0bc103632b9b9903a3430b71036b4b760511b60448201526064016102ed565b806106cd81610c21565b91505061056a565b5061042c6002826008610956565b6000546001600160a01b0316331461070d5760405162461bcd60e51b81526004016102ed90610b19565b60005b60088110156107bd576002816008811061073a57634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff168261ffff1611156107ab5760405162461bcd60e51b815260206004820152601960248201527f4d696e2067726561746572207468616e20736f6d65206d61780000000000000060448201526064016102ed565b806107b581610c21565b915050610710565b506000805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b6000546001600160a01b0316331461080a5760405162461bcd60e51b81526004016102ed90610b19565b6001600160a01b03811661086f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ed565b61087881610906565b50565b600060ff821661088c600184610bfe565b60035460ff919091169063ffffffff908116906108ab90871688610b88565b6108b59190610b4e565b6108bf9190610b88565b6108c99190610b4e565b60035463ffffffff908116906108e190861687610b88565b6108eb9190610b4e565b6108f59190610bd6565b6001600160a81b0316949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001830191839082156109e05791602002820160005b838211156109b057833561ffff1683826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030261096c565b80156109de5782816101000a81549061ffff02191690556002016020816001010492830192600103026109b0565b505b506109ec9291506109f0565b5090565b5b808211156109ec57600081556001016109f1565b600060208284031215610a16578081fd5b81356001600160a01b0381168114610a2c578182fd5b9392505050565b6000610100808385031215610a46578182fd5b838184011115610a54578182fd5b509092915050565b600060208284031215610a6d578081fd5b813561ffff81168114610a2c578182fd5b600060208284031215610a8f578081fd5b5035919050565b600080600080600060a08688031215610aad578081fd5b8535945060208601358015158114610ac3578182fd5b935060408601356001600160a81b0381168114610ade578182fd5b9250606086013563ffffffff81168114610af6578182fd5b9150608086013560ff81168114610b0b578182fd5b809150509295509295909350565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006001600160a81b0383811680610b6857610b68610c52565b92169190910492915050565b600082610b8357610b83610c52565b500490565b60006001600160a81b0382811684821681151582840482111615610bae57610bae610c3c565b02949350505050565b6000816000190483118215151615610bd157610bd1610c3c565b500290565b60006001600160a81b0383811690831681811015610bf657610bf6610c3c565b039392505050565b600060ff821660ff841680821015610c1857610c18610c3c565b90039392505050565b6000600019821415610c3557610c35610c3c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220e108e84b09e55f984c80e372ed1806591e67968b266af8231299aee723ec7abd64736f6c63430008040033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063b191ad2d1161008c578063c9dc245011610066578063c9dc2450146101b6578063d934c20b146101bf578063e19cc3a7146101e4578063f2fde38b146101f757600080fd5b8063b191ad2d1461016d578063b76f61c71461018e578063c5e686bc146101a157600080fd5b806307b6ef92146100d45780633e670229146100ff578063715018a6146101225780638da5cb5b1461012c57806398d3bc6414610147578063af1681301461015a575b600080fd5b6100e76100e2366004610a7e565b61020a565b60405161ffff90911681526020015b60405180910390f35b61011261010d366004610a96565b610238565b60405190151581526020016100f6565b61012a6102c3565b005b6000546040516001600160a01b0390911681526020016100f6565b6100e7610155366004610a7e565b610302565b61012a610168366004610a33565b610312565b61018061017b366004610a96565b610430565b6040519081526020016100f6565b61012a61019c366004610a33565b61053d565b6000546100e790600160a01b900461ffff1681565b6101806103e881565b6003546101cf9063ffffffff1681565b60405163ffffffff90911681526020016100f6565b61012a6101f2366004610a5c565b6106e3565b61012a610205366004610a05565b6107e0565b6002816008811061021a57600080fd5b60109182820401919006600202915054906101000a900461ffff1681565b60008061024685858561087b565b90508515806102b657506103e8600161025f8186610bfe565b60ff166008811061028057634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff16826102a99190610bb7565b6102b39190610b74565b87105b9150505b95945050505050565b6000546001600160a01b031633146102f65760405162461bcd60e51b81526004016102ed90610b19565b60405180910390fd5b6103006000610906565b565b6001816008811061021a57600080fd5b6000546001600160a01b0316331461033c5760405162461bcd60e51b81526004016102ed90610b19565b60005b600881101561041e576002816008811061036957634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff168282600881106103a757634e487b7160e01b600052603260045260246000fd5b6020020160208101906103ba9190610a5c565b61ffff16101561040c5760405162461bcd60e51b815260206004820152601c60248201527f5468726573686f6c64206c657373207468616e20736f6d65206d61780000000060448201526064016102ed565b8061041681610c21565b91505061033f565b5061042c6001826008610956565b5050565b600061043f8686868686610238565b61044b575060006102ba565b600061045885858561087b565b60008054919250906103e89061047990600160a01b900461ffff1684610bb7565b6104839190610b74565b905086158061049157508088105b1561049f5791506102ba9050565b60006103e860026104b1600188610bfe565b60ff16600881106104d257634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff16846104fb9190610bb7565b6105059190610b74565b90508780156105145750818910155b80156105205750808911155b1561052d57889350610531565b8093505b50505095945050505050565b6000546001600160a01b031633146105675760405162461bcd60e51b81526004016102ed90610b19565b60005b60088110156106d5576001816008811061059457634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff168282600881106105d257634e487b7160e01b600052603260045260246000fd5b6020020160208101906105e59190610a5c565b61ffff1611156106375760405162461bcd60e51b815260206004820152601f60248201527f536f6d65206d61782067726561746572207468616e207468726573686f6c640060448201526064016102ed565b600054600160a01b900461ffff1682826008811061066557634e487b7160e01b600052603260045260246000fd5b6020020160208101906106789190610a5c565b61ffff1610156106c35760405162461bcd60e51b815260206004820152601660248201527529b7b6b29036b0bc103632b9b9903a3430b71036b4b760511b60448201526064016102ed565b806106cd81610c21565b91505061056a565b5061042c6002826008610956565b6000546001600160a01b0316331461070d5760405162461bcd60e51b81526004016102ed90610b19565b60005b60088110156107bd576002816008811061073a57634e487b7160e01b600052603260045260246000fd5b601091828204019190066002029054906101000a900461ffff1661ffff168261ffff1611156107ab5760405162461bcd60e51b815260206004820152601960248201527f4d696e2067726561746572207468616e20736f6d65206d61780000000000000060448201526064016102ed565b806107b581610c21565b915050610710565b506000805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b6000546001600160a01b0316331461080a5760405162461bcd60e51b81526004016102ed90610b19565b6001600160a01b03811661086f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ed565b61087881610906565b50565b600060ff821661088c600184610bfe565b60035460ff919091169063ffffffff908116906108ab90871688610b88565b6108b59190610b4e565b6108bf9190610b88565b6108c99190610b4e565b60035463ffffffff908116906108e190861687610b88565b6108eb9190610b4e565b6108f59190610bd6565b6001600160a81b0316949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001830191839082156109e05791602002820160005b838211156109b057833561ffff1683826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030261096c565b80156109de5782816101000a81549061ffff02191690556002016020816001010492830192600103026109b0565b505b506109ec9291506109f0565b5090565b5b808211156109ec57600081556001016109f1565b600060208284031215610a16578081fd5b81356001600160a01b0381168114610a2c578182fd5b9392505050565b6000610100808385031215610a46578182fd5b838184011115610a54578182fd5b509092915050565b600060208284031215610a6d578081fd5b813561ffff81168114610a2c578182fd5b600060208284031215610a8f578081fd5b5035919050565b600080600080600060a08688031215610aad578081fd5b8535945060208601358015158114610ac3578182fd5b935060408601356001600160a81b0381168114610ade578182fd5b9250606086013563ffffffff81168114610af6578182fd5b9150608086013560ff81168114610b0b578182fd5b809150509295509295909350565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006001600160a81b0383811680610b6857610b68610c52565b92169190910492915050565b600082610b8357610b83610c52565b500490565b60006001600160a81b0382811684821681151582840482111615610bae57610bae610c3c565b02949350505050565b6000816000190483118215151615610bd157610bd1610c3c565b500290565b60006001600160a81b0383811690831681811015610bf657610bf6610c3c565b039392505050565b600060ff821660ff841680821015610c1857610c18610c3c565b90039392505050565b6000600019821415610c3557610c35610c3c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220e108e84b09e55f984c80e372ed1806591e67968b266af8231299aee723ec7abd64736f6c63430008040033",
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 37156,
            "contract": "contracts/platform/LiquiditationContracts.sol:CVIUSDCLiquidation",
            "label": "_owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2989,
            "contract": "contracts/platform/LiquiditationContracts.sol:CVIUSDCLiquidation",
            "label": "liquidationMinRewardPercent",
            "offset": 20,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 3005,
            "contract": "contracts/platform/LiquiditationContracts.sol:CVIUSDCLiquidation",
            "label": "liquidationMinThresholdPercents",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint16)8_storage"
          },
          {
            "astId": 3018,
            "contract": "contracts/platform/LiquiditationContracts.sol:CVIUSDCLiquidation",
            "label": "liquidationMaxRewardPercents",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint16)8_storage"
          },
          {
            "astId": 3020,
            "contract": "contracts/platform/LiquiditationContracts.sol:CVIUSDCLiquidation",
            "label": "maxCVIValue",
            "offset": 0,
            "slot": "3",
            "type": "t_uint32"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint16)8_storage": {
            "base": "t_uint16",
            "encoding": "inplace",
            "label": "uint16[8]",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "encoding": "inplace",
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint32": {
            "encoding": "inplace",
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      },
      "creationBlock": 29537811,
      "history": [
        {
          "blockNumber": 27433475,
          "address": "0x4ebB6D9aAc1E3E16D41f509711403eF7ad873765"
        },
        {
          "blockNumber": 21229481,
          "address": "0xF73b4996f0195E0279bd77588526746190021202"
        }
      ]
    },
    "CVIUSDCPlatform": {
      "address": "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "positionUnitsAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "leverage",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "cviValue",
              "type": "uint256"
            }
          ],
          "name": "ClosePosition",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "lpTokensAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "positionAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "currentPositionBalance",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isBalancePositive",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "positionUnitsAmount",
              "type": "uint256"
            }
          ],
          "name": "LiquidatePosition",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "leverage",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "positionUnitsAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "cviValue",
              "type": "uint256"
            }
          ],
          "name": "OpenPosition",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "lpTokensAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "MAX_FEE_PERCENTAGE",
          "outputs": [
            {
              "internalType": "uint168",
              "name": "",
              "type": "uint168"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "PRECISION_DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "buyersLockupPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "calculateLatestTurbulenceIndicatorPercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_positionAddress",
              "type": "address"
            }
          ],
          "name": "calculatePositionBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentPositionBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPositive",
              "type": "bool"
            },
            {
              "internalType": "uint168",
              "name": "positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint8",
              "name": "leverage",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "fundingFees",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "marginDebt",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_positionAddress",
              "type": "address"
            },
            {
              "internalType": "uint168",
              "name": "_positionUnitsAmount",
              "type": "uint168"
            }
          ],
          "name": "calculatePositionPendingFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pendingFees",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_minCVI",
              "type": "uint32"
            }
          ],
          "name": "closePosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closePositionFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closingPremiumFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_minCVI",
              "type": "uint32"
            }
          ],
          "name": "closePositionWithoutFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closePositionFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closingPremiumFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cviOracle",
          "outputs": [
            {
              "internalType": "contract ICVIOracle",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "cviSnapshots",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minLPTokenAmount",
              "type": "uint256"
            }
          ],
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lpTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "emergencyWithdrawAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "feesCalculator",
          "outputs": [
            {
              "internalType": "contract IFeesCalculator",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "feesCollector",
          "outputs": [
            {
              "internalType": "contract IFeesCollector",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenAmount",
              "type": "uint256"
            }
          ],
          "name": "increaseSharedPool",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "increaseSharedPoolAllowedAddresses",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "initialTokenToLPTokenRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_lpTokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_lpTokenSymbolName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_initialTokenToLPTokenRate",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_maxCVIValue",
              "type": "uint32"
            },
            {
              "internalType": "contract IFeesCalculator",
              "name": "_feesCalculator",
              "type": "address"
            },
            {
              "internalType": "contract ICVIOracle",
              "name": "_cviOracle",
              "type": "address"
            },
            {
              "internalType": "contract ILiquidation",
              "name": "_liquidation",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "lastDepositTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestFundingFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestOracleRoundId",
          "outputs": [
            {
              "internalType": "uint80",
              "name": "",
              "type": "uint80"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestSnapshotTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_positionOwners",
              "type": "address[]"
            }
          ],
          "name": "liquidatePositions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "finderFeeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "liquidation",
          "outputs": [
            {
              "internalType": "contract ILiquidation",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "liquidityProviders",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lpsLockupPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxAllowedLeverage",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxCVIValue",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxTimeAllowedAfterLatestRound",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "noLockPositionAddresses",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_maxCVI",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "_maxBuyingPremiumFeePercentage",
              "type": "uint16"
            },
            {
              "internalType": "uint8",
              "name": "_leverage",
              "type": "uint8"
            }
          ],
          "name": "openPosition",
          "outputs": [
            {
              "internalType": "uint168",
              "name": "positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint168",
              "name": "positionedTokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint168",
              "name": "openPositionFee",
              "type": "uint168"
            },
            {
              "internalType": "uint168",
              "name": "buyingPremiumFee",
              "type": "uint168"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_maxCVI",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "_leverage",
              "type": "uint8"
            }
          ],
          "name": "openPositionWithoutFee",
          "outputs": [
            {
              "internalType": "uint168",
              "name": "positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint168",
              "name": "positionedTokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint168",
              "name": "openPositionFee",
              "type": "uint168"
            },
            {
              "internalType": "uint168",
              "name": "buyingPremiumFee",
              "type": "uint168"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "positionHoldersAllowedAddresses",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "positions",
          "outputs": [
            {
              "internalType": "uint168",
              "name": "positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint8",
              "name": "leverage",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "openCVIValue",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "creationTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "originalCreationTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "revertLockedTransfered",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rewards",
          "outputs": [
            {
              "internalType": "contract IRewardsCollector",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_holderAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_shouldLockPosition",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_positionHolderAllowed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_increaseSharedPoolAllowed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_isLiquidityProvider",
              "type": "bool"
            }
          ],
          "name": "setAddressSpecificParameters",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newEmergencyWithdrawAllowed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_newCanPurgeSnapshots",
              "type": "bool"
            }
          ],
          "name": "setEmergencyParameters",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFeesCalculator",
              "name": "_newCalculator",
              "type": "address"
            }
          ],
          "name": "setFeesCalculator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_newOracleRoundId",
              "type": "uint80"
            }
          ],
          "name": "setLatestOracleRoundId",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newLPLockupPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_newBuyersLockupPeriod",
              "type": "uint256"
            }
          ],
          "name": "setLockupPeriods",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "_newMaxAllowedLeverage",
              "type": "uint8"
            }
          ],
          "name": "setMaxAllowedLeverage",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_newMaxTimeAllowedAfterLatestRound",
              "type": "uint32"
            }
          ],
          "name": "setMaxTimeAllowedAfterLatestRound",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_revertLockedTransfers",
              "type": "bool"
            }
          ],
          "name": "setRevertLockedTransfers",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFeesCollector",
              "name": "_newCollector",
              "type": "address"
            },
            {
              "internalType": "contract ICVIOracle",
              "name": "_newOracle",
              "type": "address"
            },
            {
              "internalType": "contract IRewardsCollector",
              "name": "_newRewards",
              "type": "address"
            },
            {
              "internalType": "contract ILiquidation",
              "name": "_newLiquidation",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_newStakingContractAddress",
              "type": "address"
            }
          ],
          "name": "setSubContracts",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stakingContractAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_withAddendum",
              "type": "bool"
            }
          ],
          "name": "totalBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalFundingFeesAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalLeveragedTokensAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalPositionUnitsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxLPTokenBurnAmount",
              "type": "uint256"
            }
          ],
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "burntAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawnAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_lpTokensAmount",
              "type": "uint256"
            }
          ],
          "name": "withdrawLPTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "burntAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawnAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        }
      ],
      "transactionHash": "0xbab65a8aca87c752dbbb49dd6f61c9ddb46b488f54243dd76b1b3d246ea5873b",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
        "transactionIndex": 1,
        "gasUsed": "5443465",
        "logsBloom": "0x00000000000000000000000000000000400000000000000000800000000000000000000000000000000000020000000000000400000000000000000000000040400000000000000000000000000002000001000000000000000000000000000400000000420000000000000000000800000000800000000000020000000000400000000000000000000000000000000000000000000080000000000000800000000000000000000000000000000400020000400000000000000000000000000000000020000000000000000000040000000000000400000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
        "blockHash": "0x9d731322c6998b56b83625f1d4cc9bc4a541a00fd19fa7925c4fa9a17af50ccb",
        "transactionHash": "0xbab65a8aca87c752dbbb49dd6f61c9ddb46b488f54243dd76b1b3d246ea5873b",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 29537849,
            "transactionHash": "0xbab65a8aca87c752dbbb49dd6f61c9ddb46b488f54243dd76b1b3d246ea5873b",
            "address": "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x0000000000000000000000008a53460ea9cd297b2283085af8ff675cd9f8fc09"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x9d731322c6998b56b83625f1d4cc9bc4a541a00fd19fa7925c4fa9a17af50ccb"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537849,
            "transactionHash": "0xbab65a8aca87c752dbbb49dd6f61c9ddb46b488f54243dd76b1b3d246ea5873b",
            "address": "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 1,
            "blockHash": "0x9d731322c6998b56b83625f1d4cc9bc4a541a00fd19fa7925c4fa9a17af50ccb"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537849,
            "transactionHash": "0xbab65a8aca87c752dbbb49dd6f61c9ddb46b488f54243dd76b1b3d246ea5873b",
            "address": "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
            "topics": [
              "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "logIndex": 2,
            "blockHash": "0x9d731322c6998b56b83625f1d4cc9bc4a541a00fd19fa7925c4fa9a17af50ccb"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537849,
            "transactionHash": "0xbab65a8aca87c752dbbb49dd6f61c9ddb46b488f54243dd76b1b3d246ea5873b",
            "address": "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
            ],
            "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d2669586e17fc93773cc637becfa983525501eb",
            "logIndex": 3,
            "blockHash": "0x9d731322c6998b56b83625f1d4cc9bc4a541a00fd19fa7925c4fa9a17af50ccb"
          }
        ],
        "blockNumber": 29537849,
        "cumulativeGasUsed": "5443465",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0x8a53460ea9Cd297B2283085AF8ff675cd9f8FC09",
        "0x9D2669586E17fC93773cc637becfA983525501Eb",
        "0x91353638000000000000000000000000ff970a61a04b1ca14834a43f5de4533ebddb5cc800000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000e8d4a510000000000000000000000000000000000000000000000000000000000000004e20000000000000000000000000e72cf93e7d6cacd66560ac9f2e5d63cdfa8b9fc6000000000000000000000000649813b6dc6111d67484badedd377d32e4505f85000000000000000000000000da8d0386e91b2334b23c043978383a91728a68eb0000000000000000000000000000000000000000000000000000000000000006435649204c50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064356492d4c500000000000000000000000000000000000000000000000000000"
      ],
      "numDeployments": 1,
      "solcInputHash": "0e89febeebc7444140de8e67c9067d2c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x93b4e21c931252739a1ec13ea31d3d35a5c068be3163ccab83e4d70c40355f03\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view virtual returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(Address.isContract(IBeacon(newBeacon).implementation()), \\\"ERC1967: beacon implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17668652127feebed0ce8d9431ef95ccc8c4292f03e3b8cf06c6ca16af396633\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xd5d1fd16e9faff7fcb3a52e02a8d49156f42a38a03f07b5f1810c21c2149a8ab\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3777e696b62134e6177440dbe6e6601c0c156a443f57167194b67e75527439de\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
      "deployedBytecode": "0x60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033",
      "execute": {
        "methodName": "initialize",
        "args": [
          "0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",
          "CVI LP",
          "CVI-LP",
          {
            "type": "BigNumber",
            "hex": "0xe8d4a51000"
          },
          {
            "type": "BigNumber",
            "hex": "0x4e20"
          },
          "0xe72Cf93E7d6CACd66560ac9F2E5D63CDFA8b9fc6",
          "0x649813B6dc6111D67484BaDeDd377D32e4505F85",
          "0xDA8D0386e91b2334b23C043978383a91728A68Eb"
        ]
      },
      "implementation": "0x8a53460ea9Cd297B2283085AF8ff675cd9f8FC09",
      "devdoc": {
        "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
        "kind": "dev",
        "methods": {
          "admin()": {
            "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
          },
          "constructor": {
            "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
          },
          "implementation()": {
            "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      },
      "creationBlock": 29537849,
      "history": []
    },
    "CVIUSDCPlatform_Implementation": {
      "address": "0x8a53460ea9Cd297B2283085AF8ff675cd9f8FC09",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "positionUnitsAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "leverage",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "cviValue",
              "type": "uint256"
            }
          ],
          "name": "ClosePosition",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "lpTokensAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "positionAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "currentPositionBalance",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isBalancePositive",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "positionUnitsAmount",
              "type": "uint256"
            }
          ],
          "name": "LiquidatePosition",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "leverage",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "positionUnitsAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "cviValue",
              "type": "uint256"
            }
          ],
          "name": "OpenPosition",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "lpTokensAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "MAX_FEE_PERCENTAGE",
          "outputs": [
            {
              "internalType": "uint168",
              "name": "",
              "type": "uint168"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "PRECISION_DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "buyersLockupPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "calculateLatestTurbulenceIndicatorPercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_positionAddress",
              "type": "address"
            }
          ],
          "name": "calculatePositionBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentPositionBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPositive",
              "type": "bool"
            },
            {
              "internalType": "uint168",
              "name": "positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint8",
              "name": "leverage",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "fundingFees",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "marginDebt",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_positionAddress",
              "type": "address"
            },
            {
              "internalType": "uint168",
              "name": "_positionUnitsAmount",
              "type": "uint168"
            }
          ],
          "name": "calculatePositionPendingFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pendingFees",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_minCVI",
              "type": "uint32"
            }
          ],
          "name": "closePosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closePositionFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closingPremiumFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_minCVI",
              "type": "uint32"
            }
          ],
          "name": "closePositionWithoutFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closePositionFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closingPremiumFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cviOracle",
          "outputs": [
            {
              "internalType": "contract ICVIOracle",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "cviSnapshots",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minLPTokenAmount",
              "type": "uint256"
            }
          ],
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lpTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "emergencyWithdrawAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "feesCalculator",
          "outputs": [
            {
              "internalType": "contract IFeesCalculator",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "feesCollector",
          "outputs": [
            {
              "internalType": "contract IFeesCollector",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenAmount",
              "type": "uint256"
            }
          ],
          "name": "increaseSharedPool",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "increaseSharedPoolAllowedAddresses",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "initialTokenToLPTokenRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_lpTokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_lpTokenSymbolName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_initialTokenToLPTokenRate",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_maxCVIValue",
              "type": "uint32"
            },
            {
              "internalType": "contract IFeesCalculator",
              "name": "_feesCalculator",
              "type": "address"
            },
            {
              "internalType": "contract ICVIOracle",
              "name": "_cviOracle",
              "type": "address"
            },
            {
              "internalType": "contract ILiquidation",
              "name": "_liquidation",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "lastDepositTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestFundingFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestOracleRoundId",
          "outputs": [
            {
              "internalType": "uint80",
              "name": "",
              "type": "uint80"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestSnapshotTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_positionOwners",
              "type": "address[]"
            }
          ],
          "name": "liquidatePositions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "finderFeeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "liquidation",
          "outputs": [
            {
              "internalType": "contract ILiquidation",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "liquidityProviders",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lpsLockupPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxAllowedLeverage",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxCVIValue",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxTimeAllowedAfterLatestRound",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "noLockPositionAddresses",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_maxCVI",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "_maxBuyingPremiumFeePercentage",
              "type": "uint16"
            },
            {
              "internalType": "uint8",
              "name": "_leverage",
              "type": "uint8"
            }
          ],
          "name": "openPosition",
          "outputs": [
            {
              "internalType": "uint168",
              "name": "positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint168",
              "name": "positionedTokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint168",
              "name": "openPositionFee",
              "type": "uint168"
            },
            {
              "internalType": "uint168",
              "name": "buyingPremiumFee",
              "type": "uint168"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_maxCVI",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "_leverage",
              "type": "uint8"
            }
          ],
          "name": "openPositionWithoutFee",
          "outputs": [
            {
              "internalType": "uint168",
              "name": "positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint168",
              "name": "positionedTokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint168",
              "name": "openPositionFee",
              "type": "uint168"
            },
            {
              "internalType": "uint168",
              "name": "buyingPremiumFee",
              "type": "uint168"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "positionHoldersAllowedAddresses",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "positions",
          "outputs": [
            {
              "internalType": "uint168",
              "name": "positionUnitsAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint8",
              "name": "leverage",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "openCVIValue",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "creationTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "originalCreationTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "revertLockedTransfered",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rewards",
          "outputs": [
            {
              "internalType": "contract IRewardsCollector",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_holderAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_shouldLockPosition",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_positionHolderAllowed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_increaseSharedPoolAllowed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_isLiquidityProvider",
              "type": "bool"
            }
          ],
          "name": "setAddressSpecificParameters",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newEmergencyWithdrawAllowed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_newCanPurgeSnapshots",
              "type": "bool"
            }
          ],
          "name": "setEmergencyParameters",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFeesCalculator",
              "name": "_newCalculator",
              "type": "address"
            }
          ],
          "name": "setFeesCalculator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_newOracleRoundId",
              "type": "uint80"
            }
          ],
          "name": "setLatestOracleRoundId",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newLPLockupPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_newBuyersLockupPeriod",
              "type": "uint256"
            }
          ],
          "name": "setLockupPeriods",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "_newMaxAllowedLeverage",
              "type": "uint8"
            }
          ],
          "name": "setMaxAllowedLeverage",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_newMaxTimeAllowedAfterLatestRound",
              "type": "uint32"
            }
          ],
          "name": "setMaxTimeAllowedAfterLatestRound",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_revertLockedTransfers",
              "type": "bool"
            }
          ],
          "name": "setRevertLockedTransfers",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFeesCollector",
              "name": "_newCollector",
              "type": "address"
            },
            {
              "internalType": "contract ICVIOracle",
              "name": "_newOracle",
              "type": "address"
            },
            {
              "internalType": "contract IRewardsCollector",
              "name": "_newRewards",
              "type": "address"
            },
            {
              "internalType": "contract ILiquidation",
              "name": "_newLiquidation",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_newStakingContractAddress",
              "type": "address"
            }
          ],
          "name": "setSubContracts",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stakingContractAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_withAddendum",
              "type": "bool"
            }
          ],
          "name": "totalBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalFundingFeesAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalLeveragedTokensAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalPositionUnitsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxLPTokenBurnAmount",
              "type": "uint256"
            }
          ],
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "burntAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawnAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_lpTokensAmount",
              "type": "uint256"
            }
          ],
          "name": "withdrawLPTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "burntAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawnAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "transactionHash": "0x22460c3db1e25d75be16071ee953ba2f12c02718b57a11f4136e7ce7e6f6ec97",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x8a53460ea9Cd297B2283085AF8ff675cd9f8FC09",
        "transactionIndex": 1,
        "gasUsed": "23874335",
        "logsBloom": "0x
        "blockHash": "0xe8d8caaf22e3a4adf59ff3679545ecd1c83129d4ffab3294e0a6aa9d229b6640",
        "transactionHash": "0x22460c3db1e25d75be16071ee953ba2f12c02718b57a11f4136e7ce7e6f6ec97",
        "logs": [],
        "blockNumber": 29537836,
        "cumulativeGasUsed": "23874335",
        "status": 1,
        "byzantium": true
      },
      "args": [],
      "numDeployments": 1,
      "solcInputHash": "8d836039a3333aa7ff1a69dee5a5f235",
      "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionUnitsAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cviValue\",\"type\":\"uint256\"}],\"name\":\"ClosePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokensAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"positionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentPositionBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBalancePositive\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionUnitsAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidatePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionUnitsAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cviValue\",\"type\":\"uint256\"}],\"name\":\"OpenPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokensAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint168\",\"name\":\"\",\"type\":\"uint168\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyersLockupPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateLatestTurbulenceIndicatorPercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_positionAddress\",\"type\":\"address\"}],\"name\":\"calculatePositionBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentPositionBalance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPositive\",\"type\":\"bool\"},{\"internalType\":\"uint168\",\"name\":\"positionUnitsAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"fundingFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marginDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_positionAddress\",\"type\":\"address\"},{\"internalType\":\"uint168\",\"name\":\"_positionUnitsAmount\",\"type\":\"uint168\"}],\"name\":\"calculatePositionPendingFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pendingFees\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"_positionUnitsAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint32\",\"name\":\"_minCVI\",\"type\":\"uint32\"}],\"name\":\"closePosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closePositionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closingPremiumFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"_positionUnitsAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint32\",\"name\":\"_minCVI\",\"type\":\"uint32\"}],\"name\":\"closePositionWithoutFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closePositionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closingPremiumFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cviOracle\",\"outputs\":[{\"internalType\":\"contract ICVIOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cviSnapshots\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minLPTokenAmount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpTokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesCalculator\",\"outputs\":[{\"internalType\":\"contract IFeesCalculator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesCollector\",\"outputs\":[{\"internalType\":\"contract IFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"increaseSharedPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"increaseSharedPoolAllowedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialTokenToLPTokenRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_lpTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_lpTokenSymbolName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_initialTokenToLPTokenRate\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_maxCVIValue\",\"type\":\"uint32\"},{\"internalType\":\"contract IFeesCalculator\",\"name\":\"_feesCalculator\",\"type\":\"address\"},{\"internalType\":\"contract ICVIOracle\",\"name\":\"_cviOracle\",\"type\":\"address\"},{\"internalType\":\"contract ILiquidation\",\"name\":\"_liquidation\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastDepositTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestFundingFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestOracleRoundId\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestSnapshotTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_positionOwners\",\"type\":\"address[]\"}],\"name\":\"liquidatePositions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"finderFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidation\",\"outputs\":[{\"internalType\":\"contract ILiquidation\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityProviders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpsLockupPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAllowedLeverage\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCVIValue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTimeAllowedAfterLatestRound\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"noLockPositionAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"_tokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint32\",\"name\":\"_maxCVI\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_maxBuyingPremiumFeePercentage\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"_leverage\",\"type\":\"uint8\"}],\"name\":\"openPosition\",\"outputs\":[{\"internalType\":\"uint168\",\"name\":\"positionUnitsAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint168\",\"name\":\"positionedTokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint168\",\"name\":\"openPositionFee\",\"type\":\"uint168\"},{\"internalType\":\"uint168\",\"name\":\"buyingPremiumFee\",\"type\":\"uint168\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"_tokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint32\",\"name\":\"_maxCVI\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"_leverage\",\"type\":\"uint8\"}],\"name\":\"openPositionWithoutFee\",\"outputs\":[{\"internalType\":\"uint168\",\"name\":\"positionUnitsAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint168\",\"name\":\"positionedTokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint168\",\"name\":\"openPositionFee\",\"type\":\"uint168\"},{\"internalType\":\"uint168\",\"name\":\"buyingPremiumFee\",\"type\":\"uint168\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"positionHoldersAllowedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint168\",\"name\":\"positionUnitsAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"openCVIValue\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"creationTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"originalCreationTimestamp\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"revertLockedTransfered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"contract IRewardsCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holderAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_shouldLockPosition\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_positionHolderAllowed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_increaseSharedPoolAllowed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isLiquidityProvider\",\"type\":\"bool\"}],\"name\":\"setAddressSpecificParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_newEmergencyWithdrawAllowed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_newCanPurgeSnapshots\",\"type\":\"bool\"}],\"name\":\"setEmergencyParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFeesCalculator\",\"name\":\"_newCalculator\",\"type\":\"address\"}],\"name\":\"setFeesCalculator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_newOracleRoundId\",\"type\":\"uint80\"}],\"name\":\"setLatestOracleRoundId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLPLockupPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newBuyersLockupPeriod\",\"type\":\"uint256\"}],\"name\":\"setLockupPeriods\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_newMaxAllowedLeverage\",\"type\":\"uint8\"}],\"name\":\"setMaxAllowedLeverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newMaxTimeAllowedAfterLatestRound\",\"type\":\"uint32\"}],\"name\":\"setMaxTimeAllowedAfterLatestRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_revertLockedTransfers\",\"type\":\"bool\"}],\"name\":\"setRevertLockedTransfers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFeesCollector\",\"name\":\"_newCollector\",\"type\":\"address\"},{\"internalType\":\"contract ICVIOracle\",\"name\":\"_newOracle\",\"type\":\"address\"},{\"internalType\":\"contract IRewardsCollector\",\"name\":\"_newRewards\",\"type\":\"address\"},{\"internalType\":\"contract ILiquidation\",\"name\":\"_newLiquidation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newStakingContractAddress\",\"type\":\"address\"}],\"name\":\"setSubContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_withAddendum\",\"type\":\"bool\"}],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFundingFeesAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLeveragedTokensAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPositionUnitsAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxLPTokenBurnAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burntAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lpTokensAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawLPTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burntAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/platform/PlatformContracts.sol\":\"CVIUSDCPlatform\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@coti-cvi/contracts-cvi/contracts/Platform.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\\\";\\n\\nimport \\\"./interfaces/IPlatform.sol\\\";\\n\\ncontract Platform is Initializable, IPlatform, OwnableUpgradeable, ERC20Upgradeable, ReentrancyGuardUpgradeable {\\n\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    uint80 public latestOracleRoundId;\\n    uint32 public latestSnapshotTimestamp;\\n    uint32 public maxTimeAllowedAfterLatestRound;\\n\\n    bool private canPurgeLatestSnapshot;\\n    bool public emergencyWithdrawAllowed;\\n    bool private purgeSnapshots;\\n\\n    uint8 public maxAllowedLeverage;\\n    uint32 public override maxCVIValue;\\n\\n    uint168 public constant MAX_FEE_PERCENTAGE = 10000;\\n    uint256 public override constant PRECISION_DECIMALS = 1e10;\\n\\n    uint256 public initialTokenToLPTokenRate;\\n\\n    IERC20Upgradeable public token;\\n    ICVIOracle public override cviOracle;\\n    ILiquidation public liquidation;\\n    IFeesCalculator public override feesCalculator;\\n    IFeesCollector public feesCollector;\\n    IRewardsCollector public rewards;\\n\\n    uint256 public lpsLockupPeriod;\\n    uint256 public override buyersLockupPeriod;\\n\\n    uint256 public override totalPositionUnitsAmount;\\n    uint256 public override totalFundingFeesAmount;\\n    uint256 public override totalLeveragedTokensAmount;\\n\\n    address public stakingContractAddress;\\n    \\n    mapping(uint256 => uint256) public cviSnapshots;\\n\\n    mapping(address => uint256) public lastDepositTimestamp;\\n    mapping(address => Position) public override positions;\\n\\n    mapping(address => bool) public noLockPositionAddresses;\\n    mapping(address => bool) public positionHoldersAllowedAddresses;\\n    mapping(address => bool) public increaseSharedPoolAllowedAddresses;\\n\\n    mapping(address => bool) public revertLockedTransfered;\\n\\n    mapping(address => bool) public liquidityProviders;\\n\\n    function initialize(IERC20Upgradeable _token, string memory _lpTokenName, string memory _lpTokenSymbolName, uint256 _initialTokenToLPTokenRate, uint32 _maxCVIValue,\\n        IFeesCalculator _feesCalculator,\\n        ICVIOracle _cviOracle,\\n        ILiquidation _liquidation) public initializer {\\n\\n        maxTimeAllowedAfterLatestRound = 5 hours;\\n        canPurgeLatestSnapshot = false;\\n        emergencyWithdrawAllowed = false;\\n        purgeSnapshots = true;\\n\\n        maxAllowedLeverage = 1;\\n\\n        lpsLockupPeriod = 3 days;\\n        buyersLockupPeriod = 6 hours;\\n\\n        stakingContractAddress = address(0);\\n\\n        ReentrancyGuardUpgradeable.__ReentrancyGuard_init();\\n        OwnableUpgradeable.__Ownable_init();\\n        ERC20Upgradeable.__ERC20_init(_lpTokenName, _lpTokenSymbolName);\\n\\n        token = _token;\\n        initialTokenToLPTokenRate = _initialTokenToLPTokenRate;\\n        maxCVIValue = _maxCVIValue;\\n        feesCalculator = _feesCalculator;\\n        cviOracle = _cviOracle;\\n        liquidation = _liquidation;\\n    }\\n\\n    function deposit(uint256 _tokenAmount, uint256 _minLPTokenAmount) external virtual override returns (uint256 lpTokenAmount) {\\n        require(liquidityProviders[msg.sender]); // \\\"Not allowed\\\"\\n        return _deposit(_tokenAmount, _minLPTokenAmount);\\n    }\\n\\n    function withdraw(uint256 _tokenAmount, uint256 _maxLPTokenBurnAmount) external override returns (uint256 burntAmount, uint256 withdrawnAmount) {\\n        require(liquidityProviders[msg.sender]); // \\\"Not allowed\\\"\\n        (burntAmount, withdrawnAmount) = _withdraw(_tokenAmount, false, _maxLPTokenBurnAmount);\\n    }\\n\\n    function withdrawLPTokens(uint256 _lpTokensAmount) external override returns (uint256 burntAmount, uint256 withdrawnAmount) {\\n        require(liquidityProviders[msg.sender]); // \\\"Not allowed\\\"\\n        require(_lpTokensAmount > 0); // \\\"Amount must be positive\\\"\\n        (burntAmount, withdrawnAmount) = _withdraw(0, true, _lpTokensAmount);\\n    }\\n\\n    function increaseSharedPool(uint256 _tokenAmount) external virtual override {\\n        _increaseSharedPool(_tokenAmount);\\n    }\\n\\n    function openPositionWithoutFee(uint168 _tokenAmount, uint32 _maxCVI, uint8 _leverage) external override virtual returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee) {\\n        return _openPosition(_tokenAmount, _maxCVI, 0, _leverage, false);\\n    }\\n\\n    function openPosition(uint168 _tokenAmount, uint32 _maxCVI, uint16 _maxBuyingPremiumFeePercentage, uint8 _leverage) external override virtual returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee) {\\n        return _openPosition(_tokenAmount, _maxCVI, _maxBuyingPremiumFeePercentage, _leverage, true);\\n    }\\n\\n    function closePositionWithoutFee(uint168 _positionUnitsAmount, uint32 _minCVI) external override returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee) {\\n        return _closePosition(_positionUnitsAmount, _minCVI, false);\\n    }\\n\\n    function closePosition(uint168 _positionUnitsAmount, uint32 _minCVI) external override virtual returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee) {\\n        return _closePosition(_positionUnitsAmount, _minCVI, true);\\n    }\\n\\n    function _closePosition(uint168 _positionUnitsAmount, uint32 _minCVI, bool _chargeCloseFee) private nonReentrant returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee) {\\n        require(positionHoldersAllowedAddresses[msg.sender]); // \\\"Not allowed\\\"\\n        require(_positionUnitsAmount > 0); // \\\"Position units not positive\\\"\\n        require(_minCVI > 0 && _minCVI <= maxCVIValue); // \\\"Bad min CVI value\\\"\\n\\n        Position storage position = positions[msg.sender];\\n\\n        require(position.positionUnitsAmount >= _positionUnitsAmount); // \\\"Not enough opened position units\\\"\\n        require(block.timestamp - position.creationTimestamp >= buyersLockupPeriod  || noLockPositionAddresses[msg.sender], \\\"Position locked\\\");\\n\\n        uint256 positionBalance;\\n        uint256 fundingFees;\\n        uint256 marginDebt;\\n        uint32 cviValue;\\n\\n        {\\n            uint256 latestSnapshot;\\n            (cviValue, latestSnapshot,) = updateSnapshots(true);\\n            require(cviValue >= _minCVI, \\\"CVI too low\\\");\\n\\n            {\\n                bool wasLiquidated;\\n\\n                (positionBalance, fundingFees, marginDebt, wasLiquidated) = _closePosition(position, _positionUnitsAmount, latestSnapshot, cviValue);\\n\\n                // If was liquidated, balance is negative, nothing to return\\n                if (wasLiquidated) {\\n                    return (0,0,0);\\n                }\\n            }\\n        }\\n\\n        (totalPositionUnitsAmount, totalFundingFeesAmount) = subtractTotalPositionUnits(_positionUnitsAmount, fundingFees);\\n\\n        uint256 closingPremiumFeePercentage = 0;\\n\\n        if (_chargeCloseFee && feesCalculator.openPositionLPFeePercent() > 0) {\\n            closingPremiumFeePercentage = feesCalculator.closePositionLPFeePercent();\\n        }\\n\\n        position.positionUnitsAmount = position.positionUnitsAmount - _positionUnitsAmount;\\n\\n        closePositionFee = _chargeCloseFee ? positionBalance * feesCalculator.calculateClosePositionFeePercent(position.creationTimestamp, noLockPositionAddresses[msg.sender]) / MAX_FEE_PERCENTAGE : 0;\\n        closingPremiumFee = positionBalance * closingPremiumFeePercentage / MAX_FEE_PERCENTAGE;\\n\\n        emit ClosePosition(msg.sender, positionBalance + fundingFees, closePositionFee + closingPremiumFee + fundingFees, position.positionUnitsAmount, position.leverage, cviValue);\\n\\n        if (position.positionUnitsAmount == 0) {\\n            delete positions[msg.sender];\\n        }\\n\\n        totalLeveragedTokensAmount = totalLeveragedTokensAmount - positionBalance - marginDebt + closingPremiumFee;\\n        tokenAmount = positionBalance - closePositionFee - closingPremiumFee;\\n\\n        collectProfit(closePositionFee);\\n        transferFunds(tokenAmount);\\n    }\\n\\n    function _closePosition(Position storage _position, uint256 _positionUnitsAmount, uint256 _latestSnapshot, uint32 _cviValue) private returns (uint256 positionBalance, uint256 fundingFees, uint256 marginDebt, bool wasLiquidated) {\\n        fundingFees = _calculateFundingFees(cviSnapshots[_position.creationTimestamp], _latestSnapshot, _positionUnitsAmount);\\n        \\n        (uint256 currentPositionBalance, bool isPositive, uint256 __marginDebt) = __calculatePositionBalance(_positionUnitsAmount, _position.leverage, _cviValue, _position.openCVIValue, fundingFees);\\n        \\n        // Position might be liquidable but balance is positive, we allow to avoid liquidity in such a condition\\n        if (!isPositive) {\\n            checkAndLiquidatePosition(msg.sender, false); // Will always liquidate\\n            wasLiquidated = true;\\n            fundingFees = 0;\\n        } else {\\n            positionBalance = currentPositionBalance;\\n            marginDebt = __marginDebt;\\n        }\\n    }\\n\\n    function liquidatePositions(address[] calldata _positionOwners) external override nonReentrant returns (uint256 finderFeeAmount) {\\n        updateSnapshots(true);\\n        bool liquidationOccured = false;\\n        for ( uint256 i = 0; i < _positionOwners.length; i++) {\\n            Position memory position = positions[_positionOwners[i]];\\n\\n            if (position.positionUnitsAmount > 0) {\\n                (bool wasLiquidated, uint256 liquidatedAmount, bool isPositive) = checkAndLiquidatePosition(_positionOwners[i], false);\\n\\n                if (wasLiquidated) {\\n                    liquidationOccured = true;\\n                    finderFeeAmount = finderFeeAmount + liquidation.getLiquidationReward(liquidatedAmount, isPositive, position.positionUnitsAmount, position.openCVIValue, position.leverage);\\n                }\\n            }\\n        }\\n\\n        require(liquidationOccured, \\\"No liquidable position\\\");\\n\\n        totalLeveragedTokensAmount = totalLeveragedTokensAmount - finderFeeAmount;\\n        transferFunds(finderFeeAmount);\\n    }\\n\\n    function setSubContracts(IFeesCollector _newCollector, ICVIOracle _newOracle, IRewardsCollector _newRewards, ILiquidation _newLiquidation, address _newStakingContractAddress) external override onlyOwner {\\n        if (address(feesCollector) != address(0) && address(token) != address(0)) {\\n            token.safeApprove(address(feesCollector), 0);\\n        }\\n\\n        feesCollector = _newCollector;\\n\\n        if (address(_newCollector) != address(0) && address(token) != address(0)) {\\n            token.safeApprove(address(_newCollector), type(uint256).max);\\n        }\\n\\n        cviOracle = _newOracle;\\n        rewards = _newRewards;\\n        liquidation = _newLiquidation;\\n        stakingContractAddress = _newStakingContractAddress;\\n    }\\n\\n    function setFeesCalculator(IFeesCalculator _newCalculator) external override onlyOwner {\\n        feesCalculator = _newCalculator;\\n    }\\n\\n    function setLatestOracleRoundId(uint80 _newOracleRoundId) external override onlyOwner {\\n        latestOracleRoundId = _newOracleRoundId;\\n    }\\n\\n    function setMaxTimeAllowedAfterLatestRound(uint32 _newMaxTimeAllowedAfterLatestRound) external override onlyOwner {\\n        require(_newMaxTimeAllowedAfterLatestRound >= 1 hours); // \\\"Max time too short\\\"\\n        maxTimeAllowedAfterLatestRound = _newMaxTimeAllowedAfterLatestRound;\\n    }\\n\\n    function setLockupPeriods(uint256 _newLPLockupPeriod, uint256 _newBuyersLockupPeriod) external override onlyOwner {\\n        require(_newLPLockupPeriod <= 2 weeks); // \\\"Lockup too long\\\"\\n        lpsLockupPeriod = _newLPLockupPeriod;\\n\\n        require(_newBuyersLockupPeriod <= 1 weeks); // \\\"Lockup too long\\\"\\n        buyersLockupPeriod = _newBuyersLockupPeriod;\\n    }\\n\\n    function setAddressSpecificParameters(address _holderAddress, bool _shouldLockPosition, bool _positionHolderAllowed, bool _increaseSharedPoolAllowed, bool _isLiquidityProvider) external override onlyOwner {\\n        noLockPositionAddresses[_holderAddress] = !_shouldLockPosition;\\n        positionHoldersAllowedAddresses[_holderAddress] = _positionHolderAllowed;\\n        increaseSharedPoolAllowedAddresses[_holderAddress] = _increaseSharedPoolAllowed;\\n        liquidityProviders[_holderAddress] = _isLiquidityProvider;\\n    }\\n\\n    function setRevertLockedTransfers(bool _revertLockedTransfers) external override {\\n        revertLockedTransfered[msg.sender] = _revertLockedTransfers;   \\n    }\\n\\n    function setEmergencyParameters(bool _newEmergencyWithdrawAllowed, bool _newCanPurgeSnapshots) external override onlyOwner {\\n        emergencyWithdrawAllowed = _newEmergencyWithdrawAllowed;\\n        purgeSnapshots = _newCanPurgeSnapshots;\\n    }\\n\\n    function setMaxAllowedLeverage(uint8 _newMaxAllowedLeverage) external override onlyOwner {\\n        maxAllowedLeverage = _newMaxAllowedLeverage;\\n    }\\n\\n    function calculatePositionBalance(address _positionAddress) external view override returns (uint256 currentPositionBalance, bool isPositive, uint168 positionUnitsAmount, uint8 leverage, uint256 fundingFees, uint256 marginDebt) {\\n        positionUnitsAmount = positions[_positionAddress].positionUnitsAmount;\\n        leverage = positions[_positionAddress].leverage;\\n        require(positionUnitsAmount > 0); // \\\"No position for given address\\\"\\n        (currentPositionBalance, isPositive, fundingFees, marginDebt) = _calculatePositionBalance(_positionAddress, true);\\n    }\\n\\n    function calculatePositionPendingFees(address _positionAddress, uint168 _positionUnitsAmount) external view override returns (uint256 pendingFees) {\\n        Position memory position = positions[_positionAddress];\\n        require(position.positionUnitsAmount > 0); // \\\"No position for given address\\\"\\n        require(_positionUnitsAmount <= position.positionUnitsAmount); // \\\"Too many position units\\\"\\n        pendingFees = _calculateFundingFees(cviSnapshots[position.creationTimestamp], \\n            cviSnapshots[latestSnapshotTimestamp], _positionUnitsAmount) + calculateLatestFundingFees(latestSnapshotTimestamp, _positionUnitsAmount);\\n    }\\n\\n    function totalBalance(bool _withAddendum) public view override returns (uint256 balance) {\\n        (uint32 cviValue,,) = cviOracle.getCVILatestRoundData();\\n        return _totalBalance(cviValue) + (_withAddendum ? calculateLatestFundingFees(latestSnapshotTimestamp, totalPositionUnitsAmount) : 0);\\n    }\\n\\n    function calculateLatestTurbulenceIndicatorPercent() external view override returns (uint16) {\\n        (uint32 latestCVIValue, ) = cviOracle.getCVIRoundData(latestOracleRoundId);\\n        IFeesCalculator.SnapshotUpdate memory updateData = \\n            feesCalculator.updateSnapshots(latestSnapshotTimestamp, cviSnapshots[block.timestamp], cviSnapshots[latestSnapshotTimestamp], latestOracleRoundId, totalLeveragedTokensAmount, totalPositionUnitsAmount);\\n        if (updateData.updatedTurbulenceData) {\\n            return feesCalculator.calculateTurbulenceIndicatorPercent(updateData.totalTime, updateData.totalRounds, latestCVIValue, updateData.cviValue);\\n        } else {\\n            return feesCalculator.turbulenceIndicatorPercent();\\n        }\\n    }\\n\\n    function latestFundingFees() external view override returns (uint256) {\\n        return calculateLatestFundingFees(latestSnapshotTimestamp, totalPositionUnitsAmount);\\n    }\\n\\n    function collectTokens(uint256 _tokenAmount) internal virtual {\\n        token.safeTransferFrom(msg.sender, address(this), _tokenAmount);\\n    }\\n\\n    function _deposit(uint256 _tokenAmount, uint256 _minLPTokenAmount) internal nonReentrant returns (uint256 lpTokenAmount) {\\n        require(_tokenAmount > 0); // \\\"Tokens amount must be positive\\\"\\n        lastDepositTimestamp[msg.sender] = block.timestamp;\\n\\n        (uint32 cviValue,, uint256 cviValueTimestamp) = updateSnapshots(true);\\n        require(cviValueTimestamp + maxTimeAllowedAfterLatestRound >= block.timestamp, \\\"Latest cvi too long ago\\\");\\n\\n        uint256 depositFee = _tokenAmount * feesCalculator.depositFeePercent() / MAX_FEE_PERCENTAGE;\\n\\n        uint256 tokenAmountToDeposit = _tokenAmount - depositFee;\\n        uint256 supply = totalSupply();\\n        uint256 balance = _totalBalance(cviValue);\\n    \\n        if (supply > 0 && balance > 0) {\\n            lpTokenAmount = tokenAmountToDeposit * supply / balance;\\n        } else {\\n            lpTokenAmount = tokenAmountToDeposit * initialTokenToLPTokenRate;\\n        }\\n\\n        emit Deposit(msg.sender, _tokenAmount, lpTokenAmount, depositFee);\\n\\n        require(lpTokenAmount >= _minLPTokenAmount, \\\"Too few LP tokens\\\");\\n        require(lpTokenAmount > 0); // \\\"Too few tokens\\\"\\n\\n        totalLeveragedTokensAmount = totalLeveragedTokensAmount + tokenAmountToDeposit;\\n\\n        _mint(msg.sender, lpTokenAmount);\\n        collectTokens(_tokenAmount);\\n        collectProfit(depositFee);\\n    }\\n\\n    function _withdraw(uint256 _tokenAmount, bool _shouldBurnMax, uint256 _maxLPTokenBurnAmount) internal nonReentrant returns (uint256 burntAmount, uint256 withdrawnAmount) {\\n        require(lastDepositTimestamp[msg.sender] + lpsLockupPeriod <= block.timestamp, \\\"Funds are locked\\\");\\n\\n        (uint32 cviValue,,) = updateSnapshots(true);\\n\\n        if (_shouldBurnMax) {\\n            burntAmount = _maxLPTokenBurnAmount;\\n            _tokenAmount = burntAmount * _totalBalance(cviValue) / totalSupply();\\n        } else {\\n            require(_tokenAmount > 0); // \\\"Tokens amount must be positive\\\"\\n\\n            // Note: rounding up (ceiling) the to-burn amount to prevent precision loss\\n            burntAmount = (_tokenAmount * totalSupply() - 1) / _totalBalance(cviValue) + 1;\\n            require(burntAmount <= _maxLPTokenBurnAmount, \\\"Too much LP tokens to burn\\\");\\n        }\\n\\n        require(burntAmount <= balanceOf(msg.sender), \\\"Not enough LP tokens for account\\\");\\n        require(emergencyWithdrawAllowed || totalLeveragedTokensAmount - totalPositionUnitsAmount >= _tokenAmount, \\\"Collateral ratio broken\\\");\\n\\n        totalLeveragedTokensAmount = totalLeveragedTokensAmount - _tokenAmount;\\n\\n        uint256 withdrawFee = _tokenAmount * feesCalculator.withdrawFeePercent() / MAX_FEE_PERCENTAGE;\\n        withdrawnAmount = _tokenAmount - withdrawFee;\\n\\n        emit Withdraw(msg.sender, _tokenAmount, burntAmount, withdrawFee);\\n        \\n        _burn(msg.sender, burntAmount);\\n\\n        collectProfit(withdrawFee);\\n        transferFunds(withdrawnAmount);\\n    }\\n\\n    function _increaseSharedPool(uint256 _tokenAmount) internal nonReentrant {\\n        require(increaseSharedPoolAllowedAddresses[msg.sender]); // \\\"Not allowed\\\"\\n        totalLeveragedTokensAmount = totalLeveragedTokensAmount + _tokenAmount;\\n        collectTokens(_tokenAmount);\\n    }\\n\\n    struct OpenPositionLocals {\\n        uint256 totalLeveragedTokensAmount;\\n        uint256 latestSnapshot;\\n        uint256 maxPositionUnitsAmount;\\n        uint256 __positionUnitsAmount;\\n        uint256 cviValueTimestamp;\\n        uint168 addedPositionUnitsAmount;\\n        uint168 buyingPremiumFeePercentage;\\n        uint32 cviValue;\\n        uint16 openPositionFeePercent;\\n        uint16 buyingPremiumFeeMaxPercent;\\n    }\\n\\n    function _openPosition(uint168 _tokenAmount, uint32 _maxCVI, uint168 _maxBuyingPremiumFeePercentage, uint8 _leverage, bool _chargeOpenFee) internal nonReentrant returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee) {\\n        require(positionHoldersAllowedAddresses[msg.sender]); // \\\"Not allowed\\\"\\n        require(_leverage > 0); // \\\"Leverage must be positive\\\"\\n        require(_leverage <= maxAllowedLeverage); // \\\"Leverage excceeds max allowed\\\"\\n        require(_tokenAmount > 0); // \\\"Tokens amount must be positive\\\"\\n        require(_maxCVI > 0 && _maxCVI <= maxCVIValue); // \\\"Bad max CVI value\\\"\\n\\n        OpenPositionLocals memory locals;\\n\\n        (locals.cviValue, locals.latestSnapshot, locals.cviValueTimestamp) = updateSnapshots(false);\\n        require(locals.cviValue <= _maxCVI, \\\"CVI too high\\\");\\n        require(locals.cviValueTimestamp + maxTimeAllowedAfterLatestRound >= block.timestamp, \\\"Latest cvi too long ago\\\");\\n\\n        (locals.openPositionFeePercent, locals.buyingPremiumFeeMaxPercent) = feesCalculator.openPositionFees();\\n\\n        openPositionFee = _chargeOpenFee ? _tokenAmount * _leverage * locals.openPositionFeePercent / MAX_FEE_PERCENTAGE : 0;\\n\\n        // Calculate buying premium fee, assuming the maxmimum \\n\\n        locals.totalLeveragedTokensAmount = totalLeveragedTokensAmount;\\n\\n        if (_chargeOpenFee) {\\n            locals.maxPositionUnitsAmount = (uint256(_tokenAmount) - openPositionFee) * _leverage * maxCVIValue / locals.cviValue;\\n\\n            uint256 leveragedTokensAmount = locals.totalLeveragedTokensAmount + (_tokenAmount - openPositionFee) * _leverage;\\n            (buyingPremiumFee, locals.buyingPremiumFeePercentage) = \\n                feesCalculator.calculateBuyingPremiumFee(_tokenAmount, _leverage, locals.totalLeveragedTokensAmount, totalPositionUnitsAmount,\\n                    leveragedTokensAmount, \\n                    totalPositionUnitsAmount + locals.maxPositionUnitsAmount);\\n\\n            require(locals.buyingPremiumFeePercentage <= _maxBuyingPremiumFeePercentage, \\\"Premium fee too high\\\");\\n        }\\n        \\n        // Leaving buying premium in shared pool\\n        positionedTokenAmount = uint168((_tokenAmount - openPositionFee - buyingPremiumFee) * _leverage);\\n        \\n        Position storage position = positions[msg.sender];\\n\\n        if (position.positionUnitsAmount > 0) {\\n            require(_leverage == position.leverage); // \\\"Cannot merge different margin\\\"\\n            MergePositionResults memory mergePositionResults = _mergePosition(position, locals.latestSnapshot, locals.cviValue, positionedTokenAmount, _leverage);\\n            positionUnitsAmount = mergePositionResults.positionUnitsAmount;\\n            locals.addedPositionUnitsAmount = mergePositionResults.addedPositionUnitsAmount;\\n            totalLeveragedTokensAmount = locals.totalLeveragedTokensAmount + positionedTokenAmount + mergePositionResults.positionBalance * _leverage + buyingPremiumFee -\\n                mergePositionResults.marginDebt - mergePositionResults.positionBalance;\\n        } else {\\n            locals.__positionUnitsAmount = uint256(positionedTokenAmount) * maxCVIValue / locals.cviValue;\\n            positionUnitsAmount = uint168(locals.__positionUnitsAmount);\\n            require(positionUnitsAmount == locals.__positionUnitsAmount); // \\\"Too much position units\\\"\\n\\n            locals.addedPositionUnitsAmount = positionUnitsAmount;\\n\\n            Position memory newPosition = Position(positionUnitsAmount, _leverage, locals.cviValue, uint32(block.timestamp), uint32(block.timestamp));\\n\\n            positions[msg.sender] = newPosition;\\n            totalPositionUnitsAmount = totalPositionUnitsAmount + positionUnitsAmount;\\n\\n            totalLeveragedTokensAmount = locals.totalLeveragedTokensAmount + positionedTokenAmount + buyingPremiumFee;\\n        }\\n\\n        emit OpenPosition(msg.sender, _tokenAmount, _leverage, openPositionFee + buyingPremiumFee, positionUnitsAmount, locals.cviValue);\\n\\n        collectTokens(_tokenAmount);\\n\\n        if (openPositionFee > 0) {\\n            collectProfit(openPositionFee);\\n        }\\n\\n        require(totalPositionUnitsAmount <= totalLeveragedTokensAmount, \\\"Not enough liquidity\\\");\\n\\n        if (address(rewards) != address(0) && locals.addedPositionUnitsAmount != 0) {\\n            rewards.reward(msg.sender, locals.addedPositionUnitsAmount, _leverage);\\n        }\\n    }\\n\\n    struct MergePositionResults {\\n        uint168 positionUnitsAmount;\\n        uint168 addedPositionUnitsAmount;\\n        uint256 marginDebt;\\n        uint256 positionBalance;\\n    }\\n\\n    struct MergePositionLocals {\\n        uint32 originalCreationTimestamp;\\n        uint168 oldPositionUnits;\\n        uint256 newPositionUnits;\\n        uint256 newTotalPositionUnitsAmount;\\n        uint256 newTotalFundingFeesAmount;\\n    }\\n\\n    function _mergePosition(Position storage _position, uint256 _latestSnapshot, uint32 _cviValue, uint256 _leveragedTokenAmount, uint8 _leverage) private returns (MergePositionResults memory mergePositionResults) {\\n        MergePositionLocals memory locals;\\n\\n        locals.oldPositionUnits = _position.positionUnitsAmount;\\n        locals.originalCreationTimestamp = _position.originalCreationTimestamp;\\n        (uint256 currentPositionBalance, uint256 fundingFees, uint256 __marginDebt, bool wasLiquidated) = _closePosition(_position, locals.oldPositionUnits, _latestSnapshot, _cviValue);\\n        \\n        // If was liquidated, balance is negative\\n        if (wasLiquidated) {\\n            currentPositionBalance = 0;\\n            locals.oldPositionUnits = 0;\\n            __marginDebt = 0;\\n\\n            _position.originalCreationTimestamp = locals.originalCreationTimestamp;\\n        }\\n\\n        locals.newPositionUnits = (currentPositionBalance * _leverage + _leveragedTokenAmount) * maxCVIValue / _cviValue;\\n        mergePositionResults.positionUnitsAmount = uint168(locals.newPositionUnits);\\n        require(mergePositionResults.positionUnitsAmount == locals.newPositionUnits); // \\\"Too much position units\\\"\\n\\n        _position.creationTimestamp = uint32(block.timestamp);\\n        _position.positionUnitsAmount = mergePositionResults.positionUnitsAmount;\\n        _position.openCVIValue = _cviValue;\\n        _position.leverage = _leverage;\\n\\n        (locals.newTotalPositionUnitsAmount, locals.newTotalFundingFeesAmount) = subtractTotalPositionUnits(locals.oldPositionUnits, fundingFees);\\n        totalFundingFeesAmount = locals.newTotalFundingFeesAmount;\\n        totalPositionUnitsAmount = locals.newTotalPositionUnitsAmount + mergePositionResults.positionUnitsAmount;\\n        mergePositionResults.marginDebt = __marginDebt;\\n        mergePositionResults.positionBalance = currentPositionBalance;\\n\\n        if (locals.oldPositionUnits < mergePositionResults.positionUnitsAmount) {\\n            mergePositionResults.addedPositionUnitsAmount = mergePositionResults.positionUnitsAmount - locals.oldPositionUnits;\\n        }\\n    }\\n\\n    function transferFunds(uint256 _tokenAmount) internal virtual {\\n        token.safeTransfer(msg.sender, _tokenAmount);\\n    }\\n\\n    function _beforeTokenTransfer(address from, address to, uint256) internal override {\\n        if (from == stakingContractAddress) {\\n            lastDepositTimestamp[to] = block.timestamp;\\n        } else if (lastDepositTimestamp[from] + lpsLockupPeriod > block.timestamp && \\n            lastDepositTimestamp[from] > lastDepositTimestamp[to] && \\n            to != stakingContractAddress) {\\n                require(!revertLockedTransfered[to], \\\"Recipient refuses locked tokens\\\");\\n                lastDepositTimestamp[to] = lastDepositTimestamp[from];\\n        }\\n    }\\n\\n    function sendProfit(uint256 _amount, IERC20Upgradeable _token) internal virtual {\\n        feesCollector.sendProfit(_amount, IERC20(address(_token)));\\n    }\\n\\n    function updateSnapshots(bool _canPurgeLatestSnapshot) private returns (uint32 latestCVIValue, uint256 latestSnapshot, uint256 latestCVIValueTimestamp) {\\n        uint80 originalLatestRoundId = latestOracleRoundId;\\n        uint256 latestTimestamp = latestSnapshotTimestamp;\\n\\n        IFeesCalculator.SnapshotUpdate memory updateData = \\n            feesCalculator.updateSnapshots(latestTimestamp, cviSnapshots[block.timestamp], cviSnapshots[latestTimestamp], \\n                latestOracleRoundId, totalLeveragedTokensAmount, totalPositionUnitsAmount);\\n\\n        if (updateData.updatedSnapshot) {\\n            cviSnapshots[block.timestamp] = updateData.latestSnapshot;\\n            totalFundingFeesAmount = totalFundingFeesAmount + (updateData.singleUnitFundingFee * totalPositionUnitsAmount / PRECISION_DECIMALS);\\n        }\\n\\n        if (updateData.updatedLatestRoundId) {\\n            latestOracleRoundId = updateData.newLatestRoundId;\\n        }\\n\\n        if (updateData.updatedTurbulenceData) {\\n            (latestCVIValue, ) = cviOracle.getCVIRoundData(originalLatestRoundId);\\n            feesCalculator.updateTurbulenceIndicatorPercent(updateData.totalTime, updateData.totalRounds, latestCVIValue, updateData.cviValue);\\n        }\\n\\n        if (updateData.updatedLatestTimestamp) {\\n            latestSnapshotTimestamp = uint32(block.timestamp);\\n\\n            // Delete old snapshot if it can be deleted (not an open snapshot) to save gas\\n            if (canPurgeLatestSnapshot && purgeSnapshots) {\\n                delete cviSnapshots[latestTimestamp];\\n            }\\n\\n            // Update purge since timestamp has changed and it is safe\\n            canPurgeLatestSnapshot = _canPurgeLatestSnapshot;\\n        } else if (canPurgeLatestSnapshot) {\\n            // Update purge only from true to false, so if an open was in the block, will never be purged\\n            canPurgeLatestSnapshot = _canPurgeLatestSnapshot;\\n        }\\n\\n        return (updateData.cviValue, updateData.latestSnapshot, updateData.cviValueTimestamp);\\n    }\\n\\n    function _totalBalance(uint32 _cviValue) private view returns (uint256 balance) {\\n        return totalLeveragedTokensAmount + totalFundingFeesAmount - (totalPositionUnitsAmount * _cviValue) / maxCVIValue;\\n    }\\n\\n    function collectProfit(uint256 amount) private {\\n        if (amount > 0 && address(feesCollector) != address(0)) {\\n            sendProfit(amount, token);\\n        }\\n    }\\n\\n    function checkAndLiquidatePosition(address _positionAddress, bool _withAddendum) private returns (bool wasLiquidated, uint256 liquidatedAmount, bool isPositive) {\\n        (uint256 currentPositionBalance, bool isBalancePositive, uint256 fundingFees, uint256 marginDebt) = _calculatePositionBalance(_positionAddress, _withAddendum);\\n        isPositive = isBalancePositive;\\n        liquidatedAmount = currentPositionBalance;\\n\\n        Position memory position = positions[_positionAddress];\\n\\n        if (liquidation.isLiquidationCandidate(currentPositionBalance, isBalancePositive, position.positionUnitsAmount, position.openCVIValue, position.leverage)) {\\n            (uint256 newTotalPositionUnitsAmount, uint256 newTotalFundingFeesAmount) = subtractTotalPositionUnits(position.positionUnitsAmount, fundingFees);\\n            totalPositionUnitsAmount = newTotalPositionUnitsAmount;\\n            totalFundingFeesAmount = newTotalFundingFeesAmount;\\n            totalLeveragedTokensAmount = totalLeveragedTokensAmount - marginDebt;\\n\\n            emit LiquidatePosition(_positionAddress, currentPositionBalance, isBalancePositive, position.positionUnitsAmount);\\n\\n            delete positions[_positionAddress];\\n            wasLiquidated = true;\\n        }\\n    }\\n\\n    function subtractTotalPositionUnits(uint168 _positionUnitsAmountToSubtract, uint256 _fundingFeesToSubtract) private view returns (uint256 newTotalPositionUnitsAmount, uint256 newTotalFundingFeesAmount) {\\n        newTotalPositionUnitsAmount = totalPositionUnitsAmount - _positionUnitsAmountToSubtract;\\n        newTotalFundingFeesAmount = _fundingFeesToSubtract > totalFundingFeesAmount ? 0 : totalFundingFeesAmount - _fundingFeesToSubtract;\\n    }\\n\\n    function _calculatePositionBalance(address _positionAddress, bool _withAddendum) private view returns (uint256 currentPositionBalance, bool isPositive, uint256 fundingFees, uint256 marginDebt) {\\n        Position memory position = positions[_positionAddress];\\n\\n        (uint32 cviValue,,) = cviOracle.getCVILatestRoundData();\\n\\n        fundingFees = _calculateFundingFees(cviSnapshots[position.creationTimestamp], cviSnapshots[latestSnapshotTimestamp], position.positionUnitsAmount);\\n        if (_withAddendum) {\\n            fundingFees = calculateLatestFundingFees(position.creationTimestamp, position.positionUnitsAmount);\\n        }\\n        \\n        (currentPositionBalance, isPositive, marginDebt) = __calculatePositionBalance(position.positionUnitsAmount, position.leverage, cviValue, position.openCVIValue, fundingFees);\\n    }\\n\\n    function __calculatePositionBalance(uint256 _positionUnits, uint8 _leverage, uint32 _cviValue, uint32 _openCVIValue, uint256 _fundingFees) private view returns (uint256 currentPositionBalance, bool isPositive, uint256 marginDebt) {\\n        uint256 positionBalanceWithoutFees = _positionUnits * _cviValue / maxCVIValue;\\n\\n        marginDebt = _leverage > 1 ? _positionUnits * _openCVIValue * (_leverage - 1) / maxCVIValue / _leverage : 0;\\n        uint256 totalDebt = marginDebt + _fundingFees;\\n\\n        if (positionBalanceWithoutFees >= totalDebt) {\\n            currentPositionBalance = positionBalanceWithoutFees - totalDebt;\\n            isPositive = true;\\n        } else {\\n            currentPositionBalance = totalDebt - positionBalanceWithoutFees;\\n        }\\n    }\\n\\n    function calculateLatestFundingFees(uint256 startTime, uint256 positionUnitsAmount) private view returns (uint256) {\\n        IFeesCalculator.SnapshotUpdate memory updateData = \\n            feesCalculator.updateSnapshots(latestSnapshotTimestamp, cviSnapshots[block.timestamp], cviSnapshots[latestSnapshotTimestamp], latestOracleRoundId, totalLeveragedTokensAmount, totalPositionUnitsAmount);\\n        return _calculateFundingFees(cviSnapshots[startTime], updateData.latestSnapshot, positionUnitsAmount);\\n    }\\n\\n    function _calculateFundingFees(uint256 startTimeSnapshot, uint256 endTimeSnapshot, uint256 positionUnitsAmount) internal pure returns (uint256) {\\n        return (endTimeSnapshot - startTimeSnapshot) * positionUnitsAmount / PRECISION_DECIMALS;\\n    }\\n}\\n\",\"keccak256\":\"0xae6788e16bcde7d1b8ef918582797ec6efe1de732344ca68c0765a2f5b985c79\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ICVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ICVIOracle {\\n    function getCVIRoundData(uint80 roundId) external view returns (uint32 cviValue, uint256 cviTimestamp);\\n    function getCVILatestRoundData() external view returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp);\\n\\n    function setDeviationCheck(bool newDeviationCheck) external;\\n    function setMaxDeviation(uint16 newMaxDeviation) external;\\n}\\n\",\"keccak256\":\"0xf1871b2e9219f7a11e63d8e3276b7a0a46d8d726d54e385a6326dbdb2bcb1bad\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IThetaVaultInfo.sol\\\";\\n\\ninterface IFeesCalculator {\\n\\n    struct CVIValue {\\n        uint256 period;\\n        uint32 cviValue;\\n    }\\n\\n    struct SnapshotUpdate {\\n        uint256 latestSnapshot;\\n        uint256 singleUnitFundingFee;\\n        uint256 totalTime;\\n        uint256 totalRounds;\\n        uint256 cviValueTimestamp;\\n        uint80 newLatestRoundId;\\n        uint32 cviValue;\\n        bool updatedSnapshot;\\n        bool updatedLatestRoundId;\\n        bool updatedLatestTimestamp;\\n        bool updatedTurbulenceData;\\n    }\\n\\n    function updateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 lastCVIValue, uint32 currCVIValue) external;\\n\\n    function setOracle(ICVIOracle cviOracle) external;\\n    function setThetaVault(IThetaVaultInfo thetaVault) external;\\n\\n    function setStateUpdator(address newUpdator) external;\\n\\n    function setDepositFee(uint16 newDepositFeePercentage) external;\\n    function setWithdrawFee(uint16 newWithdrawFeePercentage) external;\\n    function setOpenPositionFee(uint16 newOpenPositionFeePercentage) external;\\n    function setOpenPositionLPFee(uint16 newOpenPositionLPFeePercent) external;\\n    function setClosePositionLPFee(uint16 newClosePositionLPFeePercent) external;\\n    function setClosePositionFee(uint16 newClosePositionFeePercentage) external;\\n    function setClosePositionMaxFee(uint16 newClosePositionMaxFeePercentage) external;\\n    function setClosePositionFeeDecay(uint256 newClosePositionFeeDecayPeriod) external;\\n    \\n    function setOracleHeartbeatPeriod(uint256 newOracleHeartbeatPeriod) external;\\n    function setBuyingPremiumFeeMax(uint16 newBuyingPremiumFeeMaxPercentage) external;\\n    function setBuyingPremiumThreshold(uint16 newBuyingPremiumThreshold) external;\\n    function setClosingPremiumFeeMax(uint16 newClosingPremiumFeeMaxPercentage) external;\\n    function setCollateralToBuyingPremiumMapping(uint16[] calldata newCollateralToBuyingPremiumMapping) external;\\n    function setFundingFeeConstantRate(uint16 newfundingFeeConstantRate) external;\\n    function setCollateralToExtraFundingFeeMapping(uint32[] calldata newCollateralToExtraFundingFeeMapping) external;\\n    function setTurbulenceStep(uint16 newTurbulenceStepPercentage) external;\\n    function setMaxTurbulenceFeePercentToTrim(uint16 newMaxTurbulenceFeePercentToTrim) external;\\n    function setTurbulenceDeviationThresholdPercent(uint16 newTurbulenceDeviationThresholdPercent) external;\\n    function setTurbulenceDeviationPercent(uint16 newTurbulenceDeviationPercentage) external;\\n\\n    function calculateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 _lastCVIValue, uint32 _currCVIValue) external view returns (uint16);\\n\\n    function calculateBuyingPremiumFee(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n    function calculateBuyingPremiumFeeWithAddendum(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits, uint16 _turbulenceIndicatorPercent) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n\\n    function calculateClosingPremiumFee() external view returns (uint16 combinedPremiumFeePercentage);\\n\\n    function calculateSingleUnitFundingFee(CVIValue[] memory cviValues, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 fundingFee);\\n    function calculateSingleUnitPeriodFundingFee(CVIValue memory cviValue, uint256 collateralRatio) external view returns (uint256 fundingFee, uint256 fundingFeeRatePercents);\\n    function updateSnapshots(uint256 latestTimestamp, uint256 blockTimestampSnapshot, uint256 latestTimestampSnapshot, uint80 latestOracleRoundId, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (SnapshotUpdate memory snapshotUpdate);\\n\\n    function calculateClosePositionFeePercent(uint256 creationTimestamp, bool isNoLockPositionAddress) external view returns (uint16);\\n    function calculateWithdrawFeePercent(uint256 lastDepositTimestamp) external view returns (uint16);\\n\\n    function calculateCollateralRatio(uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 collateralRatio);\\n\\n    function depositFeePercent() external view returns (uint16);\\n    function withdrawFeePercent() external view returns (uint16);\\n    function openPositionFeePercent() external view returns (uint16);\\n    function closePositionFeePercent() external view returns (uint16);\\n    function openPositionLPFeePercent() external view returns (uint16);\\n    function closePositionLPFeePercent() external view returns (uint16);\\n\\n    function openPositionFees() external view returns (uint16 openPositionFeePercentResult, uint16 buyingPremiumFeeMaxPercentResult);\\n\\n    function turbulenceIndicatorPercent() external view returns (uint16);\\n    function oracleLeverage() external view returns (uint8);\\n\\n    function getCollateralToBuyingPremiumMapping() external view returns(uint16[] memory);\\n    function getCollateralToExtraFundingFeeMapping() external view returns(uint32[] memory);\\n}\\n\",\"keccak256\":\"0xfba7d565b0a7d83dbe5d1abb0bf35897145a96d28e35b0b91864e321606c5734\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IFeesCollector {\\n    function sendProfit(uint256 amount, IERC20 token) external;\\n}\\n\",\"keccak256\":\"0xb16b7c5d985657716ccacf0f1e61de587c06fe4f6591bee6fafc0a3658229b4c\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ILiquidation.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ILiquidation {\\t\\n\\tfunction setMinLiquidationThresholdPercents(uint16[8] calldata newMinThresholdPercents) external;\\n\\tfunction setMinLiquidationRewardPercent(uint16 newMinRewardPercent) external;\\n\\tfunction setMaxLiquidationRewardPercents(uint16[8] calldata newMaxRewardPercents) external;\\n\\tfunction isLiquidationCandidate(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (bool);\\n\\tfunction getLiquidationReward(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (uint256 finderFeeAmount);\\n}\\n\",\"keccak256\":\"0x0799656b324ed8d65391313156e1dfe7d99b6dadb08e71cd6a515d19731539bd\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IPlatform.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IFeesCalculator.sol\\\";\\nimport \\\"./IRewardsCollector.sol\\\";\\nimport \\\"./IFeesCollector.sol\\\";\\nimport \\\"./ILiquidation.sol\\\";\\n\\ninterface IPlatform {\\n\\n    struct Position {\\n        uint168 positionUnitsAmount;\\n        uint8 leverage;\\n        uint32 openCVIValue;\\n        uint32 creationTimestamp;\\n        uint32 originalCreationTimestamp;\\n    }\\n\\n    event Deposit(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event Withdraw(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event OpenPosition(address indexed account, uint256 tokenAmount, uint8 leverage, uint256 feeAmount, uint256 positionUnitsAmount, uint256 cviValue);\\n    event ClosePosition(address indexed account, uint256 tokenAmount, uint256 feeAmount, uint256 positionUnitsAmount, uint8 leverage, uint256 cviValue);\\n    event LiquidatePosition(address indexed positionAddress, uint256 currentPositionBalance, bool isBalancePositive, uint256 positionUnitsAmount);\\n\\n    function deposit(uint256 tokenAmount, uint256 minLPTokenAmount) external returns (uint256 lpTokenAmount);\\n    function withdraw(uint256 tokenAmount, uint256 maxLPTokenBurnAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n    function withdrawLPTokens(uint256 lpTokenAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n\\n    function increaseSharedPool(uint256 tokenAmount) external;\\n\\n    function openPositionWithoutFee(uint168 tokenAmount, uint32 maxCVI, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function openPosition(uint168 tokenAmount, uint32 maxCVI, uint16 maxBuyingPremiumFeePercentage, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function closePositionWithoutFee(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n    function closePosition(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function liquidatePositions(address[] calldata positionOwners) external returns (uint256 finderFeeAmount);\\n\\n    function setAddressSpecificParameters(address holderAddress, bool shouldLockPosition, bool noPremiumFeeAllowed, bool increaseSharedPoolAllowed, bool isLiquidityProvider) external;\\n\\n    function setRevertLockedTransfers(bool revertLockedTransfers) external;\\n\\n    function setSubContracts(IFeesCollector newCollector, ICVIOracle newOracle, IRewardsCollector newRewards, ILiquidation newLiquidation, address _newStakingContractAddress) external;\\n    function setFeesCalculator(IFeesCalculator newCalculator) external;\\n\\n    function setLatestOracleRoundId(uint80 newOracleRoundId) external;\\n    function setMaxTimeAllowedAfterLatestRound(uint32 newMaxTimeAllowedAfterLatestRound) external;\\n\\n    function setLockupPeriods(uint256 newLPLockupPeriod, uint256 newBuyersLockupPeriod) external;\\n\\n    function setEmergencyParameters(bool newEmergencyWithdrawAllowed, bool newCanPurgeSnapshots) external;\\n\\n    function setMaxAllowedLeverage(uint8 newMaxAllowedLeverage) external;\\n\\n    function calculatePositionBalance(address positionAddress) external view returns (uint256 currentPositionBalance, bool isPositive, uint168 positionUnitsAmount, uint8 leverage, uint256 fundingFees, uint256 marginDebt);\\n    function calculatePositionPendingFees(address positionAddress, uint168 positionUnitsAmount) external view returns (uint256 pendingFees);\\n\\n    function totalBalance(bool _withAddendum) external view returns (uint256 balance);\\n\\n    function calculateLatestTurbulenceIndicatorPercent() external view returns (uint16);\\n\\n    function cviOracle() external view returns (ICVIOracle);\\n    function feesCalculator() external view returns (IFeesCalculator);\\n\\n    function PRECISION_DECIMALS() external view returns (uint256);\\n\\n    function totalPositionUnitsAmount() external view returns (uint256);\\n    function totalLeveragedTokensAmount() external view returns (uint256);\\n    function totalFundingFeesAmount() external view returns (uint256);\\n    function latestFundingFees() external view returns (uint256);\\n\\n    function positions(address positionAddress) external view returns (uint168 positionUnitsAmount, uint8 leverage, uint32 openCVIValue, uint32 creationTimestamp, uint32 originalCreationTimestamp);\\n    function buyersLockupPeriod() external view returns (uint256);\\n    function maxCVIValue() external view returns (uint32);\\n}\\n\",\"keccak256\":\"0x11f55f686514975c2dd5adf87856f8df5f85b015621f01e1528addb6b7194686\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRewardsCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IRewardsCollector {\\n\\tfunction reward(address account, uint256 positionUnits, uint8 leverage) external;\\n}\\n\",\"keccak256\":\"0xaae3f1399202cccfb2e7302f69868a1f9adfbc53c968668e79201692c5724ca5\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVaultInfo.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IThetaVaultInfo {\\n    function totalVaultLeveragedAmount() external view returns (uint256);\\n    function vaultPositionUnits() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8077ab6dec8937112a2e2567d9b524a10ba640b7891c4bb40729bfbb648c0c1e\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xb71b875e7f1b8ad082eb6ff83bca4bfa7d050476cc98fd39295826b654edfb46\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/platform/PlatformContracts.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport '@coti-cvi/contracts-cvi/contracts/Platform.sol';\\n\\ncontract CVIUSDCPlatform is Platform {\\n  constructor() Platform() {}\\n}\\n\\ncontract CVIUSDCPlatform2X is Platform {\\n  constructor() Platform() {}\\n}\",\"keccak256\":\"0x784a1b8816340ad61f8a879608ceecffc867135971ba101205ed0fb61804ec82\",\"license\":\"GPL-3.0\"}},\"version\":1}",
      "bytecode": "0x608060405234801561001057600080fd5b5061544c806100206000396000f3fe608060405234801561001057600080fd5b50600436106103f15760003560e01c806383d3b20e11610215578063b17e141111610125578063dd907e8b116100b8578063f2217fe411610087578063f2217fe414610a60578063f2dfbf6614610a73578063f2fde38b14610a86578063f9c47ead14610a99578063fc0c546a14610abc57600080fd5b8063dd907e8b14610a19578063e2bbb15814610a21578063e51379ba14610a34578063ebc1daf614610a5757600080fd5b8063d934c20b116100f4578063d934c20b146109b9578063d9c36290146109d0578063dbd94267146109e3578063dd62ed3e14610a0657600080fd5b8063b17e141114610952578063ba6af83214610965578063c657549114610993578063ca832799146109a657600080fd5b80639c266c32116101a8578063a6ca982c11610177578063a6ca982c146108a4578063a9059cbb146108f5578063aceda7f914610908578063b152b2951461091c578063b17b849f1461093f57600080fd5b80639c266c32146108545780639cf160f61461086b5780639ec5a8941461087e578063a457c2d71461089157600080fd5b80638eb50a38116101e45780638eb50a381461081d578063913536381461082657806395d89b411461083957806395f20fac1461084157600080fd5b806383d3b20e146107dc5780638c7e7475146107ef5780638d4d7e31146108035780638da5cb5b1461080c57600080fd5b8063452d003f116103105780636185aa3a116102a357806370a082311161027257806370a0823114610732578063715018a61461075b578063745dd850146107635780637b04bc06146107915780638202c681146107bc57600080fd5b80636185aa3a146106c0578063655d8dec146106ec5780636c7156411461070c5780636f7d78281461071f57600080fd5b8063558e44d3116102df578063558e44d3146105e257806355f575101461060357806360ebfee6146106995780636162129b146106a557600080fd5b8063452d003f1461056d578063486072501461058057806353997f6114610593578063547ef3e6146105d957600080fd5b806323b872dd116103885780633535f48b116103575780633535f48b146104f457806335a03bfa1461051f5780633950935114610532578063441a3e701461054557600080fd5b806323b872dd146104ba5780632f811c22146104cd578063313ce567146104d657806332527992146104eb57600080fd5b80630a545fe5116103c45780630a545fe5146104695780630af127b91461047c578063124805861461049f57806318160ddd146104b257600080fd5b806302b1ba6f146103f657806305621f1a1461041c57806306fdde0314610431578063095ea7b314610446575b600080fd5b610409610404366004614ae4565b610acf565b6040519081526020015b60405180910390f35b61042f61042a366004615002565b610be8565b005b610439610c3b565b6040516104139190615054565b610459610454366004614b11565b610ccd565b6040519015158152602001610413565b61042f610477366004614f56565b610ce5565b61045961048a3660046149e0565b60dc6020526000908152604090205460ff1681565b6104096104ad366004614b3c565b610d3a565b606754610409565b6104596104c8366004614a34565b610fcc565b61040960d35481565b60125b60405160ff9091168152602001610413565b61040960d15481565b60d654610507906001600160a01b031681565b6040516001600160a01b039091168152602001610413565b60ce54610507906001600160a01b031681565b610459610540366004614b11565b610ff2565b610558610553366004614f56565b611014565b60408051928352602083019190915201610413565b61055861057b366004614f26565b611049565b61042f61058e36600461501c565b61108b565b6105a66105a1366004614ea7565b6110da565b604080516001600160a81b0395861681529385166020850152918416918301919091529091166060820152608001610413565b61040960d45481565b6105eb61271081565b6040516001600160a81b039091168152602001610413565b61065a6106113660046149e0565b60d960205260009081526040902080546001909101546001600160a81b0382169160ff600160a81b8204169163ffffffff600160b01b8304811692600160d01b90048116911685565b604080516001600160a81b03909616865260ff909416602086015263ffffffff928316938501939093528116606084015216608082015260a001610413565b6104096402540be40081565b6106ad611100565b60405161ffff9091168152602001610413565b60c9546106d790600160501b900463ffffffff1681565b60405163ffffffff9091168152602001610413565b6104096106fa3660046149e0565b60d86020526000908152604090205481565b61042f61071a3660046149e0565b61136a565b60cc54610507906001600160a01b031681565b6104096107403660046149e0565b6001600160a01b031660009081526065602052604090205490565b61042f6113b6565b61042f610771366004614bac565b33600090815260dd60205260409020805460ff1916911515919091179055565b60c9546107a4906001600160501b031681565b6040516001600160501b039091168152602001610413565b6104096107ca366004614f26565b60d76020526000908152604090205481565b61042f6107ea366004614cdb565b6113ec565b60c9546104d990600160a81b900460ff1681565b61040960d55481565b6033546001600160a01b0316610507565b61040960ca5481565b61042f610834366004614c11565b611502565b61043961163b565b61042f61084f366004614f26565b61164a565b60c9546106d790600160701b900463ffffffff1681565b60cf54610507906001600160a01b031681565b60d054610507906001600160a01b031681565b61045961089f366004614b11565b611656565b6108b76108b23660046149e0565b6116dc565b6040805196875294151560208701526001600160a81b039093169385019390935260ff166060840152608083019190915260a082015260c001610413565b610459610903366004614b11565b611734565b60c95461045990600160981b900460ff1681565b61045961092a3660046149e0565b60dd6020526000908152604090205460ff1681565b61042f61094d366004614a74565b611742565b61042f610960366004614f77565b6117d6565b610978610973366004614e21565b61183b565b60408051938452602084019290925290820152606001610413565b6109786109a1366004614e21565b611859565b61042f6109b4366004614be4565b61186a565b60c9546106d790600160b01b900463ffffffff1681565b6104096109de366004614bac565b6118c8565b6104596109f13660046149e0565b60de6020526000908152604090205460ff1681565b610409610a143660046149fc565b611991565b6104096119bc565b610409610a2f366004614f56565b6119e7565b610459610a423660046149e0565b60da6020526000908152604090205460ff1681565b61040960d25481565b6105a6610a6e366004614e4e565b611a0d565b60cd54610507906001600160a01b031681565b61042f610a943660046149e0565b611a37565b610459610aa73660046149e0565b60db6020526000908152604090205460ff1681565b60cb54610507906001600160a01b031681565b6001600160a01b038216600090815260d960209081526040808320815160a08101835281546001600160a81b03811680835260ff600160a81b8304169583019590955263ffffffff600160b01b8204811694830194909452600160d01b900483166060820152600190910154909116608082015290610b4d57600080fd5b80600001516001600160a81b0316836001600160a81b03161115610b7057600080fd5b60c954610b9390600160501b900463ffffffff166001600160a81b038516611acf565b606082015163ffffffff908116600090815260d760205260408082205460c954600160501b90049093168252902054610bd691906001600160a81b038716611bbe565b610be091906151e1565b949350505050565b6033546001600160a01b03163314610c1b5760405162461bcd60e51b8152600401610c12906150d5565b60405180910390fd5b60c9805460ff909216600160a81b0260ff60a81b19909216919091179055565b606060688054610c4a9061530f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c769061530f565b8015610cc35780601f10610c9857610100808354040283529160200191610cc3565b820191906000526020600020905b815481529060010190602001808311610ca657829003601f168201915b5050505050905090565b600033610cdb818585611be5565b5060019392505050565b6033546001600160a01b03163314610d0f5760405162461bcd60e51b8152600401610c12906150d5565b62127500821115610d1f57600080fd5b60d182905562093a80811115610d3457600080fd5b60d25550565b600060026097541415610d5f5760405162461bcd60e51b8152600401610c1290615155565b6002609755610d6e6001611d09565b5050506000805b83811015610f5f57600060d96000878785818110610da357634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610db891906149e0565b6001600160a01b031681526020808201929092526040908101600020815160a08101835281546001600160a81b03811680835260ff600160a81b8304169583019590955263ffffffff600160b01b8204811694830194909452600160d01b9004831660608201526001909101549091166080820152915015610f4c576000806000610e78898987818110610e5c57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610e7191906149e0565b6000612050565b9250925092508215610f485760cd5484516040808701516020880151915163b191ad2d60e01b81526004810187905285151560248201526001600160a81b03909316604484015263ffffffff16606483015260ff166084820152600197506001600160a01b039091169063b191ad2d9060a40160206040518083038186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3b9190614f3e565b610f4590886151e1565b96505b5050505b5080610f578161534a565b915050610d75565b5080610fa65760405162461bcd60e51b81526020600482015260166024820152752737903634b8bab4b230b13632903837b9b4ba34b7b760511b6044820152606401610c12565b8160d554610fb491906152a9565b60d555610fc082612252565b50600160975592915050565b600033610fda858285612269565b610fe58585856122e3565b60019150505b9392505050565b600033610cdb8185856110058383611991565b61100f91906151e1565b611be5565b33600090815260de6020526040812054819060ff1661103257600080fd5b61103e846000856124bc565b909590945092505050565b33600090815260de6020526040812054819060ff1661106757600080fd5b6000831161107457600080fd5b61108160006001856124bc565b9094909350915050565b6033546001600160a01b031633146110b55760405162461bcd60e51b8152600401610c12906150d5565b60c9805469ffffffffffffffffffff19166001600160501b0392909216919091179055565b6000806000806110ef87876000886000612820565b935093509350935093509350935093565b60cc5460c954604051635a7b84b160e01b81526001600160501b03909116600482015260009182916001600160a01b0390911690635a7b84b190602401604080518083038186803b15801561115457600080fd5b505afa158015611168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118c9190614f93565b5060ce5460c95442600090815260d7602052604080822054600160501b840463ffffffff168084528284205460d55460d3549451635c9f97e560e01b81526004810193909352602483019390935260448201526001600160501b039094166064850152608484015260a48301529293506001600160a01b0390911690635c9f97e59060c4016101606040518083038186803b15801561122a57600080fd5b505afa15801561123e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112629190614d3d565b90508061014001511561131c5760ce54604082810151606084015160c085015192516307b68b8160e01b81526004810192909252602482015263ffffffff808616604483015290911660648201526001600160a01b03909116906307b68b819060840160206040518083038186803b1580156112dd57600080fd5b505afa1580156112f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113159190614eed565b9250505090565b60ce60009054906101000a90046001600160a01b03166001600160a01b031663f359b46f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156112dd57600080fd5b6033546001600160a01b031633146113945760405162461bcd60e51b8152600401610c12906150d5565b60ce80546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146113e05760405162461bcd60e51b8152600401610c12906150d5565b6113ea600061309c565b565b6033546001600160a01b031633146114165760405162461bcd60e51b8152600401610c12906150d5565b60cf546001600160a01b03161580159061143a575060cb546001600160a01b031615155b1561145d5760cf5460cb5461145d916001600160a01b03918216911660006130ee565b60cf80546001600160a01b0319166001600160a01b03871690811790915515801590611493575060cb546001600160a01b031615155b156114b15760cb546114b1906001600160a01b0316866000196130ee565b60cc80546001600160a01b039586166001600160a01b03199182161790915560d080549486169482169490941790935560cd80549285169284169290921790915560d6805491909316911617905550565b600061150e600161324a565b90508015611526576000805461ff0019166101001790555b60c9805467ffffffffffffffff60701b1916661010000000046560741b1790556203f48060d15561546060d25560d680546001600160a01b031916905561156b6132d7565b611573613306565b61157d8888613335565b60cb80546001600160a01b03199081166001600160a01b038c81169190911790925560ca88905560c9805463ffffffff60b01b1916600160b01b63ffffffff8a160217905560ce8054821687841617905560cc8054821686841617905560cd80549091169184169190911790558015611630576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b606060698054610c4a9061530f565b6116538161336a565b50565b600033816116648286611991565b9050838110156116c45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610c12565b6116d18286868403611be5565b506001949350505050565b6001600160a01b038116600090815260d9602052604081205481906001600160a81b03811690600160a81b900460ff1682808361171857600080fd5b6117238760016133d0565b929a91995095975093955092915050565b600033610cdb8185856122e3565b6033546001600160a01b0316331461176c5760405162461bcd60e51b8152600401610c12906150d5565b6001600160a01b0394909416600090815260da602090815260408083208054961560ff1997881617905560db8252808320805487169515159590951790945560dc8152838220805486169315159390931790925560de909152208054909116911515919091179055565b6033546001600160a01b031633146118005760405162461bcd60e51b8152600401610c12906150d5565b610e108163ffffffff16101561181557600080fd5b60c9805463ffffffff909216600160701b0263ffffffff60701b19909216919091179055565b600080600061184c85856000613567565b9250925092509250925092565b600080600061184c85856001613567565b6033546001600160a01b031633146118945760405162461bcd60e51b8152600401610c12906150d5565b60c9805461ffff60981b1916600160981b9315159390930260ff60a01b191692909217600160a01b91151591909102179055565b60008060cc60009054906101000a90046001600160a01b03166001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b15801561191957600080fd5b505afa15801561192d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119519190614fc0565b505090508261196157600061197e565b60c95460d35461197e91600160501b900463ffffffff1690611acf565b61198782613aa5565b610feb91906151e1565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b60006119e260c9600a9054906101000a900463ffffffff1663ffffffff1660d354611acf565b905090565b33600090815260de602052604081205460ff16611a0357600080fd5b610feb8383613af4565b600080600080611a2588888861ffff16886001612820565b929b919a509850909650945050505050565b6033546001600160a01b03163314611a615760405162461bcd60e51b8152600401610c12906150d5565b6001600160a01b038116611ac65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c12565b6116538161309c565b60ce5460c95442600090815260d7602052604080822054600160501b840463ffffffff168084528284205460d55460d3549451635c9f97e560e01b81526004810193909352602483019390935260448201526001600160501b039094166064850152608484015260a48301529182916001600160a01b0390911690635c9f97e59060c4016101606040518083038186803b158015611b6c57600080fd5b505afa158015611b80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba49190614d3d565b600085815260d760205260409020548151919250610be091855b60006402540be40082611bd186866152a9565b611bdb9190615262565b610be0919061521f565b6001600160a01b038316611c475760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610c12565b6001600160a01b038216611ca85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610c12565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60c95460ce5442600090815260d7602052604080822054600160501b850463ffffffff168084528284205460d55460d3549451635c9f97e560e01b815260048101849052602481019490945260448401919091526001600160501b0390961660648301819052608483019690965260a482019290925291938493849391929184916001600160a01b031690635c9f97e59060c4016101606040518083038186803b158015611db657600080fd5b505afa158015611dca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dee9190614d3d565b90508060e0015115611e4457805142600090815260d7602090815260409091209190915560d354908201516402540be40091611e2991615262565b611e33919061521f565b60d454611e4091906151e1565b60d4555b80610100015115611e775760a081015160c9805469ffffffffffffffffffff19166001600160501b039092169190911790555b80610140015115611f905760cc54604051635a7b84b160e01b81526001600160501b03851660048201526001600160a01b0390911690635a7b84b190602401604080518083038186803b158015611ecd57600080fd5b505afa158015611ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f059190614f93565b5060ce54604083810151606085015160c0860151925163d622662f60e01b81526004810192909252602482015263ffffffff808516604483015290911660648201529197506001600160a01b03169063d622662f90608401600060405180830381600087803b158015611f7757600080fd5b505af1158015611f8b573d6000803e3d6000fd5b505050505b8061012001511561200b5760c9805463ffffffff60501b1916600160501b4263ffffffff16021790819055600160901b900460ff168015611fda575060c954600160a01b900460ff165b15611fef57600082815260d760205260408120555b60c9805460ff60901b1916600160901b89151502179055612035565b60c954600160901b900460ff16156120355760c9805460ff60901b1916600160901b891515021790555b60c08101518151608090920151909891975095509350505050565b600080600080600080600061206589896133d0565b6001600160a01b038d8116600090815260d96020908152604091829020825160a08101845281546001600160a81b03811680835260ff600160a81b83041694830185905263ffffffff600160b01b83048116848801819052600160d01b90930481166060850152600190940154909316608083015260cd549451633e67022960e01b8152600481018b90528915156024820152604481019390935260648301526084820192909252969c50949a508b99508a98509296509094509192911690633e6702299060a40160206040518083038186803b15801561214557600080fd5b505afa158015612159573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217d9190614bc8565b1561224657600080612193836000015186613d99565b60d382905560d481905560d55491935091506121b09085906152a9565b60d55582516040805189815288151560208201526001600160a81b03909216908201526001600160a01b038d16907f302eaf71224bcd9ed28854139aa87a32dc89622b38a4d8ce4160475aa57a7f139060600160405180910390a250506001600160a01b038a16600090815260d96020526040902080546001600160f01b03191681556001908101805463ffffffff1916905597505b50505050509250925092565b60cb54611653906001600160a01b03163383613ddd565b60006122758484611991565b905060001981146122dd57818110156122d05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610c12565b6122dd8484848403611be5565b50505050565b6001600160a01b0383166123475760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610c12565b6001600160a01b0382166123a95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610c12565b6123b4838383613e0d565b6001600160a01b0383166000908152606560205260409020548181101561242c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610c12565b6001600160a01b038085166000908152606560205260408082208585039055918516815290812080548492906124639084906151e1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124af91815260200190565b60405180910390a36122dd565b600080600260975414156124e25760405162461bcd60e51b8152600401610c1290615155565b600260975560d15433600090815260d860205260409020544291612505916151e1565b11156125465760405162461bcd60e51b815260206004820152601060248201526f119d5b991cc8185c99481b1bd8dad95960821b6044820152606401610c12565b60006125526001611d09565b5050905084156125865760675484935061256b82613aa5565b6125759085615262565b61257f919061521f565b9550612622565b6000861161259357600080fd5b61259c81613aa5565b60016125a760675490565b6125b19089615262565b6125bb91906152a9565b6125c5919061521f565b6125d09060016151e1565b9250838311156126225760405162461bcd60e51b815260206004820152601a60248201527f546f6f206d756368204c5020746f6b656e7320746f206275726e0000000000006044820152606401610c12565b336000908152606560205260409020548311156126815760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f756768204c5020746f6b656e7320666f72206163636f756e746044820152606401610c12565b60c954600160981b900460ff16806126a857508560d35460d5546126a591906152a9565b10155b6126f45760405162461bcd60e51b815260206004820152601760248201527f436f6c6c61746572616c20726174696f2062726f6b656e0000000000000000006044820152606401610c12565b8560d55461270291906152a9565b60d55560ce546040805163495ef70560e01b81529051600092612710926001600160a01b039091169163495ef70591600480820192602092909190829003018186803b15801561275157600080fd5b505afa158015612765573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127899190614eed565b6127979061ffff1689615262565b6127a1919061521f565b90506127ad81886152a9565b604080518981526020810187905290810183905290935033907f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca949060600160405180910390a26127fd3385613f45565b6128068161409f565b61280f83612252565b505060016097559094909350915050565b600080600080600260975414156128495760405162461bcd60e51b8152600401610c1290615155565b600260975533600090815260db602052604090205460ff1661286a57600080fd5b60008660ff161161287a57600080fd5b60c95460ff600160a81b9091048116908716111561289757600080fd5b6000896001600160a81b0316116128ad57600080fd5b60008863ffffffff161180156128d6575060c95463ffffffff600160b01b909104811690891611155b6128df57600080fd5b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915261293a6000611d09565b6080840152602083015263ffffffff90811660e08301819052908a1610156129935760405162461bcd60e51b815260206004820152600c60248201526b086ac9240e8dede40d0d2ced60a31b6044820152606401610c12565b60c954608082015142916129b591600160701b90910463ffffffff16906151e1565b10156129fd5760405162461bcd60e51b81526020600482015260176024820152764c61746573742063766920746f6f206c6f6e672061676f60481b6044820152606401610c12565b60ce54604080516307e3dd0f60e41b815281516001600160a01b0390931692637e3dd0f092600480840193919291829003018186803b158015612a3f57600080fd5b505afa158015612a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a779190614f09565b61ffff9081166101208401521661010082015285612a96576000612ac5565b6101008101516127109061ffff16612ab160ff8a168d615233565b612abb9190615233565b612ac591906151f9565b60d554825292508515612c835760e081015160c95463ffffffff91821691600160b01b9091041660ff8916612b066001600160a81b03808816908f166152a9565b612b109190615262565b612b1a9190615262565b612b24919061521f565b6040820152600060ff8816612b39858d615281565b612b439190615233565b8251612b58916001600160a81b0316906151e1565b60ce54835160d35460408601519394506001600160a01b0390921692631437d6d4928f928d929091908790612b8d90836151e1565b6040516001600160e01b031960e089901b1681526001600160a81b03909616600487015260ff909416602486015260448501929092526064840152608483015260a482015260c401604080518083038186803b158015612bec57600080fd5b505afa158015612c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c249190614df3565b61ffff1660c084018190529093506001600160a81b038a161015612c815760405162461bcd60e51b81526020600482015260146024820152730a0e4cadad2eada40cccaca40e8dede40d0d2ced60631b6044820152606401610c12565b505b60ff871682612c92858d615281565b612c9c9190615281565b612ca69190615233565b33600090815260d9602052604090208054919550906001600160a81b031615612d8057805460ff898116600160a81b9092041614612ce357600080fd5b6000612d038284602001518560e00151896001600160a81b03168d6140d5565b805160208201516001600160a81b0390811660a087015260608301516040840151929a509293508616612d3960ff8d1684615262565b8651612d4f906001600160a81b038c16906151e1565b612d5991906151e1565b612d6391906151e1565b612d6d91906152a9565b612d7791906152a9565b60d55550612eeb565b60e082015160c95463ffffffff91821691612dac91600160b01b9004166001600160a81b038816615262565b612db6919061521f565b6060830181905295506001600160a81b0386168614612dd457600080fd5b6001600160a81b0380871660a080850182905260408051918201815282825260ff808d16602080850191825260e089015163ffffffff908116868601908152428216606088018181526080890191825233600090815260d990955296909320875181549551925197518416600160d01b0263ffffffff60d01b19988516600160b01b029890981667ffffffffffffffff60b01b1993909716600160a81b026001600160b01b03199096169a169990991793909317929092169290921792909217855551600190940180549490911663ffffffff199094169390931790925560d354612ebf91906151e1565b60d35582516001600160a81b0380861691612edc918916906151e1565b612ee691906151e1565b60d555505b337fe485c81af56f49547b2ea1b6886083d8e3a7ef50fe670c9574bd5d4b2dd7d4628c8a612f1987896151b6565b60e0870151604080516001600160a81b03958616815260ff94909416602085015291841683830152928b16606083015263ffffffff909216608082015290519081900360a00190a2612f738b6001600160a81b03166142de565b6001600160a81b03841615612f9457612f94846001600160a81b031661409f565b60d55460d3541115612fdf5760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b6044820152606401610c12565b60d0546001600160a01b031615801590613005575060a08201516001600160a81b031615155b156130865760d05460a0830151604051630bf1944760e21b81523360048201526001600160a81b03909116602482015260ff8a1660448201526001600160a01b0390911690632fc6511c90606401600060405180830381600087803b15801561306d57600080fd5b505af1158015613081573d6000803e3d6000fd5b505050505b5050600160978190555095509550955095915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8015806131775750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561313d57600080fd5b505afa158015613151573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131759190614f3e565b155b6131e25760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610c12565b6040516001600160a01b03831660248201526044810182905261324590849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526142f6565b505050565b60008054610100900460ff1615613291578160ff16600114801561326d5750303b155b6132895760405162461bcd60e51b8152600401610c1290615087565b506000919050565b60005460ff8084169116106132b85760405162461bcd60e51b8152600401610c1290615087565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166132fe5760405162461bcd60e51b8152600401610c129061510a565b6113ea6143c8565b600054610100900460ff1661332d5760405162461bcd60e51b8152600401610c129061510a565b6113ea6143f6565b600054610100900460ff1661335c5760405162461bcd60e51b8152600401610c129061510a565b6133668282614426565b5050565b6002609754141561338d5760405162461bcd60e51b8152600401610c1290615155565b600260975533600090815260dc602052604090205460ff166133ae57600080fd5b8060d5546133bc91906151e1565b60d5556133c8816142de565b506001609755565b6001600160a01b03808316600090815260d960209081526040808320815160a08101835281546001600160a81b038116825260ff600160a81b8204169482019490945263ffffffff600160b01b8504811682850152600160d01b9094048416606080830191909152600190920154909316608084015260cc54825163c1639a2b60e01b815292519495869586958695909486949093169263c1639a2b92600480840193829003018186803b15801561348757600080fd5b505afa15801561349b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134bf9190614fc0565b5050606083015163ffffffff908116600090815260d760205260408082205460c954600160501b900490931682529020548451929350613507926001600160a81b0316611bbe565b9350861561353357613530826060015163ffffffff1683600001516001600160a81b0316611acf565b93505b61355582600001516001600160a81b0316836020015183856040015188614474565b919a9099509497509550929350505050565b60008060006002609754141561358f5760405162461bcd60e51b8152600401610c1290615155565b600260975533600090815260db602052604090205460ff166135b057600080fd5b6000866001600160a81b0316116135c657600080fd5b60008563ffffffff161180156135ef575060c95463ffffffff600160b01b909104811690861611155b6135f857600080fd5b33600090815260d96020526040902080546001600160a81b038089169116101561362157600080fd5b60d254815461363d90600160d01b900463ffffffff16426152a9565b101580613659575033600090815260da602052604090205460ff165b6136975760405162461bcd60e51b815260206004820152600f60248201526e141bdcda5d1a5bdb881b1bd8dad959608a1b6044820152606401610c12565b60008060008060006136a96001611d09565b50909250905063ffffffff808c1690831610156136f65760405162461bcd60e51b815260206004820152600b60248201526a43564920746f6f206c6f7760a81b6044820152606401610c12565b600061370d878e6001600160a81b03168486614551565b92985090965094509050801561373457600080600099509950995050505050505050613a94565b50506137408b84613d99565b60d45560d35560008980156137d3575060ce5460408051633b75d72160e11b815290516000926001600160a01b0316916376ebae42916004808301926020929190829003018186803b15801561379557600080fd5b505afa1580156137a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137cd9190614eed565b61ffff16115b156138655760ce60009054906101000a90046001600160a01b03166001600160a01b03166350e0942b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561382657600080fd5b505afa15801561383a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061385e9190614eed565b61ffff1690505b855461387b908d906001600160a81b0316615281565b86546001600160a81b0319166001600160a81b0391909116178655896138a2576000613961565b60ce54865433600090815260da6020526040908190205490516315435d0560e31b8152600160d01b90920463ffffffff16600483015260ff1615156024820152612710916001600160a01b03169063aa1ae8289060440160206040518083038186803b15801561391157600080fd5b505afa158015613925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139499190614eed565b6139579061ffff1687615262565b613961919061521f565b97506127106139708287615262565b61397a919061521f565b9650337f3989dab79971090c83b28eb2d423aa507b7d4c16f5cf10a4fdb05835cafba36a6139a886886151e1565b866139b38b8d6151e1565b6139bd91906151e1565b89546040805193845260208401929092526001600160a81b0381168383015260ff600160a81b90910416606083015263ffffffff86166080830152519081900360a00190a285546001600160a81b0316613a3d5733600090815260d96020526040902080546001600160f01b0319168155600101805463ffffffff191690555b86838660d554613a4d91906152a9565b613a5791906152a9565b613a6191906151e1565b60d55586613a6f89876152a9565b613a7991906152a9565b9850613a848861409f565b613a8d89612252565b5050505050505b600160978190555093509350939050565b60c95460d35460009163ffffffff600160b01b909104811691613aca91851690615262565b613ad4919061521f565b60d45460d554613ae491906151e1565b613aee91906152a9565b92915050565b600060026097541415613b195760405162461bcd60e51b8152600401610c1290615155565b600260975582613b2857600080fd5b33600090815260d86020526040812042905580613b456001611d09565b60c95492945092504291613b679150600160701b900463ffffffff16836151e1565b1015613baf5760405162461bcd60e51b81526020600482015260176024820152764c61746573742063766920746f6f206c6f6e672061676f60481b6044820152606401610c12565b60006127106001600160a81b031660ce60009054906101000a90046001600160a01b03166001600160a01b031663cc1252ae6040518163ffffffff1660e01b815260040160206040518083038186803b158015613c0b57600080fd5b505afa158015613c1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c439190614eed565b613c519061ffff1688615262565b613c5b919061521f565b90506000613c6982886152a9565b90506000613c7660675490565b90506000613c8386613aa5565b9050600082118015613c955750600081115b15613cb65780613ca58385615262565b613caf919061521f565b9650613cc6565b60ca54613cc39084615262565b96505b604080518a81526020810189905290810185905233907f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e9060600160405180910390a287871015613d4d5760405162461bcd60e51b8152602060048201526011602482015270546f6f20666577204c5020746f6b656e7360781b6044820152606401610c12565b60008711613d5a57600080fd5b8260d554613d6891906151e1565b60d555613d7533886145ed565b613d7e896142de565b613d878461409f565b50506001609755509295945050505050565b600080836001600160a81b031660d354613db391906152a9565b915060d4548311613dd1578260d454613dcc91906152a9565b613dd4565b60005b90509250929050565b6040516001600160a01b03831660248201526044810182905261324590849063a9059cbb60e01b9060640161320e565b60d6546001600160a01b0384811691161415613e4157506001600160a01b0316600090815260d86020526040902042905550565b60d1546001600160a01b038416600090815260d860205260409020544291613e68916151e1565b118015613e9557506001600160a01b03808316600090815260d86020526040808220549286168252902054115b8015613eaf575060d6546001600160a01b03838116911614155b15613245576001600160a01b038216600090815260dd602052604090205460ff1615613f1d5760405162461bcd60e51b815260206004820152601f60248201527f526563697069656e742072656675736573206c6f636b656420746f6b656e73006044820152606401610c12565b6001600160a01b03808416600090815260d86020526040808220549285168252902055505050565b6001600160a01b038216613fa55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610c12565b613fb182600083613e0d565b6001600160a01b038216600090815260656020526040902054818110156140255760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610c12565b6001600160a01b03831660009081526065602052604081208383039055606780548492906140549084906152a9565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6000811180156140b9575060cf546001600160a01b031615155b156116535760cb546116539082906001600160a01b03166146d8565b6040805160808082018352600080835260208084018290528385018290526060808501839052855160a081018752958601839052850182905291840181905288546001600160a81b0316918401829052600189015463ffffffff16845291929190819081908190614149908c908c8c614551565b9350935093509350801561418357600060208601819052855160018d01805463ffffffff191663ffffffff90921691909117905593508391505b60c95463ffffffff808b1691600160b01b900416896141a560ff8b1688615262565b6141af91906151e1565b6141b99190615262565b6141c3919061521f565b604086018181526001600160a81b039091168088529051146141e457600080fd5b8a5486516001600160a81b0316600168ffffffffffffffff0160a81b0319909116600160d01b4263ffffffff90811691909102600164ffffffff0160a81b0319169190911791909117600160b01b918b16919091021760ff60a81b1916600160a81b60ff891602178b55602085015161425d9084613d99565b608087018190526060870182905260d4558651614285916001600160a81b03909116906151e1565b60d3556040860182905260608601849052855160208601516001600160a81b03918216911610156142d057602085015186516142c19190615281565b6001600160a81b031660208701525b505050505095945050505050565b60cb54611653906001600160a01b0316333084614742565b600061434b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661477a9092919063ffffffff16565b80519091501561324557808060200190518101906143699190614bc8565b6132455760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c12565b600054610100900460ff166143ef5760405162461bcd60e51b8152600401610c129061510a565b6001609755565b600054610100900460ff1661441d5760405162461bcd60e51b8152600401610c129061510a565b6113ea3361309c565b600054610100900460ff1661444d5760405162461bcd60e51b8152600401610c129061510a565b815161446090606890602085019061488e565b50805161324590606990602084019061488e565b60c95460009081908190819063ffffffff600160b01b90910481169061449c9089168b615262565b6144a6919061521f565b905060018860ff16116144ba57600061450b565b60c95460ff891690600160b01b900463ffffffff166144da60018b6152c0565b60ff166144ed63ffffffff8a168d615262565b6144f79190615262565b614501919061521f565b61450b919061521f565b9150600061451986846151e1565b90508082106145375761452c81836152a9565b945060019350614544565b61454182826152a9565b94505b5050955095509592505050565b8354600160d01b900463ffffffff16600090815260d76020526040812054819081908190614580908789611bbe565b8854909350600090819081906145b2908b90600160a81b810460ff16908b90600160b01b900463ffffffff168a614474565b925092509250816145d8576145c8336000612050565b50505060019350600095506145df565b8296508094505b505050945094509450949050565b6001600160a01b0382166146435760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610c12565b61464f60008383613e0d565b806067600082825461466191906151e1565b90915550506001600160a01b0382166000908152606560205260408120805483929061468e9084906151e1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60cf54604051638b0f154d60e01b8152600481018490526001600160a01b03838116602483015290911690638b0f154d90604401600060405180830381600087803b15801561472657600080fd5b505af115801561473a573d6000803e3d6000fd5b505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526122dd9085906323b872dd60e01b9060840161320e565b6060610be08484600085856001600160a01b0385163b6147dc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c12565b600080866001600160a01b031685876040516147f89190615038565b60006040518083038185875af1925050503d8060008114614835576040519150601f19603f3d011682016040523d82523d6000602084013e61483a565b606091505b509150915061484a828286614855565b979650505050505050565b60608315614864575081610feb565b8251156148745782518084602001fd5b8160405162461bcd60e51b8152600401610c129190615054565b82805461489a9061530f565b90600052602060002090601f0160209004810192826148bc5760008555614902565b82601f106148d557805160ff1916838001178555614902565b82800160010185558215614902579182015b828111156149025782518255916020019190600101906148e7565b5061490e929150614912565b5090565b5b8082111561490e5760008155600101614913565b80516132d2816153bc565b600082601f830112614942578081fd5b813567ffffffffffffffff8082111561495d5761495d615391565b604051601f8301601f19908116603f0116810190828211818310171561498557614985615391565b8160405283815286602085880101111561499d578485fd5b8360208701602083013792830160200193909352509392505050565b80516132d2816153ef565b803560ff811681146132d257600080fd5b80516132d281615401565b6000602082840312156149f1578081fd5b8135610feb816153a7565b60008060408385031215614a0e578081fd5b8235614a19816153a7565b91506020830135614a29816153a7565b809150509250929050565b600080600060608486031215614a48578081fd5b8335614a53816153a7565b92506020840135614a63816153a7565b929592945050506040919091013590565b600080600080600060a08688031215614a8b578081fd5b8535614a96816153a7565b94506020860135614aa6816153bc565b93506040860135614ab6816153bc565b92506060860135614ac6816153bc565b91506080860135614ad6816153bc565b809150509295509295909350565b60008060408385031215614af6578182fd5b8235614b01816153a7565b91506020830135614a29816153da565b60008060408385031215614b23578182fd5b8235614b2e816153a7565b946020939093013593505050565b60008060208385031215614b4e578182fd5b823567ffffffffffffffff80821115614b65578384fd5b818501915085601f830112614b78578384fd5b813581811115614b86578485fd5b8660208260051b8501011115614b9a578485fd5b60209290920196919550909350505050565b600060208284031215614bbd578081fd5b8135610feb816153bc565b600060208284031215614bd9578081fd5b8151610feb816153bc565b60008060408385031215614bf6578182fd5b8235614c01816153bc565b91506020830135614a29816153bc565b600080600080600080600080610100898b031215614c2d578586fd5b8835614c38816153a7565b9750602089013567ffffffffffffffff80821115614c54578788fd5b614c608c838d01614932565b985060408b0135915080821115614c75578788fd5b50614c828b828c01614932565b965050606089013594506080890135614c9a816153ef565b935060a0890135614caa816153a7565b925060c0890135614cba816153a7565b915060e0890135614cca816153a7565b809150509295985092959890939650565b600080600080600060a08688031215614cf2578283fd5b8535614cfd816153a7565b94506020860135614d0d816153a7565b93506040860135614d1d816153a7565b92506060860135614d2d816153a7565b91506080860135614ad6816153a7565b60006101608284031215614d4f578081fd5b614d5761518c565b8251815260208301516020820152604083015160408201526060830151606082015260808301516080820152614d8f60a084016149d5565b60a0820152614da060c084016149b9565b60c0820152614db160e08401614927565b60e0820152610100614dc4818501614927565b90820152610120614dd6848201614927565b90820152610140614de8848201614927565b908201529392505050565b60008060408385031215614e05578182fd5b8251614e10816153da565b6020840151909250614a29816153ca565b60008060408385031215614e33578182fd5b8235614e3e816153da565b91506020830135614a29816153ef565b60008060008060808587031215614e63578182fd5b8435614e6e816153da565b93506020850135614e7e816153ef565b92506040850135614e8e816153ca565b9150614e9c606086016149c4565b905092959194509250565b600080600060608486031215614ebb578081fd5b8335614ec6816153da565b92506020840135614ed6816153ef565b9150614ee4604085016149c4565b90509250925092565b600060208284031215614efe578081fd5b8151610feb816153ca565b60008060408385031215614f1b578182fd5b8251614e10816153ca565b600060208284031215614f37578081fd5b5035919050565b600060208284031215614f4f578081fd5b5051919050565b60008060408385031215614f68578182fd5b50508035926020909101359150565b600060208284031215614f88578081fd5b8135610feb816153ef565b60008060408385031215614fa5578182fd5b8251614fb0816153ef565b6020939093015192949293505050565b600080600060608486031215614fd4578081fd5b8351614fdf816153ef565b6020850151909350614ff081615401565b80925050604084015190509250925092565b600060208284031215615013578081fd5b610feb826149c4565b60006020828403121561502d578081fd5b8135610feb81615401565b6000825161504a8184602087016152e3565b9190910192915050565b60208152600082518060208401526150738160408501602087016152e3565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b604051610160810167ffffffffffffffff811182821017156151b0576151b0615391565b60405290565b60006001600160a81b038281168482168083038211156151d8576151d8615365565b01949350505050565b600082198211156151f4576151f4615365565b500190565b60006001600160a81b03838116806152135761521361537b565b92169190910492915050565b60008261522e5761522e61537b565b500490565b60006001600160a81b038281168482168115158284048211161561525957615259615365565b02949350505050565b600081600019048311821515161561527c5761527c615365565b500290565b60006001600160a81b03838116908316818110156152a1576152a1615365565b039392505050565b6000828210156152bb576152bb615365565b500390565b600060ff821660ff8416808210156152da576152da615365565b90039392505050565b60005b838110156152fe5781810151838201526020016152e6565b838111156122dd5750506000910152565b600181811c9082168061532357607f821691505b6020821081141561534457634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561535e5761535e615365565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461165357600080fd5b801515811461165357600080fd5b61ffff8116811461165357600080fd5b6001600160a81b038116811461165357600080fd5b63ffffffff8116811461165357600080fd5b6001600160501b038116811461165357600080fdfea2646970667358221220d1fe512f6a1999538a7f9201595dabe2e47f6111b694a54a8a3e3fb47f77a37e64736f6c63430008040033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103f15760003560e01c806383d3b20e11610215578063b17e141111610125578063dd907e8b116100b8578063f2217fe411610087578063f2217fe414610a60578063f2dfbf6614610a73578063f2fde38b14610a86578063f9c47ead14610a99578063fc0c546a14610abc57600080fd5b8063dd907e8b14610a19578063e2bbb15814610a21578063e51379ba14610a34578063ebc1daf614610a5757600080fd5b8063d934c20b116100f4578063d934c20b146109b9578063d9c36290146109d0578063dbd94267146109e3578063dd62ed3e14610a0657600080fd5b8063b17e141114610952578063ba6af83214610965578063c657549114610993578063ca832799146109a657600080fd5b80639c266c32116101a8578063a6ca982c11610177578063a6ca982c146108a4578063a9059cbb146108f5578063aceda7f914610908578063b152b2951461091c578063b17b849f1461093f57600080fd5b80639c266c32146108545780639cf160f61461086b5780639ec5a8941461087e578063a457c2d71461089157600080fd5b80638eb50a38116101e45780638eb50a381461081d578063913536381461082657806395d89b411461083957806395f20fac1461084157600080fd5b806383d3b20e146107dc5780638c7e7475146107ef5780638d4d7e31146108035780638da5cb5b1461080c57600080fd5b8063452d003f116103105780636185aa3a116102a357806370a082311161027257806370a0823114610732578063715018a61461075b578063745dd850146107635780637b04bc06146107915780638202c681146107bc57600080fd5b80636185aa3a146106c0578063655d8dec146106ec5780636c7156411461070c5780636f7d78281461071f57600080fd5b8063558e44d3116102df578063558e44d3146105e257806355f575101461060357806360ebfee6146106995780636162129b146106a557600080fd5b8063452d003f1461056d578063486072501461058057806353997f6114610593578063547ef3e6146105d957600080fd5b806323b872dd116103885780633535f48b116103575780633535f48b146104f457806335a03bfa1461051f5780633950935114610532578063441a3e701461054557600080fd5b806323b872dd146104ba5780632f811c22146104cd578063313ce567146104d657806332527992146104eb57600080fd5b80630a545fe5116103c45780630a545fe5146104695780630af127b91461047c578063124805861461049f57806318160ddd146104b257600080fd5b806302b1ba6f146103f657806305621f1a1461041c57806306fdde0314610431578063095ea7b314610446575b600080fd5b610409610404366004614ae4565b610acf565b6040519081526020015b60405180910390f35b61042f61042a366004615002565b610be8565b005b610439610c3b565b6040516104139190615054565b610459610454366004614b11565b610ccd565b6040519015158152602001610413565b61042f610477366004614f56565b610ce5565b61045961048a3660046149e0565b60dc6020526000908152604090205460ff1681565b6104096104ad366004614b3c565b610d3a565b606754610409565b6104596104c8366004614a34565b610fcc565b61040960d35481565b60125b60405160ff9091168152602001610413565b61040960d15481565b60d654610507906001600160a01b031681565b6040516001600160a01b039091168152602001610413565b60ce54610507906001600160a01b031681565b610459610540366004614b11565b610ff2565b610558610553366004614f56565b611014565b60408051928352602083019190915201610413565b61055861057b366004614f26565b611049565b61042f61058e36600461501c565b61108b565b6105a66105a1366004614ea7565b6110da565b604080516001600160a81b0395861681529385166020850152918416918301919091529091166060820152608001610413565b61040960d45481565b6105eb61271081565b6040516001600160a81b039091168152602001610413565b61065a6106113660046149e0565b60d960205260009081526040902080546001909101546001600160a81b0382169160ff600160a81b8204169163ffffffff600160b01b8304811692600160d01b90048116911685565b604080516001600160a81b03909616865260ff909416602086015263ffffffff928316938501939093528116606084015216608082015260a001610413565b6104096402540be40081565b6106ad611100565b60405161ffff9091168152602001610413565b60c9546106d790600160501b900463ffffffff1681565b60405163ffffffff9091168152602001610413565b6104096106fa3660046149e0565b60d86020526000908152604090205481565b61042f61071a3660046149e0565b61136a565b60cc54610507906001600160a01b031681565b6104096107403660046149e0565b6001600160a01b031660009081526065602052604090205490565b61042f6113b6565b61042f610771366004614bac565b33600090815260dd60205260409020805460ff1916911515919091179055565b60c9546107a4906001600160501b031681565b6040516001600160501b039091168152602001610413565b6104096107ca366004614f26565b60d76020526000908152604090205481565b61042f6107ea366004614cdb565b6113ec565b60c9546104d990600160a81b900460ff1681565b61040960d55481565b6033546001600160a01b0316610507565b61040960ca5481565b61042f610834366004614c11565b611502565b61043961163b565b61042f61084f366004614f26565b61164a565b60c9546106d790600160701b900463ffffffff1681565b60cf54610507906001600160a01b031681565b60d054610507906001600160a01b031681565b61045961089f366004614b11565b611656565b6108b76108b23660046149e0565b6116dc565b6040805196875294151560208701526001600160a81b039093169385019390935260ff166060840152608083019190915260a082015260c001610413565b610459610903366004614b11565b611734565b60c95461045990600160981b900460ff1681565b61045961092a3660046149e0565b60dd6020526000908152604090205460ff1681565b61042f61094d366004614a74565b611742565b61042f610960366004614f77565b6117d6565b610978610973366004614e21565b61183b565b60408051938452602084019290925290820152606001610413565b6109786109a1366004614e21565b611859565b61042f6109b4366004614be4565b61186a565b60c9546106d790600160b01b900463ffffffff1681565b6104096109de366004614bac565b6118c8565b6104596109f13660046149e0565b60de6020526000908152604090205460ff1681565b610409610a143660046149fc565b611991565b6104096119bc565b610409610a2f366004614f56565b6119e7565b610459610a423660046149e0565b60da6020526000908152604090205460ff1681565b61040960d25481565b6105a6610a6e366004614e4e565b611a0d565b60cd54610507906001600160a01b031681565b61042f610a943660046149e0565b611a37565b610459610aa73660046149e0565b60db6020526000908152604090205460ff1681565b60cb54610507906001600160a01b031681565b6001600160a01b038216600090815260d960209081526040808320815160a08101835281546001600160a81b03811680835260ff600160a81b8304169583019590955263ffffffff600160b01b8204811694830194909452600160d01b900483166060820152600190910154909116608082015290610b4d57600080fd5b80600001516001600160a81b0316836001600160a81b03161115610b7057600080fd5b60c954610b9390600160501b900463ffffffff166001600160a81b038516611acf565b606082015163ffffffff908116600090815260d760205260408082205460c954600160501b90049093168252902054610bd691906001600160a81b038716611bbe565b610be091906151e1565b949350505050565b6033546001600160a01b03163314610c1b5760405162461bcd60e51b8152600401610c12906150d5565b60405180910390fd5b60c9805460ff909216600160a81b0260ff60a81b19909216919091179055565b606060688054610c4a9061530f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c769061530f565b8015610cc35780601f10610c9857610100808354040283529160200191610cc3565b820191906000526020600020905b815481529060010190602001808311610ca657829003601f168201915b5050505050905090565b600033610cdb818585611be5565b5060019392505050565b6033546001600160a01b03163314610d0f5760405162461bcd60e51b8152600401610c12906150d5565b62127500821115610d1f57600080fd5b60d182905562093a80811115610d3457600080fd5b60d25550565b600060026097541415610d5f5760405162461bcd60e51b8152600401610c1290615155565b6002609755610d6e6001611d09565b5050506000805b83811015610f5f57600060d96000878785818110610da357634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610db891906149e0565b6001600160a01b031681526020808201929092526040908101600020815160a08101835281546001600160a81b03811680835260ff600160a81b8304169583019590955263ffffffff600160b01b8204811694830194909452600160d01b9004831660608201526001909101549091166080820152915015610f4c576000806000610e78898987818110610e5c57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610e7191906149e0565b6000612050565b9250925092508215610f485760cd5484516040808701516020880151915163b191ad2d60e01b81526004810187905285151560248201526001600160a81b03909316604484015263ffffffff16606483015260ff166084820152600197506001600160a01b039091169063b191ad2d9060a40160206040518083038186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3b9190614f3e565b610f4590886151e1565b96505b5050505b5080610f578161534a565b915050610d75565b5080610fa65760405162461bcd60e51b81526020600482015260166024820152752737903634b8bab4b230b13632903837b9b4ba34b7b760511b6044820152606401610c12565b8160d554610fb491906152a9565b60d555610fc082612252565b50600160975592915050565b600033610fda858285612269565b610fe58585856122e3565b60019150505b9392505050565b600033610cdb8185856110058383611991565b61100f91906151e1565b611be5565b33600090815260de6020526040812054819060ff1661103257600080fd5b61103e846000856124bc565b909590945092505050565b33600090815260de6020526040812054819060ff1661106757600080fd5b6000831161107457600080fd5b61108160006001856124bc565b9094909350915050565b6033546001600160a01b031633146110b55760405162461bcd60e51b8152600401610c12906150d5565b60c9805469ffffffffffffffffffff19166001600160501b0392909216919091179055565b6000806000806110ef87876000886000612820565b935093509350935093509350935093565b60cc5460c954604051635a7b84b160e01b81526001600160501b03909116600482015260009182916001600160a01b0390911690635a7b84b190602401604080518083038186803b15801561115457600080fd5b505afa158015611168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118c9190614f93565b5060ce5460c95442600090815260d7602052604080822054600160501b840463ffffffff168084528284205460d55460d3549451635c9f97e560e01b81526004810193909352602483019390935260448201526001600160501b039094166064850152608484015260a48301529293506001600160a01b0390911690635c9f97e59060c4016101606040518083038186803b15801561122a57600080fd5b505afa15801561123e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112629190614d3d565b90508061014001511561131c5760ce54604082810151606084015160c085015192516307b68b8160e01b81526004810192909252602482015263ffffffff808616604483015290911660648201526001600160a01b03909116906307b68b819060840160206040518083038186803b1580156112dd57600080fd5b505afa1580156112f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113159190614eed565b9250505090565b60ce60009054906101000a90046001600160a01b03166001600160a01b031663f359b46f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156112dd57600080fd5b6033546001600160a01b031633146113945760405162461bcd60e51b8152600401610c12906150d5565b60ce80546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146113e05760405162461bcd60e51b8152600401610c12906150d5565b6113ea600061309c565b565b6033546001600160a01b031633146114165760405162461bcd60e51b8152600401610c12906150d5565b60cf546001600160a01b03161580159061143a575060cb546001600160a01b031615155b1561145d5760cf5460cb5461145d916001600160a01b03918216911660006130ee565b60cf80546001600160a01b0319166001600160a01b03871690811790915515801590611493575060cb546001600160a01b031615155b156114b15760cb546114b1906001600160a01b0316866000196130ee565b60cc80546001600160a01b039586166001600160a01b03199182161790915560d080549486169482169490941790935560cd80549285169284169290921790915560d6805491909316911617905550565b600061150e600161324a565b90508015611526576000805461ff0019166101001790555b60c9805467ffffffffffffffff60701b1916661010000000046560741b1790556203f48060d15561546060d25560d680546001600160a01b031916905561156b6132d7565b611573613306565b61157d8888613335565b60cb80546001600160a01b03199081166001600160a01b038c81169190911790925560ca88905560c9805463ffffffff60b01b1916600160b01b63ffffffff8a160217905560ce8054821687841617905560cc8054821686841617905560cd80549091169184169190911790558015611630576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b606060698054610c4a9061530f565b6116538161336a565b50565b600033816116648286611991565b9050838110156116c45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610c12565b6116d18286868403611be5565b506001949350505050565b6001600160a01b038116600090815260d9602052604081205481906001600160a81b03811690600160a81b900460ff1682808361171857600080fd5b6117238760016133d0565b929a91995095975093955092915050565b600033610cdb8185856122e3565b6033546001600160a01b0316331461176c5760405162461bcd60e51b8152600401610c12906150d5565b6001600160a01b0394909416600090815260da602090815260408083208054961560ff1997881617905560db8252808320805487169515159590951790945560dc8152838220805486169315159390931790925560de909152208054909116911515919091179055565b6033546001600160a01b031633146118005760405162461bcd60e51b8152600401610c12906150d5565b610e108163ffffffff16101561181557600080fd5b60c9805463ffffffff909216600160701b0263ffffffff60701b19909216919091179055565b600080600061184c85856000613567565b9250925092509250925092565b600080600061184c85856001613567565b6033546001600160a01b031633146118945760405162461bcd60e51b8152600401610c12906150d5565b60c9805461ffff60981b1916600160981b9315159390930260ff60a01b191692909217600160a01b91151591909102179055565b60008060cc60009054906101000a90046001600160a01b03166001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b15801561191957600080fd5b505afa15801561192d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119519190614fc0565b505090508261196157600061197e565b60c95460d35461197e91600160501b900463ffffffff1690611acf565b61198782613aa5565b610feb91906151e1565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b60006119e260c9600a9054906101000a900463ffffffff1663ffffffff1660d354611acf565b905090565b33600090815260de602052604081205460ff16611a0357600080fd5b610feb8383613af4565b600080600080611a2588888861ffff16886001612820565b929b919a509850909650945050505050565b6033546001600160a01b03163314611a615760405162461bcd60e51b8152600401610c12906150d5565b6001600160a01b038116611ac65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c12565b6116538161309c565b60ce5460c95442600090815260d7602052604080822054600160501b840463ffffffff168084528284205460d55460d3549451635c9f97e560e01b81526004810193909352602483019390935260448201526001600160501b039094166064850152608484015260a48301529182916001600160a01b0390911690635c9f97e59060c4016101606040518083038186803b158015611b6c57600080fd5b505afa158015611b80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba49190614d3d565b600085815260d760205260409020548151919250610be091855b60006402540be40082611bd186866152a9565b611bdb9190615262565b610be0919061521f565b6001600160a01b038316611c475760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610c12565b6001600160a01b038216611ca85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610c12565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60c95460ce5442600090815260d7602052604080822054600160501b850463ffffffff168084528284205460d55460d3549451635c9f97e560e01b815260048101849052602481019490945260448401919091526001600160501b0390961660648301819052608483019690965260a482019290925291938493849391929184916001600160a01b031690635c9f97e59060c4016101606040518083038186803b158015611db657600080fd5b505afa158015611dca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dee9190614d3d565b90508060e0015115611e4457805142600090815260d7602090815260409091209190915560d354908201516402540be40091611e2991615262565b611e33919061521f565b60d454611e4091906151e1565b60d4555b80610100015115611e775760a081015160c9805469ffffffffffffffffffff19166001600160501b039092169190911790555b80610140015115611f905760cc54604051635a7b84b160e01b81526001600160501b03851660048201526001600160a01b0390911690635a7b84b190602401604080518083038186803b158015611ecd57600080fd5b505afa158015611ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f059190614f93565b5060ce54604083810151606085015160c0860151925163d622662f60e01b81526004810192909252602482015263ffffffff808516604483015290911660648201529197506001600160a01b03169063d622662f90608401600060405180830381600087803b158015611f7757600080fd5b505af1158015611f8b573d6000803e3d6000fd5b505050505b8061012001511561200b5760c9805463ffffffff60501b1916600160501b4263ffffffff16021790819055600160901b900460ff168015611fda575060c954600160a01b900460ff165b15611fef57600082815260d760205260408120555b60c9805460ff60901b1916600160901b89151502179055612035565b60c954600160901b900460ff16156120355760c9805460ff60901b1916600160901b891515021790555b60c08101518151608090920151909891975095509350505050565b600080600080600080600061206589896133d0565b6001600160a01b038d8116600090815260d96020908152604091829020825160a08101845281546001600160a81b03811680835260ff600160a81b83041694830185905263ffffffff600160b01b83048116848801819052600160d01b90930481166060850152600190940154909316608083015260cd549451633e67022960e01b8152600481018b90528915156024820152604481019390935260648301526084820192909252969c50949a508b99508a98509296509094509192911690633e6702299060a40160206040518083038186803b15801561214557600080fd5b505afa158015612159573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217d9190614bc8565b1561224657600080612193836000015186613d99565b60d382905560d481905560d55491935091506121b09085906152a9565b60d55582516040805189815288151560208201526001600160a81b03909216908201526001600160a01b038d16907f302eaf71224bcd9ed28854139aa87a32dc89622b38a4d8ce4160475aa57a7f139060600160405180910390a250506001600160a01b038a16600090815260d96020526040902080546001600160f01b03191681556001908101805463ffffffff1916905597505b50505050509250925092565b60cb54611653906001600160a01b03163383613ddd565b60006122758484611991565b905060001981146122dd57818110156122d05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610c12565b6122dd8484848403611be5565b50505050565b6001600160a01b0383166123475760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610c12565b6001600160a01b0382166123a95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610c12565b6123b4838383613e0d565b6001600160a01b0383166000908152606560205260409020548181101561242c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610c12565b6001600160a01b038085166000908152606560205260408082208585039055918516815290812080548492906124639084906151e1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124af91815260200190565b60405180910390a36122dd565b600080600260975414156124e25760405162461bcd60e51b8152600401610c1290615155565b600260975560d15433600090815260d860205260409020544291612505916151e1565b11156125465760405162461bcd60e51b815260206004820152601060248201526f119d5b991cc8185c99481b1bd8dad95960821b6044820152606401610c12565b60006125526001611d09565b5050905084156125865760675484935061256b82613aa5565b6125759085615262565b61257f919061521f565b9550612622565b6000861161259357600080fd5b61259c81613aa5565b60016125a760675490565b6125b19089615262565b6125bb91906152a9565b6125c5919061521f565b6125d09060016151e1565b9250838311156126225760405162461bcd60e51b815260206004820152601a60248201527f546f6f206d756368204c5020746f6b656e7320746f206275726e0000000000006044820152606401610c12565b336000908152606560205260409020548311156126815760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f756768204c5020746f6b656e7320666f72206163636f756e746044820152606401610c12565b60c954600160981b900460ff16806126a857508560d35460d5546126a591906152a9565b10155b6126f45760405162461bcd60e51b815260206004820152601760248201527f436f6c6c61746572616c20726174696f2062726f6b656e0000000000000000006044820152606401610c12565b8560d55461270291906152a9565b60d55560ce546040805163495ef70560e01b81529051600092612710926001600160a01b039091169163495ef70591600480820192602092909190829003018186803b15801561275157600080fd5b505afa158015612765573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127899190614eed565b6127979061ffff1689615262565b6127a1919061521f565b90506127ad81886152a9565b604080518981526020810187905290810183905290935033907f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca949060600160405180910390a26127fd3385613f45565b6128068161409f565b61280f83612252565b505060016097559094909350915050565b600080600080600260975414156128495760405162461bcd60e51b8152600401610c1290615155565b600260975533600090815260db602052604090205460ff1661286a57600080fd5b60008660ff161161287a57600080fd5b60c95460ff600160a81b9091048116908716111561289757600080fd5b6000896001600160a81b0316116128ad57600080fd5b60008863ffffffff161180156128d6575060c95463ffffffff600160b01b909104811690891611155b6128df57600080fd5b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915261293a6000611d09565b6080840152602083015263ffffffff90811660e08301819052908a1610156129935760405162461bcd60e51b815260206004820152600c60248201526b086ac9240e8dede40d0d2ced60a31b6044820152606401610c12565b60c954608082015142916129b591600160701b90910463ffffffff16906151e1565b10156129fd5760405162461bcd60e51b81526020600482015260176024820152764c61746573742063766920746f6f206c6f6e672061676f60481b6044820152606401610c12565b60ce54604080516307e3dd0f60e41b815281516001600160a01b0390931692637e3dd0f092600480840193919291829003018186803b158015612a3f57600080fd5b505afa158015612a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a779190614f09565b61ffff9081166101208401521661010082015285612a96576000612ac5565b6101008101516127109061ffff16612ab160ff8a168d615233565b612abb9190615233565b612ac591906151f9565b60d554825292508515612c835760e081015160c95463ffffffff91821691600160b01b9091041660ff8916612b066001600160a81b03808816908f166152a9565b612b109190615262565b612b1a9190615262565b612b24919061521f565b6040820152600060ff8816612b39858d615281565b612b439190615233565b8251612b58916001600160a81b0316906151e1565b60ce54835160d35460408601519394506001600160a01b0390921692631437d6d4928f928d929091908790612b8d90836151e1565b6040516001600160e01b031960e089901b1681526001600160a81b03909616600487015260ff909416602486015260448501929092526064840152608483015260a482015260c401604080518083038186803b158015612bec57600080fd5b505afa158015612c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c249190614df3565b61ffff1660c084018190529093506001600160a81b038a161015612c815760405162461bcd60e51b81526020600482015260146024820152730a0e4cadad2eada40cccaca40e8dede40d0d2ced60631b6044820152606401610c12565b505b60ff871682612c92858d615281565b612c9c9190615281565b612ca69190615233565b33600090815260d9602052604090208054919550906001600160a81b031615612d8057805460ff898116600160a81b9092041614612ce357600080fd5b6000612d038284602001518560e00151896001600160a81b03168d6140d5565b805160208201516001600160a81b0390811660a087015260608301516040840151929a509293508616612d3960ff8d1684615262565b8651612d4f906001600160a81b038c16906151e1565b612d5991906151e1565b612d6391906151e1565b612d6d91906152a9565b612d7791906152a9565b60d55550612eeb565b60e082015160c95463ffffffff91821691612dac91600160b01b9004166001600160a81b038816615262565b612db6919061521f565b6060830181905295506001600160a81b0386168614612dd457600080fd5b6001600160a81b0380871660a080850182905260408051918201815282825260ff808d16602080850191825260e089015163ffffffff908116868601908152428216606088018181526080890191825233600090815260d990955296909320875181549551925197518416600160d01b0263ffffffff60d01b19988516600160b01b029890981667ffffffffffffffff60b01b1993909716600160a81b026001600160b01b03199096169a169990991793909317929092169290921792909217855551600190940180549490911663ffffffff199094169390931790925560d354612ebf91906151e1565b60d35582516001600160a81b0380861691612edc918916906151e1565b612ee691906151e1565b60d555505b337fe485c81af56f49547b2ea1b6886083d8e3a7ef50fe670c9574bd5d4b2dd7d4628c8a612f1987896151b6565b60e0870151604080516001600160a81b03958616815260ff94909416602085015291841683830152928b16606083015263ffffffff909216608082015290519081900360a00190a2612f738b6001600160a81b03166142de565b6001600160a81b03841615612f9457612f94846001600160a81b031661409f565b60d55460d3541115612fdf5760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b6044820152606401610c12565b60d0546001600160a01b031615801590613005575060a08201516001600160a81b031615155b156130865760d05460a0830151604051630bf1944760e21b81523360048201526001600160a81b03909116602482015260ff8a1660448201526001600160a01b0390911690632fc6511c90606401600060405180830381600087803b15801561306d57600080fd5b505af1158015613081573d6000803e3d6000fd5b505050505b5050600160978190555095509550955095915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8015806131775750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561313d57600080fd5b505afa158015613151573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131759190614f3e565b155b6131e25760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610c12565b6040516001600160a01b03831660248201526044810182905261324590849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526142f6565b505050565b60008054610100900460ff1615613291578160ff16600114801561326d5750303b155b6132895760405162461bcd60e51b8152600401610c1290615087565b506000919050565b60005460ff8084169116106132b85760405162461bcd60e51b8152600401610c1290615087565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166132fe5760405162461bcd60e51b8152600401610c129061510a565b6113ea6143c8565b600054610100900460ff1661332d5760405162461bcd60e51b8152600401610c129061510a565b6113ea6143f6565b600054610100900460ff1661335c5760405162461bcd60e51b8152600401610c129061510a565b6133668282614426565b5050565b6002609754141561338d5760405162461bcd60e51b8152600401610c1290615155565b600260975533600090815260dc602052604090205460ff166133ae57600080fd5b8060d5546133bc91906151e1565b60d5556133c8816142de565b506001609755565b6001600160a01b03808316600090815260d960209081526040808320815160a08101835281546001600160a81b038116825260ff600160a81b8204169482019490945263ffffffff600160b01b8504811682850152600160d01b9094048416606080830191909152600190920154909316608084015260cc54825163c1639a2b60e01b815292519495869586958695909486949093169263c1639a2b92600480840193829003018186803b15801561348757600080fd5b505afa15801561349b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134bf9190614fc0565b5050606083015163ffffffff908116600090815260d760205260408082205460c954600160501b900490931682529020548451929350613507926001600160a81b0316611bbe565b9350861561353357613530826060015163ffffffff1683600001516001600160a81b0316611acf565b93505b61355582600001516001600160a81b0316836020015183856040015188614474565b919a9099509497509550929350505050565b60008060006002609754141561358f5760405162461bcd60e51b8152600401610c1290615155565b600260975533600090815260db602052604090205460ff166135b057600080fd5b6000866001600160a81b0316116135c657600080fd5b60008563ffffffff161180156135ef575060c95463ffffffff600160b01b909104811690861611155b6135f857600080fd5b33600090815260d96020526040902080546001600160a81b038089169116101561362157600080fd5b60d254815461363d90600160d01b900463ffffffff16426152a9565b101580613659575033600090815260da602052604090205460ff165b6136975760405162461bcd60e51b815260206004820152600f60248201526e141bdcda5d1a5bdb881b1bd8dad959608a1b6044820152606401610c12565b60008060008060006136a96001611d09565b50909250905063ffffffff808c1690831610156136f65760405162461bcd60e51b815260206004820152600b60248201526a43564920746f6f206c6f7760a81b6044820152606401610c12565b600061370d878e6001600160a81b03168486614551565b92985090965094509050801561373457600080600099509950995050505050505050613a94565b50506137408b84613d99565b60d45560d35560008980156137d3575060ce5460408051633b75d72160e11b815290516000926001600160a01b0316916376ebae42916004808301926020929190829003018186803b15801561379557600080fd5b505afa1580156137a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137cd9190614eed565b61ffff16115b156138655760ce60009054906101000a90046001600160a01b03166001600160a01b03166350e0942b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561382657600080fd5b505afa15801561383a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061385e9190614eed565b61ffff1690505b855461387b908d906001600160a81b0316615281565b86546001600160a81b0319166001600160a81b0391909116178655896138a2576000613961565b60ce54865433600090815260da6020526040908190205490516315435d0560e31b8152600160d01b90920463ffffffff16600483015260ff1615156024820152612710916001600160a01b03169063aa1ae8289060440160206040518083038186803b15801561391157600080fd5b505afa158015613925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139499190614eed565b6139579061ffff1687615262565b613961919061521f565b97506127106139708287615262565b61397a919061521f565b9650337f3989dab79971090c83b28eb2d423aa507b7d4c16f5cf10a4fdb05835cafba36a6139a886886151e1565b866139b38b8d6151e1565b6139bd91906151e1565b89546040805193845260208401929092526001600160a81b0381168383015260ff600160a81b90910416606083015263ffffffff86166080830152519081900360a00190a285546001600160a81b0316613a3d5733600090815260d96020526040902080546001600160f01b0319168155600101805463ffffffff191690555b86838660d554613a4d91906152a9565b613a5791906152a9565b613a6191906151e1565b60d55586613a6f89876152a9565b613a7991906152a9565b9850613a848861409f565b613a8d89612252565b5050505050505b600160978190555093509350939050565b60c95460d35460009163ffffffff600160b01b909104811691613aca91851690615262565b613ad4919061521f565b60d45460d554613ae491906151e1565b613aee91906152a9565b92915050565b600060026097541415613b195760405162461bcd60e51b8152600401610c1290615155565b600260975582613b2857600080fd5b33600090815260d86020526040812042905580613b456001611d09565b60c95492945092504291613b679150600160701b900463ffffffff16836151e1565b1015613baf5760405162461bcd60e51b81526020600482015260176024820152764c61746573742063766920746f6f206c6f6e672061676f60481b6044820152606401610c12565b60006127106001600160a81b031660ce60009054906101000a90046001600160a01b03166001600160a01b031663cc1252ae6040518163ffffffff1660e01b815260040160206040518083038186803b158015613c0b57600080fd5b505afa158015613c1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c439190614eed565b613c519061ffff1688615262565b613c5b919061521f565b90506000613c6982886152a9565b90506000613c7660675490565b90506000613c8386613aa5565b9050600082118015613c955750600081115b15613cb65780613ca58385615262565b613caf919061521f565b9650613cc6565b60ca54613cc39084615262565b96505b604080518a81526020810189905290810185905233907f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e9060600160405180910390a287871015613d4d5760405162461bcd60e51b8152602060048201526011602482015270546f6f20666577204c5020746f6b656e7360781b6044820152606401610c12565b60008711613d5a57600080fd5b8260d554613d6891906151e1565b60d555613d7533886145ed565b613d7e896142de565b613d878461409f565b50506001609755509295945050505050565b600080836001600160a81b031660d354613db391906152a9565b915060d4548311613dd1578260d454613dcc91906152a9565b613dd4565b60005b90509250929050565b6040516001600160a01b03831660248201526044810182905261324590849063a9059cbb60e01b9060640161320e565b60d6546001600160a01b0384811691161415613e4157506001600160a01b0316600090815260d86020526040902042905550565b60d1546001600160a01b038416600090815260d860205260409020544291613e68916151e1565b118015613e9557506001600160a01b03808316600090815260d86020526040808220549286168252902054115b8015613eaf575060d6546001600160a01b03838116911614155b15613245576001600160a01b038216600090815260dd602052604090205460ff1615613f1d5760405162461bcd60e51b815260206004820152601f60248201527f526563697069656e742072656675736573206c6f636b656420746f6b656e73006044820152606401610c12565b6001600160a01b03808416600090815260d86020526040808220549285168252902055505050565b6001600160a01b038216613fa55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610c12565b613fb182600083613e0d565b6001600160a01b038216600090815260656020526040902054818110156140255760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610c12565b6001600160a01b03831660009081526065602052604081208383039055606780548492906140549084906152a9565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6000811180156140b9575060cf546001600160a01b031615155b156116535760cb546116539082906001600160a01b03166146d8565b6040805160808082018352600080835260208084018290528385018290526060808501839052855160a081018752958601839052850182905291840181905288546001600160a81b0316918401829052600189015463ffffffff16845291929190819081908190614149908c908c8c614551565b9350935093509350801561418357600060208601819052855160018d01805463ffffffff191663ffffffff90921691909117905593508391505b60c95463ffffffff808b1691600160b01b900416896141a560ff8b1688615262565b6141af91906151e1565b6141b99190615262565b6141c3919061521f565b604086018181526001600160a81b039091168088529051146141e457600080fd5b8a5486516001600160a81b0316600168ffffffffffffffff0160a81b0319909116600160d01b4263ffffffff90811691909102600164ffffffff0160a81b0319169190911791909117600160b01b918b16919091021760ff60a81b1916600160a81b60ff891602178b55602085015161425d9084613d99565b608087018190526060870182905260d4558651614285916001600160a81b03909116906151e1565b60d3556040860182905260608601849052855160208601516001600160a81b03918216911610156142d057602085015186516142c19190615281565b6001600160a81b031660208701525b505050505095945050505050565b60cb54611653906001600160a01b0316333084614742565b600061434b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661477a9092919063ffffffff16565b80519091501561324557808060200190518101906143699190614bc8565b6132455760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c12565b600054610100900460ff166143ef5760405162461bcd60e51b8152600401610c129061510a565b6001609755565b600054610100900460ff1661441d5760405162461bcd60e51b8152600401610c129061510a565b6113ea3361309c565b600054610100900460ff1661444d5760405162461bcd60e51b8152600401610c129061510a565b815161446090606890602085019061488e565b50805161324590606990602084019061488e565b60c95460009081908190819063ffffffff600160b01b90910481169061449c9089168b615262565b6144a6919061521f565b905060018860ff16116144ba57600061450b565b60c95460ff891690600160b01b900463ffffffff166144da60018b6152c0565b60ff166144ed63ffffffff8a168d615262565b6144f79190615262565b614501919061521f565b61450b919061521f565b9150600061451986846151e1565b90508082106145375761452c81836152a9565b945060019350614544565b61454182826152a9565b94505b5050955095509592505050565b8354600160d01b900463ffffffff16600090815260d76020526040812054819081908190614580908789611bbe565b8854909350600090819081906145b2908b90600160a81b810460ff16908b90600160b01b900463ffffffff168a614474565b925092509250816145d8576145c8336000612050565b50505060019350600095506145df565b8296508094505b505050945094509450949050565b6001600160a01b0382166146435760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610c12565b61464f60008383613e0d565b806067600082825461466191906151e1565b90915550506001600160a01b0382166000908152606560205260408120805483929061468e9084906151e1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60cf54604051638b0f154d60e01b8152600481018490526001600160a01b03838116602483015290911690638b0f154d90604401600060405180830381600087803b15801561472657600080fd5b505af115801561473a573d6000803e3d6000fd5b505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526122dd9085906323b872dd60e01b9060840161320e565b6060610be08484600085856001600160a01b0385163b6147dc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c12565b600080866001600160a01b031685876040516147f89190615038565b60006040518083038185875af1925050503d8060008114614835576040519150601f19603f3d011682016040523d82523d6000602084013e61483a565b606091505b509150915061484a828286614855565b979650505050505050565b60608315614864575081610feb565b8251156148745782518084602001fd5b8160405162461bcd60e51b8152600401610c129190615054565b82805461489a9061530f565b90600052602060002090601f0160209004810192826148bc5760008555614902565b82601f106148d557805160ff1916838001178555614902565b82800160010185558215614902579182015b828111156149025782518255916020019190600101906148e7565b5061490e929150614912565b5090565b5b8082111561490e5760008155600101614913565b80516132d2816153bc565b600082601f830112614942578081fd5b813567ffffffffffffffff8082111561495d5761495d615391565b604051601f8301601f19908116603f0116810190828211818310171561498557614985615391565b8160405283815286602085880101111561499d578485fd5b8360208701602083013792830160200193909352509392505050565b80516132d2816153ef565b803560ff811681146132d257600080fd5b80516132d281615401565b6000602082840312156149f1578081fd5b8135610feb816153a7565b60008060408385031215614a0e578081fd5b8235614a19816153a7565b91506020830135614a29816153a7565b809150509250929050565b600080600060608486031215614a48578081fd5b8335614a53816153a7565b92506020840135614a63816153a7565b929592945050506040919091013590565b600080600080600060a08688031215614a8b578081fd5b8535614a96816153a7565b94506020860135614aa6816153bc565b93506040860135614ab6816153bc565b92506060860135614ac6816153bc565b91506080860135614ad6816153bc565b809150509295509295909350565b60008060408385031215614af6578182fd5b8235614b01816153a7565b91506020830135614a29816153da565b60008060408385031215614b23578182fd5b8235614b2e816153a7565b946020939093013593505050565b60008060208385031215614b4e578182fd5b823567ffffffffffffffff80821115614b65578384fd5b818501915085601f830112614b78578384fd5b813581811115614b86578485fd5b8660208260051b8501011115614b9a578485fd5b60209290920196919550909350505050565b600060208284031215614bbd578081fd5b8135610feb816153bc565b600060208284031215614bd9578081fd5b8151610feb816153bc565b60008060408385031215614bf6578182fd5b8235614c01816153bc565b91506020830135614a29816153bc565b600080600080600080600080610100898b031215614c2d578586fd5b8835614c38816153a7565b9750602089013567ffffffffffffffff80821115614c54578788fd5b614c608c838d01614932565b985060408b0135915080821115614c75578788fd5b50614c828b828c01614932565b965050606089013594506080890135614c9a816153ef565b935060a0890135614caa816153a7565b925060c0890135614cba816153a7565b915060e0890135614cca816153a7565b809150509295985092959890939650565b600080600080600060a08688031215614cf2578283fd5b8535614cfd816153a7565b94506020860135614d0d816153a7565b93506040860135614d1d816153a7565b92506060860135614d2d816153a7565b91506080860135614ad6816153a7565b60006101608284031215614d4f578081fd5b614d5761518c565b8251815260208301516020820152604083015160408201526060830151606082015260808301516080820152614d8f60a084016149d5565b60a0820152614da060c084016149b9565b60c0820152614db160e08401614927565b60e0820152610100614dc4818501614927565b90820152610120614dd6848201614927565b90820152610140614de8848201614927565b908201529392505050565b60008060408385031215614e05578182fd5b8251614e10816153da565b6020840151909250614a29816153ca565b60008060408385031215614e33578182fd5b8235614e3e816153da565b91506020830135614a29816153ef565b60008060008060808587031215614e63578182fd5b8435614e6e816153da565b93506020850135614e7e816153ef565b92506040850135614e8e816153ca565b9150614e9c606086016149c4565b905092959194509250565b600080600060608486031215614ebb578081fd5b8335614ec6816153da565b92506020840135614ed6816153ef565b9150614ee4604085016149c4565b90509250925092565b600060208284031215614efe578081fd5b8151610feb816153ca565b60008060408385031215614f1b578182fd5b8251614e10816153ca565b600060208284031215614f37578081fd5b5035919050565b600060208284031215614f4f578081fd5b5051919050565b60008060408385031215614f68578182fd5b50508035926020909101359150565b600060208284031215614f88578081fd5b8135610feb816153ef565b60008060408385031215614fa5578182fd5b8251614fb0816153ef565b6020939093015192949293505050565b600080600060608486031215614fd4578081fd5b8351614fdf816153ef565b6020850151909350614ff081615401565b80925050604084015190509250925092565b600060208284031215615013578081fd5b610feb826149c4565b60006020828403121561502d578081fd5b8135610feb81615401565b6000825161504a8184602087016152e3565b9190910192915050565b60208152600082518060208401526150738160408501602087016152e3565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b604051610160810167ffffffffffffffff811182821017156151b0576151b0615391565b60405290565b60006001600160a81b038281168482168083038211156151d8576151d8615365565b01949350505050565b600082198211156151f4576151f4615365565b500190565b60006001600160a81b03838116806152135761521361537b565b92169190910492915050565b60008261522e5761522e61537b565b500490565b60006001600160a81b038281168482168115158284048211161561525957615259615365565b02949350505050565b600081600019048311821515161561527c5761527c615365565b500290565b60006001600160a81b03838116908316818110156152a1576152a1615365565b039392505050565b6000828210156152bb576152bb615365565b500390565b600060ff821660ff8416808210156152da576152da615365565b90039392505050565b60005b838110156152fe5781810151838201526020016152e6565b838111156122dd5750506000910152565b600181811c9082168061532357607f821691505b6020821081141561534457634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561535e5761535e615365565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461165357600080fd5b801515811461165357600080fd5b61ffff8116811461165357600080fd5b6001600160a81b038116811461165357600080fd5b63ffffffff8116811461165357600080fd5b6001600160501b038116811461165357600080fdfea2646970667358221220d1fe512f6a1999538a7f9201595dabe2e47f6111b694a54a8a3e3fb47f77a37e64736f6c63430008040033",
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 33638,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 33641,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 36495,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 33518,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address"
          },
          {
            "astId": 33630,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 33851,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 33857,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 33859,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256"
          },
          {
            "astId": 33861,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage"
          },
          {
            "astId": 33863,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage"
          },
          {
            "astId": 34442,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage"
          },
          {
            "astId": 33787,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256"
          },
          {
            "astId": 33831,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 3334,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "latestOracleRoundId",
            "offset": 0,
            "slot": "201",
            "type": "t_uint80"
          },
          {
            "astId": 3336,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "latestSnapshotTimestamp",
            "offset": 10,
            "slot": "201",
            "type": "t_uint32"
          },
          {
            "astId": 3338,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "maxTimeAllowedAfterLatestRound",
            "offset": 14,
            "slot": "201",
            "type": "t_uint32"
          },
          {
            "astId": 3340,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "canPurgeLatestSnapshot",
            "offset": 18,
            "slot": "201",
            "type": "t_bool"
          },
          {
            "astId": 3342,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "emergencyWithdrawAllowed",
            "offset": 19,
            "slot": "201",
            "type": "t_bool"
          },
          {
            "astId": 3344,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "purgeSnapshots",
            "offset": 20,
            "slot": "201",
            "type": "t_bool"
          },
          {
            "astId": 3346,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "maxAllowedLeverage",
            "offset": 21,
            "slot": "201",
            "type": "t_uint8"
          },
          {
            "astId": 3349,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "maxCVIValue",
            "offset": 22,
            "slot": "201",
            "type": "t_uint32"
          },
          {
            "astId": 3358,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "initialTokenToLPTokenRate",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256"
          },
          {
            "astId": 3361,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "token",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IERC20Upgradeable)34521"
          },
          {
            "astId": 3365,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "cviOracle",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(ICVIOracle)16496"
          },
          {
            "astId": 3368,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "liquidation",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(ILiquidation)17187"
          },
          {
            "astId": 3372,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "feesCalculator",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(IFeesCalculator)16960"
          },
          {
            "astId": 3375,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "feesCollector",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(IFeesCollector)16972"
          },
          {
            "astId": 3378,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "rewards",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(IRewardsCollector)18019"
          },
          {
            "astId": 3380,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "lpsLockupPeriod",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256"
          },
          {
            "astId": 3383,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "buyersLockupPeriod",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256"
          },
          {
            "astId": 3386,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "totalPositionUnitsAmount",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256"
          },
          {
            "astId": 3389,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "totalFundingFeesAmount",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256"
          },
          {
            "astId": 3392,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "totalLeveragedTokensAmount",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256"
          },
          {
            "astId": 3394,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "stakingContractAddress",
            "offset": 0,
            "slot": "214",
            "type": "t_address"
          },
          {
            "astId": 3398,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "cviSnapshots",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_uint256,t_uint256)"
          },
          {
            "astId": 3402,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "lastDepositTimestamp",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 3408,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "positions",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_struct(Position)17205_storage)"
          },
          {
            "astId": 3412,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "noLockPositionAddresses",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 3416,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "positionHoldersAllowedAddresses",
            "offset": 0,
            "slot": "219",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 3420,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "increaseSharedPoolAllowedAddresses",
            "offset": 0,
            "slot": "220",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 3424,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "revertLockedTransfered",
            "offset": 0,
            "slot": "221",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 3428,
            "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
            "label": "liquidityProviders",
            "offset": 0,
            "slot": "222",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ICVIOracle)16496": {
            "encoding": "inplace",
            "label": "contract ICVIOracle",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)34521": {
            "encoding": "inplace",
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFeesCalculator)16960": {
            "encoding": "inplace",
            "label": "contract IFeesCalculator",
            "numberOfBytes": "20"
          },
          "t_contract(IFeesCollector)16972": {
            "encoding": "inplace",
            "label": "contract IFeesCollector",
            "numberOfBytes": "20"
          },
          "t_contract(ILiquidation)17187": {
            "encoding": "inplace",
            "label": "contract ILiquidation",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsCollector)18019": {
            "encoding": "inplace",
            "label": "contract IRewardsCollector",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_uint256)"
          },
          "t_mapping(t_address,t_struct(Position)17205_storage)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => struct IPlatform.Position)",
            "numberOfBytes": "32",
            "value": "t_struct(Position)17205_storage"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Position)17205_storage": {
            "encoding": "inplace",
            "label": "struct IPlatform.Position",
            "members": [
              {
                "astId": 17196,
                "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
                "label": "positionUnitsAmount",
                "offset": 0,
                "slot": "0",
                "type": "t_uint168"
              },
              {
                "astId": 17198,
                "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
                "label": "leverage",
                "offset": 21,
                "slot": "0",
                "type": "t_uint8"
              },
              {
                "astId": 17200,
                "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
                "label": "openCVIValue",
                "offset": 22,
                "slot": "0",
                "type": "t_uint32"
              },
              {
                "astId": 17202,
                "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
                "label": "creationTimestamp",
                "offset": 26,
                "slot": "0",
                "type": "t_uint32"
              },
              {
                "astId": 17204,
                "contract": "contracts/platform/PlatformContracts.sol:CVIUSDCPlatform",
                "label": "originalCreationTimestamp",
                "offset": 0,
                "slot": "1",
                "type": "t_uint32"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint168": {
            "encoding": "inplace",
            "label": "uint168",
            "numberOfBytes": "21"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "encoding": "inplace",
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "encoding": "inplace",
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      },
      "creationBlock": 29537836,
      "history": []
    },
    "CVIUSDCPlatform_Proxy": {
      "address": "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0xbab65a8aca87c752dbbb49dd6f61c9ddb46b488f54243dd76b1b3d246ea5873b",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
        "transactionIndex": 1,
        "gasUsed": "5443465",
        "logsBloom": "0x
        "blockHash": "0x9d731322c6998b56b83625f1d4cc9bc4a541a00fd19fa7925c4fa9a17af50ccb",
        "transactionHash": "0xbab65a8aca87c752dbbb49dd6f61c9ddb46b488f54243dd76b1b3d246ea5873b",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 29537849,
            "transactionHash": "0xbab65a8aca87c752dbbb49dd6f61c9ddb46b488f54243dd76b1b3d246ea5873b",
            "address": "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x0000000000000000000000008a53460ea9cd297b2283085af8ff675cd9f8fc09"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x9d731322c6998b56b83625f1d4cc9bc4a541a00fd19fa7925c4fa9a17af50ccb"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537849,
            "transactionHash": "0xbab65a8aca87c752dbbb49dd6f61c9ddb46b488f54243dd76b1b3d246ea5873b",
            "address": "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 1,
            "blockHash": "0x9d731322c6998b56b83625f1d4cc9bc4a541a00fd19fa7925c4fa9a17af50ccb"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537849,
            "transactionHash": "0xbab65a8aca87c752dbbb49dd6f61c9ddb46b488f54243dd76b1b3d246ea5873b",
            "address": "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
            "topics": [
              "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "logIndex": 2,
            "blockHash": "0x9d731322c6998b56b83625f1d4cc9bc4a541a00fd19fa7925c4fa9a17af50ccb"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537849,
            "transactionHash": "0xbab65a8aca87c752dbbb49dd6f61c9ddb46b488f54243dd76b1b3d246ea5873b",
            "address": "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
            ],
            "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d2669586e17fc93773cc637becfa983525501eb",
            "logIndex": 3,
            "blockHash": "0x9d731322c6998b56b83625f1d4cc9bc4a541a00fd19fa7925c4fa9a17af50ccb"
          }
        ],
        "blockNumber": 29537849,
        "cumulativeGasUsed": "5443465",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0x8a53460ea9Cd297B2283085AF8ff675cd9f8FC09",
        "0x9D2669586E17fC93773cc637becfA983525501Eb",
        "0x91353638000000000000000000000000ff970a61a04b1ca14834a43f5de4533ebddb5cc800000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000e8d4a510000000000000000000000000000000000000000000000000000000000000004e20000000000000000000000000e72cf93e7d6cacd66560ac9f2e5d63cdfa8b9fc6000000000000000000000000649813b6dc6111d67484badedd377d32e4505f85000000000000000000000000da8d0386e91b2334b23c043978383a91728a68eb0000000000000000000000000000000000000000000000000000000000000006435649204c50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064356492d4c500000000000000000000000000000000000000000000000000000"
      ],
      "numDeployments": 1,
      "solcInputHash": "0e89febeebc7444140de8e67c9067d2c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x93b4e21c931252739a1ec13ea31d3d35a5c068be3163ccab83e4d70c40355f03\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view virtual returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(Address.isContract(IBeacon(newBeacon).implementation()), \\\"ERC1967: beacon implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17668652127feebed0ce8d9431ef95ccc8c4292f03e3b8cf06c6ca16af396633\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xd5d1fd16e9faff7fcb3a52e02a8d49156f42a38a03f07b5f1810c21c2149a8ab\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3777e696b62134e6177440dbe6e6601c0c156a443f57167194b67e75527439de\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
      "deployedBytecode": "0x60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033",
      "devdoc": {
        "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
        "kind": "dev",
        "methods": {
          "admin()": {
            "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
          },
          "constructor": {
            "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
          },
          "implementation()": {
            "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      },
      "creationBlock": 29537849,
      "history": []
    },
    "CVIUSDCRebaser": {
      "address": "0x31cd9fa35f0A1F6bDDEbe5A6ad5F46b2f0f24E4b",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volatilityToken",
              "type": "address"
            },
            {
              "internalType": "contract IUniswapV2Pair[]",
              "name": "_uniswapPairs",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "checkUpkeep",
          "outputs": [
            {
              "internalType": "bool",
              "name": "upkeepNeeded",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "enableWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lastUpkeepTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "pairs",
          "outputs": [
            {
              "internalType": "contract IUniswapV2Pair",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "performUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rebase",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "rebasers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_enableWhitelist",
              "type": "bool"
            }
          ],
          "name": "setEnableWhitelist",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "name": "setRebaserAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IUniswapV2Pair[]",
              "name": "_uniswapPairs",
              "type": "address[]"
            }
          ],
          "name": "setUniswapPairs",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_upkeepInterval",
              "type": "uint32"
            }
          ],
          "name": "setUpkeepInterval",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_upkeepTimeWindow",
              "type": "uint32"
            }
          ],
          "name": "setUpkeepTimeWindow",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volatilityToken",
              "type": "address"
            }
          ],
          "name": "setVolatilityToken",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "upkeepInterval",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "upkeepTimeWindow",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "volatilityToken",
          "outputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0x42244d10e6820c8763594937a977c303236342306752b20204d91414291b17b3",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x31cd9fa35f0A1F6bDDEbe5A6ad5F46b2f0f24E4b",
        "transactionIndex": 1,
        "gasUsed": "5348876",
        "logsBloom": "0x
        "blockHash": "0xfa5a6729866a13c1db3de4c61c95be2caba3238a9596a63eeed96c69736c2622",
        "transactionHash": "0x42244d10e6820c8763594937a977c303236342306752b20204d91414291b17b3",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 29538664,
            "transactionHash": "0x42244d10e6820c8763594937a977c303236342306752b20204d91414291b17b3",
            "address": "0x31cd9fa35f0A1F6bDDEbe5A6ad5F46b2f0f24E4b",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0xfa5a6729866a13c1db3de4c61c95be2caba3238a9596a63eeed96c69736c2622"
          }
        ],
        "blockNumber": 29538664,
        "cumulativeGasUsed": "5348876",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0x8096aD3107715747361acefE685943bFB427C722",
        [
          "0xeDE0CE8cdc65bcF6422f3Afb9d7cDb3e59C09658"
        ]
      ],
      "numDeployments": 1,
      "solcInputHash": "8d836039a3333aa7ff1a69dee5a5f235",
      "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVolatilityToken\",\"name\":\"_volatilityToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Pair[]\",\"name\":\"_uniswapPairs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpkeepTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairs\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rebasers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enableWhitelist\",\"type\":\"bool\"}],\"name\":\"setEnableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"setRebaserAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniswapV2Pair[]\",\"name\":\"_uniswapPairs\",\"type\":\"address[]\"}],\"name\":\"setUniswapPairs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_upkeepInterval\",\"type\":\"uint32\"}],\"name\":\"setUpkeepInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_upkeepTimeWindow\",\"type\":\"uint32\"}],\"name\":\"setUpkeepTimeWindow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVolatilityToken\",\"name\":\"_volatilityToken\",\"type\":\"address\"}],\"name\":\"setVolatilityToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upkeepInterval\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upkeepTimeWindow\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"volatilityToken\",\"outputs\":[{\"internalType\":\"contract IVolatilityToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/volatility-token/RebaserContracts.sol\":\"CVIUSDCRebaser\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easilly be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xc4a031d4b6e3fa6d40a09bfbf99d3fdd22bbe77ba97065bc790b4cab22adee85\",\"license\":\"MIT\"},\"@coti-cvi/contracts-cvi/contracts/Rebaser.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\nimport \\\"./interfaces/IRebaser.sol\\\";\\n\\ncontract Rebaser is IRebaser, Ownable, KeeperCompatibleInterface {\\n    IVolatilityToken public volatilityToken;\\n    IUniswapV2Pair[] public pairs;\\n\\n    uint256 public lastUpkeepTime;\\n    uint32 public upkeepInterval = 1 days;\\n    uint32 public upkeepTimeWindow = 15 minutes;\\n\\n    bool public enableWhitelist = true;\\n    mapping (address => bool) public rebasers; // whitelist\\n\\n    constructor(IVolatilityToken _volatilityToken, IUniswapV2Pair[] memory _uniswapPairs) {\\n        volatilityToken = _volatilityToken;\\n        pairs = _uniswapPairs;\\n        lastUpkeepTime = (block.timestamp / 1 days) * 1 days; // 12 AM at the day of deployment\\n    }\\n\\n    function rebase() public override {\\n        require(!enableWhitelist || rebasers[msg.sender], \\\"Whitelisted addresses only\\\");\\n        require(address(volatilityToken) != address(0), \\\"Set volatility token\\\");\\n        require(block.timestamp % 1 days <= upkeepTimeWindow, \\\"Bad time window\\\");\\n        volatilityToken.rebaseCVI();\\n        for (uint16 i = 0; i < pairs.length; i++) {\\n            if (address(pairs[i]) != address(0)) {\\n                pairs[i].sync();\\n            }\\n        }\\n    }\\n\\n    function setVolatilityToken(IVolatilityToken _volatilityToken) external override onlyOwner {\\n        volatilityToken = _volatilityToken;\\n    }\\n\\n    function setUniswapPairs(IUniswapV2Pair[] calldata _uniswapPairs) external override onlyOwner {\\n        pairs = _uniswapPairs;\\n    }\\n\\n    function setUpkeepInterval(uint32 _upkeepInterval) external override onlyOwner {\\n        upkeepInterval = _upkeepInterval;\\n    }\\n\\n    function setUpkeepTimeWindow(uint32 _upkeepTimeWindow) external override onlyOwner {\\n        upkeepTimeWindow = _upkeepTimeWindow;\\n    }\\n\\n    function setEnableWhitelist(bool _enableWhitelist) external override onlyOwner {\\n        enableWhitelist = _enableWhitelist;\\n    }\\n\\n    function setRebaserAddress(address user, bool isAllowed) external override onlyOwner {\\n        rebasers[user] = isAllowed;\\n    }\\n\\n    function checkUpkeep(\\n        bytes calldata /* checkData */\\n    ) external view override returns (bool upkeepNeeded, bytes memory performData) {\\n        upkeepNeeded = isUpkeepNeeded();\\n        return (upkeepNeeded, performData);\\n    }\\n\\n    function performUpkeep(\\n        bytes calldata /* performData */\\n    ) external override {\\n        require(!enableWhitelist || rebasers[msg.sender], \\\"Whitelisted addresses only\\\");\\n        require(isUpkeepNeeded(), \\\"Bad time window\\\");\\n        lastUpkeepTime = (block.timestamp / 1 days) * 1 days;\\n        rebase();\\n    }\\n\\n    function isUpkeepNeeded() private view returns (bool) {\\n        return block.timestamp - lastUpkeepTime >= upkeepInterval && block.timestamp % 1 days <= upkeepTimeWindow;\\n    }\\n}\\n\",\"keccak256\":\"0x669177591de4a8a7927daaa9bb6752d783bab9b406c088a361bbdd0dc109268d\",\"license\":\"GPL-3.0-or-later\"},\"@coti-cvi/contracts-cvi/contracts/external/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x9f51a1d68f51a13fd456ba3fb73d6fbff58515f21d88f86f2a56af65a9da43af\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ICVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ICVIOracle {\\n    function getCVIRoundData(uint80 roundId) external view returns (uint32 cviValue, uint256 cviTimestamp);\\n    function getCVILatestRoundData() external view returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp);\\n\\n    function setDeviationCheck(bool newDeviationCheck) external;\\n    function setMaxDeviation(uint16 newMaxDeviation) external;\\n}\\n\",\"keccak256\":\"0xf1871b2e9219f7a11e63d8e3276b7a0a46d8d726d54e385a6326dbdb2bcb1bad\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IThetaVaultInfo.sol\\\";\\n\\ninterface IFeesCalculator {\\n\\n    struct CVIValue {\\n        uint256 period;\\n        uint32 cviValue;\\n    }\\n\\n    struct SnapshotUpdate {\\n        uint256 latestSnapshot;\\n        uint256 singleUnitFundingFee;\\n        uint256 totalTime;\\n        uint256 totalRounds;\\n        uint256 cviValueTimestamp;\\n        uint80 newLatestRoundId;\\n        uint32 cviValue;\\n        bool updatedSnapshot;\\n        bool updatedLatestRoundId;\\n        bool updatedLatestTimestamp;\\n        bool updatedTurbulenceData;\\n    }\\n\\n    function updateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 lastCVIValue, uint32 currCVIValue) external;\\n\\n    function setOracle(ICVIOracle cviOracle) external;\\n    function setThetaVault(IThetaVaultInfo thetaVault) external;\\n\\n    function setStateUpdator(address newUpdator) external;\\n\\n    function setDepositFee(uint16 newDepositFeePercentage) external;\\n    function setWithdrawFee(uint16 newWithdrawFeePercentage) external;\\n    function setOpenPositionFee(uint16 newOpenPositionFeePercentage) external;\\n    function setOpenPositionLPFee(uint16 newOpenPositionLPFeePercent) external;\\n    function setClosePositionLPFee(uint16 newClosePositionLPFeePercent) external;\\n    function setClosePositionFee(uint16 newClosePositionFeePercentage) external;\\n    function setClosePositionMaxFee(uint16 newClosePositionMaxFeePercentage) external;\\n    function setClosePositionFeeDecay(uint256 newClosePositionFeeDecayPeriod) external;\\n    \\n    function setOracleHeartbeatPeriod(uint256 newOracleHeartbeatPeriod) external;\\n    function setBuyingPremiumFeeMax(uint16 newBuyingPremiumFeeMaxPercentage) external;\\n    function setBuyingPremiumThreshold(uint16 newBuyingPremiumThreshold) external;\\n    function setClosingPremiumFeeMax(uint16 newClosingPremiumFeeMaxPercentage) external;\\n    function setCollateralToBuyingPremiumMapping(uint16[] calldata newCollateralToBuyingPremiumMapping) external;\\n    function setFundingFeeConstantRate(uint16 newfundingFeeConstantRate) external;\\n    function setCollateralToExtraFundingFeeMapping(uint32[] calldata newCollateralToExtraFundingFeeMapping) external;\\n    function setTurbulenceStep(uint16 newTurbulenceStepPercentage) external;\\n    function setMaxTurbulenceFeePercentToTrim(uint16 newMaxTurbulenceFeePercentToTrim) external;\\n    function setTurbulenceDeviationThresholdPercent(uint16 newTurbulenceDeviationThresholdPercent) external;\\n    function setTurbulenceDeviationPercent(uint16 newTurbulenceDeviationPercentage) external;\\n\\n    function calculateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 _lastCVIValue, uint32 _currCVIValue) external view returns (uint16);\\n\\n    function calculateBuyingPremiumFee(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n    function calculateBuyingPremiumFeeWithAddendum(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits, uint16 _turbulenceIndicatorPercent) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n\\n    function calculateClosingPremiumFee() external view returns (uint16 combinedPremiumFeePercentage);\\n\\n    function calculateSingleUnitFundingFee(CVIValue[] memory cviValues, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 fundingFee);\\n    function calculateSingleUnitPeriodFundingFee(CVIValue memory cviValue, uint256 collateralRatio) external view returns (uint256 fundingFee, uint256 fundingFeeRatePercents);\\n    function updateSnapshots(uint256 latestTimestamp, uint256 blockTimestampSnapshot, uint256 latestTimestampSnapshot, uint80 latestOracleRoundId, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (SnapshotUpdate memory snapshotUpdate);\\n\\n    function calculateClosePositionFeePercent(uint256 creationTimestamp, bool isNoLockPositionAddress) external view returns (uint16);\\n    function calculateWithdrawFeePercent(uint256 lastDepositTimestamp) external view returns (uint16);\\n\\n    function calculateCollateralRatio(uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 collateralRatio);\\n\\n    function depositFeePercent() external view returns (uint16);\\n    function withdrawFeePercent() external view returns (uint16);\\n    function openPositionFeePercent() external view returns (uint16);\\n    function closePositionFeePercent() external view returns (uint16);\\n    function openPositionLPFeePercent() external view returns (uint16);\\n    function closePositionLPFeePercent() external view returns (uint16);\\n\\n    function openPositionFees() external view returns (uint16 openPositionFeePercentResult, uint16 buyingPremiumFeeMaxPercentResult);\\n\\n    function turbulenceIndicatorPercent() external view returns (uint16);\\n    function oracleLeverage() external view returns (uint8);\\n\\n    function getCollateralToBuyingPremiumMapping() external view returns(uint16[] memory);\\n    function getCollateralToExtraFundingFeeMapping() external view returns(uint32[] memory);\\n}\\n\",\"keccak256\":\"0xfba7d565b0a7d83dbe5d1abb0bf35897145a96d28e35b0b91864e321606c5734\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IFeesCollector {\\n    function sendProfit(uint256 amount, IERC20 token) external;\\n}\\n\",\"keccak256\":\"0xb16b7c5d985657716ccacf0f1e61de587c06fe4f6591bee6fafc0a3658229b4c\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ILiquidation.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ILiquidation {\\t\\n\\tfunction setMinLiquidationThresholdPercents(uint16[8] calldata newMinThresholdPercents) external;\\n\\tfunction setMinLiquidationRewardPercent(uint16 newMinRewardPercent) external;\\n\\tfunction setMaxLiquidationRewardPercents(uint16[8] calldata newMaxRewardPercents) external;\\n\\tfunction isLiquidationCandidate(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (bool);\\n\\tfunction getLiquidationReward(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (uint256 finderFeeAmount);\\n}\\n\",\"keccak256\":\"0x0799656b324ed8d65391313156e1dfe7d99b6dadb08e71cd6a515d19731539bd\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IPlatform.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IFeesCalculator.sol\\\";\\nimport \\\"./IRewardsCollector.sol\\\";\\nimport \\\"./IFeesCollector.sol\\\";\\nimport \\\"./ILiquidation.sol\\\";\\n\\ninterface IPlatform {\\n\\n    struct Position {\\n        uint168 positionUnitsAmount;\\n        uint8 leverage;\\n        uint32 openCVIValue;\\n        uint32 creationTimestamp;\\n        uint32 originalCreationTimestamp;\\n    }\\n\\n    event Deposit(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event Withdraw(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event OpenPosition(address indexed account, uint256 tokenAmount, uint8 leverage, uint256 feeAmount, uint256 positionUnitsAmount, uint256 cviValue);\\n    event ClosePosition(address indexed account, uint256 tokenAmount, uint256 feeAmount, uint256 positionUnitsAmount, uint8 leverage, uint256 cviValue);\\n    event LiquidatePosition(address indexed positionAddress, uint256 currentPositionBalance, bool isBalancePositive, uint256 positionUnitsAmount);\\n\\n    function deposit(uint256 tokenAmount, uint256 minLPTokenAmount) external returns (uint256 lpTokenAmount);\\n    function withdraw(uint256 tokenAmount, uint256 maxLPTokenBurnAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n    function withdrawLPTokens(uint256 lpTokenAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n\\n    function increaseSharedPool(uint256 tokenAmount) external;\\n\\n    function openPositionWithoutFee(uint168 tokenAmount, uint32 maxCVI, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function openPosition(uint168 tokenAmount, uint32 maxCVI, uint16 maxBuyingPremiumFeePercentage, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function closePositionWithoutFee(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n    function closePosition(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function liquidatePositions(address[] calldata positionOwners) external returns (uint256 finderFeeAmount);\\n\\n    function setAddressSpecificParameters(address holderAddress, bool shouldLockPosition, bool noPremiumFeeAllowed, bool increaseSharedPoolAllowed, bool isLiquidityProvider) external;\\n\\n    function setRevertLockedTransfers(bool revertLockedTransfers) external;\\n\\n    function setSubContracts(IFeesCollector newCollector, ICVIOracle newOracle, IRewardsCollector newRewards, ILiquidation newLiquidation, address _newStakingContractAddress) external;\\n    function setFeesCalculator(IFeesCalculator newCalculator) external;\\n\\n    function setLatestOracleRoundId(uint80 newOracleRoundId) external;\\n    function setMaxTimeAllowedAfterLatestRound(uint32 newMaxTimeAllowedAfterLatestRound) external;\\n\\n    function setLockupPeriods(uint256 newLPLockupPeriod, uint256 newBuyersLockupPeriod) external;\\n\\n    function setEmergencyParameters(bool newEmergencyWithdrawAllowed, bool newCanPurgeSnapshots) external;\\n\\n    function setMaxAllowedLeverage(uint8 newMaxAllowedLeverage) external;\\n\\n    function calculatePositionBalance(address positionAddress) external view returns (uint256 currentPositionBalance, bool isPositive, uint168 positionUnitsAmount, uint8 leverage, uint256 fundingFees, uint256 marginDebt);\\n    function calculatePositionPendingFees(address positionAddress, uint168 positionUnitsAmount) external view returns (uint256 pendingFees);\\n\\n    function totalBalance(bool _withAddendum) external view returns (uint256 balance);\\n\\n    function calculateLatestTurbulenceIndicatorPercent() external view returns (uint16);\\n\\n    function cviOracle() external view returns (ICVIOracle);\\n    function feesCalculator() external view returns (IFeesCalculator);\\n\\n    function PRECISION_DECIMALS() external view returns (uint256);\\n\\n    function totalPositionUnitsAmount() external view returns (uint256);\\n    function totalLeveragedTokensAmount() external view returns (uint256);\\n    function totalFundingFeesAmount() external view returns (uint256);\\n    function latestFundingFees() external view returns (uint256);\\n\\n    function positions(address positionAddress) external view returns (uint168 positionUnitsAmount, uint8 leverage, uint32 openCVIValue, uint32 creationTimestamp, uint32 originalCreationTimestamp);\\n    function buyersLockupPeriod() external view returns (uint256);\\n    function maxCVIValue() external view returns (uint32);\\n}\\n\",\"keccak256\":\"0x11f55f686514975c2dd5adf87856f8df5f85b015621f01e1528addb6b7194686\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRebaser.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"../external/IUniswapV2Pair.sol\\\";\\nimport \\\"./IVolatilityToken.sol\\\";\\n\\ninterface IRebaser {\\n    function rebase() external;\\n    function setVolatilityToken(IVolatilityToken volatilityToken) external;\\n    function setUniswapPairs(IUniswapV2Pair[] calldata uniswapPairs) external;\\n    function setRebaserAddress(address user, bool isAllowed) external;\\n    function setUpkeepInterval(uint32 upkeepInterval) external;\\n    function setUpkeepTimeWindow(uint32 upkeepTimeWindow) external;\\n    function setEnableWhitelist(bool enableWhitelist) external;\\n}\\n\",\"keccak256\":\"0x9b5b6b3f4a8d739810758d2718446bbd75ce73729237d11dbe9d669c99fe4998\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IVolatilityToken.sol\\\";\\n\\ninterface IRequestFeesCalculator {\\n    function calculateTimePenaltyFee(IVolatilityToken.Request calldata request) external view returns (uint16 feePercentage);\\n    function calculateTimeDelayFee(uint256 timeDelay) external view returns (uint16 feePercentage);\\n    function calculateFindersFee(uint256 tokensLeftAmount) external view returns (uint256 findersFeeAmount);\\n    function calculateKeepersFee(uint256 tokensAmount) external view returns (uint256 keepersFeeAmount);\\n\\n    function isLiquidable(IVolatilityToken.Request calldata request) external view returns (bool liquidable);\\n\\n    function minWaitTime() external view returns (uint32);\\n\\n    function setTimeWindow(uint32 minTimeWindow, uint32 maxTimeWindow) external;\\n    function setTimeDelayFeesParameters(uint16 minTimeDelayFeePercent, uint16 maxTimeDelayFeePercent) external;\\n    function setMinWaitTime(uint32 newMinWaitTime) external;\\n    function setTimePenaltyFeeParameters(uint16 beforeTargetTimeMaxPenaltyFeePercent, uint32 afterTargetMidTime, uint16 afterTargetMidTimePenaltyFeePercent, uint32 afterTargetMaxTime, uint16 afterTargetMaxTimePenaltyFeePercent) external;\\n    function setFindersFee(uint16 findersFeePercent) external;\\n    function setKeepersFeePercent(uint16 keepersFeePercent) external;\\n    function setKeepersFeeMax(uint256 keepersFeeMax) external;\\n\\n    function getMaxFees() external view returns (uint16 maxFeesPercent);\\n}\\n\",\"keccak256\":\"0xb516083aa9063482c61c12f38b960f017205f2611358dcab31c1197208841611\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRewardsCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IRewardsCollector {\\n\\tfunction reward(address account, uint256 positionUnits, uint8 leverage) external;\\n}\\n\",\"keccak256\":\"0xaae3f1399202cccfb2e7302f69868a1f9adfbc53c968668e79201692c5724ca5\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVaultInfo.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IThetaVaultInfo {\\n    function totalVaultLeveragedAmount() external view returns (uint256);\\n    function vaultPositionUnits() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8077ab6dec8937112a2e2567d9b524a10ba640b7891c4bb40729bfbb648c0c1e\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IVolatilityToken.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IPlatform.sol\\\";\\nimport \\\"./IRequestFeesCalculator.sol\\\";\\nimport \\\"./ICVIOracle.sol\\\";\\n\\ninterface IVolatilityToken {\\n\\n    struct Request {\\n        uint8 requestType; // 1 => mint, 2 => burn\\n        uint168 tokenAmount;\\n        uint16 timeDelayRequestFeesPercent;\\n        uint16 maxRequestFeesPercent;\\n        address owner;\\n        uint32 requestTimestamp;\\n        uint32 targetTimestamp;\\n        bool useKeepers;\\n        uint16 maxBuyingPremiumFeePercentage;\\n    }\\n\\n    event SubmitRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 tokenAmount, uint256 submitFeesAmount, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n    event FulfillRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 fulfillFeesAmount, bool isAborted, bool useKeepers, bool keepersCalled, address indexed fulfiller, uint32 fulfillTimestamp);\\n    event LiquidateRequest(uint256 requestId, uint8 requestType, address indexed account, address indexed liquidator, uint256 findersFeeAmount, bool useKeepers, uint32 liquidateTimestamp);\\n    event Mint(uint256 requestId, address indexed account, uint256 tokenAmount, uint256 positionedTokenAmount, uint256 mintedTokens, uint256 openPositionFee, uint256 buyingPremiumFee);\\n    event Burn(uint256 requestId, address indexed account, uint256 tokenAmountBeforeFees, uint256 tokenAmount, uint256 burnedTokens, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function rebaseCVI() external;\\n\\n    function submitMintRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersMintRequest(uint168 tokenAmount, uint32 timeDelay, uint16 maxBuyingPremiumFeePercentage) external returns (uint256 requestId);\\n    function submitBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n\\n    function fulfillMintRequest(uint256 requestId, uint16 maxBuyingPremiumFeePercentage, bool keepersCalled) external returns (uint256 tokensMinted, bool success);\\n    function fulfillBurnRequest(uint256 requestId, bool keepersCalled) external returns (uint256 tokensBurned);\\n\\n    function mintTokens(uint168 tokenAmount) external returns (uint256 mintedTokens);\\n    function burnTokens(uint168 burnAmount) external returns (uint256 tokenAmount);\\n\\n    function liquidateRequest(uint256 requestId) external returns (uint256 findersFeeAmount);\\n\\n    function setMinter(address minter) external;\\n    function setPlatform(IPlatform newPlatform) external;\\n    function setFeesCalculator(IFeesCalculator newFeesCalculator) external;\\n    function setFeesCollector(IFeesCollector newCollector) external;\\n    function setRequestFeesCalculator(IRequestFeesCalculator newRequestFeesCalculator) external;\\n    function setCVIOracle(ICVIOracle newCVIOracle) external;\\n    function setDeviationParameters(uint16 newDeviationPercentagePerSingleRebaseLag, uint16 newMinDeviationPercentage, uint16 newMaxDeviationPercentage) external;\\n    function setVerifyTotalRequestsAmount(bool verifyTotalRequestsAmount) external;\\n    function setMaxTotalRequestsAmount(uint256 maxTotalRequestsAmount) external;\\n    function setCappedRebase(bool newCappedRebase) external;\\n\\n    function setMinRequestId(uint256 newMinRequestId) external;\\n    function setMaxMinRequestIncrements(uint256 newMaxMinRequestIncrements) external;\\n\\n    function setFulfiller(address fulfiller) external;\\n\\n    function setKeepersFeeVaultAddress(address newKeepersFeeVaultAddress) external;\\n\\n    function setMinKeepersAmounts(uint256 newMinKeepersMintAmount, uint256 newMinKeepersBurnAmount) external;\\n\\n    function platform() external view returns (IPlatform);\\n    function requestFeesCalculator() external view returns (IRequestFeesCalculator);\\n    function leverage() external view returns (uint8);\\n    function initialTokenToLPTokenRate() external view returns (uint256);\\n\\n    function requests(uint256 requestId) external view returns (uint8 requestType, uint168 tokenAmount, uint16 timeDelayRequestFeesPercent, uint16 maxRequestFeesPercent,\\n        address owner, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n}\\n\",\"keccak256\":\"0x9b195f997265f6401224845c81cba2a3ac6f2e4f2bf65d8be5027ac1ee3fa5b4\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/volatility-token/RebaserContracts.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport '@coti-cvi/contracts-cvi/contracts/Rebaser.sol';\\n\\ncontract CVIUSDCRebaser is Rebaser {\\n  constructor(IVolatilityToken _volatilityToken, IUniswapV2Pair[] memory _uniswapPairs)\\n    Rebaser(_volatilityToken, _uniswapPairs)\\n  {}\\n}\\n\\ncontract CVIUSDCRebaser2X is Rebaser {\\n  constructor(IVolatilityToken _volatilityToken, IUniswapV2Pair[] memory _uniswapPairs)\\n    Rebaser(_volatilityToken, _uniswapPairs)\\n  {}\\n}\",\"keccak256\":\"0x37bb0fb19ffb75280cd9f6e12f2a4da58a736691aafe8edcb79f8d69253fc18f\",\"license\":\"GPL-3.0\"}},\"version\":1}",
      "bytecode": "",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806398dfadab116100ad578063d338680911610071578063d338680914610274578063e2dbc0e71461028b578063f2fde38b146102a3578063f372b42a146102b6578063fc3db54e146102c957600080fd5b806398dfadab146101ff578063abd5b18114610212578063af14052c14610245578063b91ac7881461024d578063cdfb2b4e1461026057600080fd5b806378f9ccf2116100f457806378f9ccf21461018e578063817d6ae2146101a157806386a2b61e146101b45780638da5cb5b146101c757806395064101146101ec57600080fd5b80634585e33b146101265780635a74373c1461013b5780636e04ff0d14610165578063715018a614610186575b600080fd5b610139610134366004610b1b565b6102dc565b005b60045461014b9063ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b610178610173366004610b1b565b6103c4565b60405161015c929190610bb2565b6101396103d9565b61013961019c366004610b01565b61040f565b6101396101af366004610a5d565b61045c565b6101396101c2366004610b8e565b6104b1565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161015c565b6001546101d4906001600160a01b031681565b61013961020d366004610a91565b6104f7565b610235610220366004610a3a565b60056020526000908152604090205460ff1681565b604051901515815260200161015c565b610139610532565b6101d461025b366004610b76565b6107b4565b60045461023590600160401b900460ff1681565b61027d60035481565b60405190815260200161015c565b60045461014b90640100000000900463ffffffff1681565b6101396102b1366004610a3a565b6107de565b6101396102c4366004610a3a565b610876565b6101396102d7366004610b8e565b6108c2565b600454600160401b900460ff16158061030457503360009081526005602052604090205460ff165b6103555760405162461bcd60e51b815260206004820152601a60248201527f57686974656c697374656420616464726573736573206f6e6c7900000000000060448201526064015b60405180910390fd5b61035d610914565b61039b5760405162461bcd60e51b815260206004820152600f60248201526e4261642074696d652077696e646f7760881b604482015260640161034c565b6103a86201518042610c44565b6103b59062015180610c58565b6003556103c0610532565b5050565b600060606103d0610914565b91509250929050565b6000546001600160a01b031633146104035760405162461bcd60e51b815260040161034c90610c0f565b61040d600061095d565b565b6000546001600160a01b031633146104395760405162461bcd60e51b815260040161034c90610c0f565b60048054911515600160401b0268ff000000000000000019909216919091179055565b6000546001600160a01b031633146104865760405162461bcd60e51b815260040161034c90610c0f565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b6000546001600160a01b031633146104db5760405162461bcd60e51b815260040161034c90610c0f565b6004805463ffffffff191663ffffffff92909216919091179055565b6000546001600160a01b031633146105215760405162461bcd60e51b815260040161034c90610c0f565b61052d600283836109ad565b505050565b600454600160401b900460ff16158061055a57503360009081526005602052604090205460ff165b6105a65760405162461bcd60e51b815260206004820152601a60248201527f57686974656c697374656420616464726573736573206f6e6c79000000000000604482015260640161034c565b6001546001600160a01b03166105f55760405162461bcd60e51b815260206004820152601460248201527329b2ba103b37b630ba34b634ba3c903a37b5b2b760611b604482015260640161034c565b600454640100000000900463ffffffff166106136201518042610cb0565b11156106535760405162461bcd60e51b815260206004820152600f60248201526e4261642074696d652077696e646f7760881b604482015260640161034c565b600160009054906101000a90046001600160a01b03166001600160a01b031663cf6caff36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b5050505060005b60025461ffff821610156107b15760006001600160a01b031660028261ffff16815481106106fc57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161461079f5760028161ffff168154811061073b57634e487b7160e01b600052603260045260246000fd5b60009182526020822001546040805160016209351760e01b0319815290516001600160a01b039092169263fff6cae99260048084019382900301818387803b15801561078657600080fd5b505af115801561079a573d6000803e3d6000fd5b505050505b806107a981610c8e565b9150506106be565b50565b600281815481106107c457600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146108085760405162461bcd60e51b815260040161034c90610c0f565b6001600160a01b03811661086d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034c565b6107b18161095d565b6000546001600160a01b031633146108a05760405162461bcd60e51b815260040161034c90610c0f565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146108ec5760405162461bcd60e51b815260040161034c90610c0f565b6004805463ffffffff9092166401000000000267ffffffff0000000019909216919091179055565b60045460035460009163ffffffff169061092e9042610c77565b101580156109585750600454640100000000900463ffffffff166109556201518042610cb0565b11155b905090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610a00579160200282015b82811115610a005781546001600160a01b0319166001600160a01b038435161782556020909201916001909101906109cd565b50610a0c929150610a10565b5090565b5b80821115610a0c5760008155600101610a11565b80358015158114610a3557600080fd5b919050565b600060208284031215610a4b578081fd5b8135610a5681610cf0565b9392505050565b60008060408385031215610a6f578081fd5b8235610a7a81610cf0565b9150610a8860208401610a25565b90509250929050565b60008060208385031215610aa3578182fd5b823567ffffffffffffffff80821115610aba578384fd5b818501915085601f830112610acd578384fd5b813581811115610adb578485fd5b8660208260051b8501011115610aef578485fd5b60209290920196919550909350505050565b600060208284031215610b12578081fd5b610a5682610a25565b60008060208385031215610b2d578182fd5b823567ffffffffffffffff80821115610b44578384fd5b818501915085601f830112610b57578384fd5b813581811115610b65578485fd5b866020828501011115610aef578485fd5b600060208284031215610b87578081fd5b5035919050565b600060208284031215610b9f578081fd5b813563ffffffff81168114610a56578182fd5b8215158152600060206040818401528351806040850152825b81811015610be757858101830151858201606001528201610bcb565b81811115610bf85783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082610c5357610c53610cda565b500490565b6000816000190483118215151615610c7257610c72610cc4565b500290565b600082821015610c8957610c89610cc4565b500390565b600061ffff80831681811415610ca657610ca6610cc4565b6001019392505050565b600082610cbf57610cbf610cda565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b03811681146107b157600080fdfea2646970667358221220a1901c3ee64357285274f055bc718b9ea3a90e48cb35bf10bff48eddf76837ca64736f6c63430008040033",
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 37156,
            "contract": "contracts/volatility-token/RebaserContracts.sol:CVIUSDCRebaser",
            "label": "_owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 8685,
            "contract": "contracts/volatility-token/RebaserContracts.sol:CVIUSDCRebaser",
            "label": "volatilityToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IVolatilityToken)18697"
          },
          {
            "astId": 8689,
            "contract": "contracts/volatility-token/RebaserContracts.sol:CVIUSDCRebaser",
            "label": "pairs",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_contract(IUniswapV2Pair)15721)dyn_storage"
          },
          {
            "astId": 8691,
            "contract": "contracts/volatility-token/RebaserContracts.sol:CVIUSDCRebaser",
            "label": "lastUpkeepTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 8694,
            "contract": "contracts/volatility-token/RebaserContracts.sol:CVIUSDCRebaser",
            "label": "upkeepInterval",
            "offset": 0,
            "slot": "4",
            "type": "t_uint32"
          },
          {
            "astId": 8697,
            "contract": "contracts/volatility-token/RebaserContracts.sol:CVIUSDCRebaser",
            "label": "upkeepTimeWindow",
            "offset": 4,
            "slot": "4",
            "type": "t_uint32"
          },
          {
            "astId": 8700,
            "contract": "contracts/volatility-token/RebaserContracts.sol:CVIUSDCRebaser",
            "label": "enableWhitelist",
            "offset": 8,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 8704,
            "contract": "contracts/volatility-token/RebaserContracts.sol:CVIUSDCRebaser",
            "label": "rebasers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_contract(IUniswapV2Pair)15721)dyn_storage": {
            "base": "t_contract(IUniswapV2Pair)15721",
            "encoding": "dynamic_array",
            "label": "contract IUniswapV2Pair[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IUniswapV2Pair)15721": {
            "encoding": "inplace",
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IVolatilityToken)18697": {
            "encoding": "inplace",
            "label": "contract IVolatilityToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "encoding": "inplace",
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      },
      "creationBlock": 29538664,
      "history": [
        {
          "blockNumber": 28314612,
          "address": "0x4752f214eeDa6242181ec3a8D69F97e61EA2AA68"
        },
        {
          "blockNumber": 27434105,
          "address": "0xeaEAAb8775C36dd2d4Fa7A8907E9fdf81A6445F4"
        },
        {
          "blockNumber": 21240476,
          "address": "0x282f2EBd973a893C5C10670e2EC6b5aA0f81988A"
        }
      ]
    },
    "CVIUSDCRequestFeesCalculator": {
      "address": "0x44d8998FCB1f50d0C5463582d7ce9a4C27BA5671",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "MAX_FEE_PERCENTAGE",
          "outputs": [
            {
              "internalType": "uint168",
              "name": "",
              "type": "uint168"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "afterTargetMaxTime",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "afterTargetMaxTimePenaltyFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "afterTargetMidTime",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "afterTargetMidTimePenaltyFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "beforeTargetTimeMaxPenaltyFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokensLeftAmount",
              "type": "uint256"
            }
          ],
          "name": "calculateFindersFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "findersFeeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokensAmount",
              "type": "uint256"
            }
          ],
          "name": "calculateKeepersFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "keepersFeeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_timeDelay",
              "type": "uint256"
            }
          ],
          "name": "calculateTimeDelayFee",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "feePercentage",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "requestType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint168",
                  "name": "tokenAmount",
                  "type": "uint168"
                },
                {
                  "internalType": "uint16",
                  "name": "timeDelayRequestFeesPercent",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "maxRequestFeesPercent",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "requestTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "targetTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "useKeepers",
                  "type": "bool"
                },
                {
                  "internalType": "uint16",
                  "name": "maxBuyingPremiumFeePercentage",
                  "type": "uint16"
                }
              ],
              "internalType": "struct IVolatilityToken.Request",
              "name": "_request",
              "type": "tuple"
            }
          ],
          "name": "calculateTimePenaltyFee",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "feePercentage",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "findersFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getMaxFees",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "maxFeesPercent",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "requestType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint168",
                  "name": "tokenAmount",
                  "type": "uint168"
                },
                {
                  "internalType": "uint16",
                  "name": "timeDelayRequestFeesPercent",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "maxRequestFeesPercent",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "requestTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "targetTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "useKeepers",
                  "type": "bool"
                },
                {
                  "internalType": "uint16",
                  "name": "maxBuyingPremiumFeePercentage",
                  "type": "uint16"
                }
              ],
              "internalType": "struct IVolatilityToken.Request",
              "name": "_request",
              "type": "tuple"
            }
          ],
          "name": "isLiquidable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "liquidable",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "keepersFeeMax",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "keepersFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxTimeDelayFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxTimeWindow",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minTimeDelayFeePercent",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minTimeWindow",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minWaitTime",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_findersFeePercent",
              "type": "uint16"
            }
          ],
          "name": "setFindersFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_keepersFeeMax",
              "type": "uint256"
            }
          ],
          "name": "setKeepersFeeMax",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_keepersFeePercent",
              "type": "uint16"
            }
          ],
          "name": "setKeepersFeePercent",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_minWaitTime",
              "type": "uint32"
            }
          ],
          "name": "setMinWaitTime",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_minTimeDelayFeePercent",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_maxTimeDelayFeePercent",
              "type": "uint16"
            }
          ],
          "name": "setTimeDelayFeesParameters",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_beforeTargetTimeMaxPenaltyFeePercent",
              "type": "uint16"
            },
            {
              "internalType": "uint32",
              "name": "_afterTargetMidTime",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "_afterTargetMidTimePenaltyFeePercent",
              "type": "uint16"
            },
            {
              "internalType": "uint32",
              "name": "_afterTargetMaxTime",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "_afterTargetMaxTimePenaltyFeePercent",
              "type": "uint16"
            }
          ],
          "name": "setTimePenaltyFeeParameters",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_minTimeWindow",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_maxTimeWindow",
              "type": "uint32"
            }
          ],
          "name": "setTimeWindow",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "transactionHash": "0x32e102cdfcd984aa3780959ab3305529e1038650d5405cbfe7fb11586cb42f71",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x44d8998FCB1f50d0C5463582d7ce9a4C27BA5671",
        "transactionIndex": 1,
        "gasUsed": "5896959",
        "logsBloom": "0x
        "blockHash": "0x541bae728d0e1c87742d9e49a5f71b0276adc48288fdb8930521b01d62b7880a",
        "transactionHash": "0x32e102cdfcd984aa3780959ab3305529e1038650d5405cbfe7fb11586cb42f71",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 29537970,
            "transactionHash": "0x32e102cdfcd984aa3780959ab3305529e1038650d5405cbfe7fb11586cb42f71",
            "address": "0x44d8998FCB1f50d0C5463582d7ce9a4C27BA5671",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x541bae728d0e1c87742d9e49a5f71b0276adc48288fdb8930521b01d62b7880a"
          }
        ],
        "blockNumber": 29537970,
        "cumulativeGasUsed": "5896959",
        "status": 1,
        "byzantium": true
      },
      "args": [],
      "numDeployments": 1,
      "solcInputHash": "8d836039a3333aa7ff1a69dee5a5f235",
      "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint168\",\"name\":\"\",\"type\":\"uint168\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"afterTargetMaxTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"afterTargetMaxTimePenaltyFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"afterTargetMidTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"afterTargetMidTimePenaltyFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beforeTargetTimeMaxPenaltyFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensLeftAmount\",\"type\":\"uint256\"}],\"name\":\"calculateFindersFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"findersFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensAmount\",\"type\":\"uint256\"}],\"name\":\"calculateKeepersFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"keepersFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeDelay\",\"type\":\"uint256\"}],\"name\":\"calculateTimeDelayFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"feePercentage\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"internalType\":\"uint168\",\"name\":\"tokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint16\",\"name\":\"timeDelayRequestFeesPercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxRequestFeesPercent\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"requestTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"targetTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"useKeepers\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"maxBuyingPremiumFeePercentage\",\"type\":\"uint16\"}],\"internalType\":\"struct IVolatilityToken.Request\",\"name\":\"_request\",\"type\":\"tuple\"}],\"name\":\"calculateTimePenaltyFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"feePercentage\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"findersFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxFees\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"maxFeesPercent\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"internalType\":\"uint168\",\"name\":\"tokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint16\",\"name\":\"timeDelayRequestFeesPercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxRequestFeesPercent\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"requestTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"targetTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"useKeepers\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"maxBuyingPremiumFeePercentage\",\"type\":\"uint16\"}],\"internalType\":\"struct IVolatilityToken.Request\",\"name\":\"_request\",\"type\":\"tuple\"}],\"name\":\"isLiquidable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"liquidable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keepersFeeMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keepersFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTimeDelayFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTimeWindow\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTimeDelayFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTimeWindow\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWaitTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_findersFeePercent\",\"type\":\"uint16\"}],\"name\":\"setFindersFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_keepersFeeMax\",\"type\":\"uint256\"}],\"name\":\"setKeepersFeeMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_keepersFeePercent\",\"type\":\"uint16\"}],\"name\":\"setKeepersFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_minWaitTime\",\"type\":\"uint32\"}],\"name\":\"setMinWaitTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_minTimeDelayFeePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_maxTimeDelayFeePercent\",\"type\":\"uint16\"}],\"name\":\"setTimeDelayFeesParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_beforeTargetTimeMaxPenaltyFeePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_afterTargetMidTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_afterTargetMidTimePenaltyFeePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_afterTargetMaxTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_afterTargetMaxTimePenaltyFeePercent\",\"type\":\"uint16\"}],\"name\":\"setTimePenaltyFeeParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_minTimeWindow\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_maxTimeWindow\",\"type\":\"uint32\"}],\"name\":\"setTimeWindow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/volatility-token/RequestFeesCalculatorContracts.sol\":\"CVIUSDCRequestFeesCalculator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@coti-cvi/contracts-cvi/contracts/RequestFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./interfaces/IRequestFeesCalculator.sol\\\";\\n\\ncontract RequestFeesCalculator is IRequestFeesCalculator, Ownable {\\n\\n\\tuint168 public constant MAX_FEE_PERCENTAGE = 10000;\\n\\n\\tuint32 public minTimeWindow = 1 hours;\\n\\tuint32 public maxTimeWindow = 3 hours;\\n\\n\\tuint16 public minTimeDelayFeePercent = 0;\\n\\tuint16 public maxTimeDelayFeePercent = 100;\\n\\n\\tuint32 public override minWaitTime = 15 minutes;\\n\\n\\tuint16 public beforeTargetTimeMaxPenaltyFeePercent = 300;\\n\\tuint16 public afterTargetMidTimePenaltyFeePercent = 300;\\n\\tuint16 public afterTargetMaxTimePenaltyFeePercent = 500;\\n\\n\\tuint16 public findersFeePercent = 5000;\\n\\n    uint16 public keepersFeePercent = 100;\\n    uint256 public keepersFeeMax = 4e6;\\n\\n\\tuint32 public afterTargetMidTime = 1 hours;\\n\\tuint32 public afterTargetMaxTime = 12 hours;\\n\\n\\tfunction calculateTimePenaltyFee(IVolatilityToken.Request calldata _request) external view override returns (uint16 feePercentage) {\\n\\t\\tfeePercentage = afterTargetMaxTimePenaltyFeePercent;\\n\\n\\t\\tif (block.timestamp < _request.targetTimestamp) {\\n\\t\\t\\t// Linear decreasing between beforeTargetTimeMaxPenaltyFeePercent and 0\\n            require(block.timestamp >= _request.requestTimestamp + minWaitTime, \\\"Min wait time not over\\\");\\n\\t\\t\\tfeePercentage = uint16((_request.targetTimestamp - block.timestamp) * beforeTargetTimeMaxPenaltyFeePercent / (_request.targetTimestamp - _request.requestTimestamp - minWaitTime));\\n\\t\\t} else if (block.timestamp < _request.targetTimestamp + afterTargetMidTime) {\\n\\t\\t\\t// Linear increasing between 0 and afterTargetMidTimePenaltyFeePercent\\n\\t\\t\\tfeePercentage = uint16((block.timestamp - _request.targetTimestamp) * afterTargetMidTimePenaltyFeePercent / afterTargetMidTime);\\n\\t\\t} else if (block.timestamp < _request.targetTimestamp + afterTargetMaxTime) {\\n\\t\\t\\t// Between afterTargetMidTimePenaltyFeePercent and afterTargetMaxTimePenaltyFeePercent\\n\\t\\t\\tfeePercentage = uint16(((block.timestamp - _request.targetTimestamp - afterTargetMidTime) * (afterTargetMaxTimePenaltyFeePercent - afterTargetMidTimePenaltyFeePercent) / \\n                (afterTargetMaxTime - afterTargetMidTime)) + afterTargetMidTimePenaltyFeePercent);\\n\\t\\t}\\n\\t}\\n\\n    function calculateTimeDelayFee(uint256 _timeDelay) external view override returns (uint16 feePercentage) {\\n    \\trequire(_timeDelay >= minTimeWindow, \\\"Time delay too small\\\");\\n    \\trequire(_timeDelay <= maxTimeWindow, \\\"Time delay too big\\\");\\n\\n        // Can convert to uint16 as result will mathematically never be larger, due to _timeDelay range verifications\\n    \\tfeePercentage = uint16(maxTimeDelayFeePercent - (_timeDelay - minTimeWindow) * (maxTimeDelayFeePercent - minTimeDelayFeePercent) / (maxTimeWindow - minTimeWindow));\\n    }\\n\\n    function calculateFindersFee(uint256 _tokensLeftAmount) external view override returns (uint256 findersFeeAmount) {\\n    \\treturn _tokensLeftAmount * findersFeePercent / MAX_FEE_PERCENTAGE;\\n    }\\n\\n    function calculateKeepersFee(uint256 _tokensAmount) external view override returns (uint256 keepersFeeAmount) {\\n        uint256 percentageAmount =  _tokensAmount * keepersFeePercent / MAX_FEE_PERCENTAGE;\\n\\n        if (percentageAmount >= keepersFeeMax) {\\n            return keepersFeeMax;\\n        }\\n\\n        return percentageAmount;\\n    }\\n\\n    function isLiquidable(IVolatilityToken.Request calldata _request) external view override returns (bool liquidable) {\\n    \\tif (block.timestamp > _request.targetTimestamp + afterTargetMaxTime) {\\n    \\t\\treturn true;\\n    \\t}\\n\\n    \\treturn false;\\n    }\\n\\n    function setTimeWindow(uint32 _minTimeWindow, uint32 _maxTimeWindow) external override onlyOwner {\\n    \\trequire(_minTimeWindow <= _maxTimeWindow, \\\"Max is less than min\\\");\\n\\n    \\tminTimeWindow = _minTimeWindow;\\n    \\tmaxTimeWindow = _maxTimeWindow;\\n    }\\n\\n    function setTimeDelayFeesParameters(uint16 _minTimeDelayFeePercent, uint16 _maxTimeDelayFeePercent) external override onlyOwner {\\n    \\trequire(_minTimeDelayFeePercent <= MAX_FEE_PERCENTAGE, \\\"Min fee larger than max fee\\\");\\n    \\trequire(_maxTimeDelayFeePercent <= MAX_FEE_PERCENTAGE, \\\"Max fee larger than max fee\\\");\\n    \\trequire(_minTimeDelayFeePercent <= _maxTimeDelayFeePercent, \\\"Max is less than min\\\");\\n    \\tminTimeDelayFeePercent = _minTimeDelayFeePercent;\\n    \\tmaxTimeDelayFeePercent = _maxTimeDelayFeePercent;\\n    }\\n\\n    function setMinWaitTime(uint32 _minWaitTime) external override onlyOwner {\\n    \\trequire(_minWaitTime < minTimeWindow, \\\"Min wait time in window\\\");\\n    \\tminWaitTime = _minWaitTime;\\n    }\\n\\n    function setTimePenaltyFeeParameters(uint16 _beforeTargetTimeMaxPenaltyFeePercent, uint32 _afterTargetMidTime, uint16 _afterTargetMidTimePenaltyFeePercent, uint32 _afterTargetMaxTime, uint16 _afterTargetMaxTimePenaltyFeePercent) external override onlyOwner {\\n    \\trequire(_beforeTargetTimeMaxPenaltyFeePercent <= MAX_FEE_PERCENTAGE, \\\"Min fee larger than max fee\\\");\\n    \\trequire(_afterTargetMidTimePenaltyFeePercent <= MAX_FEE_PERCENTAGE, \\\"Mid fee larger than max fee\\\");\\n    \\trequire(_afterTargetMaxTimePenaltyFeePercent <= MAX_FEE_PERCENTAGE, \\\"Max fee larger than max fee\\\");\\n    \\trequire(_afterTargetMidTime <= _afterTargetMaxTime, \\\"Max time before mid time\\\");\\n    \\trequire(_afterTargetMidTimePenaltyFeePercent <= _afterTargetMaxTimePenaltyFeePercent, \\\"Max fee less than mid fee\\\");\\n\\n    \\tbeforeTargetTimeMaxPenaltyFeePercent = _beforeTargetTimeMaxPenaltyFeePercent;\\n    \\tafterTargetMidTime = _afterTargetMidTime;\\n    \\tafterTargetMidTimePenaltyFeePercent = _afterTargetMidTimePenaltyFeePercent;\\n    \\tafterTargetMaxTime = _afterTargetMaxTime;\\n    \\tafterTargetMaxTimePenaltyFeePercent = _afterTargetMaxTimePenaltyFeePercent;\\n    }\\n\\n    function setFindersFee(uint16 _findersFeePercent) external override onlyOwner {\\n    \\trequire(_findersFeePercent <= MAX_FEE_PERCENTAGE, \\\"Fee larger than max\\\");\\n    \\tfindersFeePercent = _findersFeePercent;\\n    }\\n\\n    function setKeepersFeePercent(uint16 _keepersFeePercent) external override onlyOwner {\\n        require(_keepersFeePercent <= MAX_FEE_PERCENTAGE, \\\"Fee larger than max\\\");\\n        keepersFeePercent = _keepersFeePercent;   \\n    }\\n\\n    function setKeepersFeeMax(uint256 _keepersFeeMax) external override onlyOwner {\\n        keepersFeeMax = _keepersFeeMax;\\n    }\\n\\n    function getMaxFees() external view override returns (uint16 maxFeesPercent) {\\n\\t\\treturn afterTargetMaxTimePenaltyFeePercent;\\n    }\\n}\",\"keccak256\":\"0x9dc60b03b283d758f6122d6dd2995b06000c8434e580c4b493d7bb22ab36d5da\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ICVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ICVIOracle {\\n    function getCVIRoundData(uint80 roundId) external view returns (uint32 cviValue, uint256 cviTimestamp);\\n    function getCVILatestRoundData() external view returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp);\\n\\n    function setDeviationCheck(bool newDeviationCheck) external;\\n    function setMaxDeviation(uint16 newMaxDeviation) external;\\n}\\n\",\"keccak256\":\"0xf1871b2e9219f7a11e63d8e3276b7a0a46d8d726d54e385a6326dbdb2bcb1bad\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IThetaVaultInfo.sol\\\";\\n\\ninterface IFeesCalculator {\\n\\n    struct CVIValue {\\n        uint256 period;\\n        uint32 cviValue;\\n    }\\n\\n    struct SnapshotUpdate {\\n        uint256 latestSnapshot;\\n        uint256 singleUnitFundingFee;\\n        uint256 totalTime;\\n        uint256 totalRounds;\\n        uint256 cviValueTimestamp;\\n        uint80 newLatestRoundId;\\n        uint32 cviValue;\\n        bool updatedSnapshot;\\n        bool updatedLatestRoundId;\\n        bool updatedLatestTimestamp;\\n        bool updatedTurbulenceData;\\n    }\\n\\n    function updateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 lastCVIValue, uint32 currCVIValue) external;\\n\\n    function setOracle(ICVIOracle cviOracle) external;\\n    function setThetaVault(IThetaVaultInfo thetaVault) external;\\n\\n    function setStateUpdator(address newUpdator) external;\\n\\n    function setDepositFee(uint16 newDepositFeePercentage) external;\\n    function setWithdrawFee(uint16 newWithdrawFeePercentage) external;\\n    function setOpenPositionFee(uint16 newOpenPositionFeePercentage) external;\\n    function setOpenPositionLPFee(uint16 newOpenPositionLPFeePercent) external;\\n    function setClosePositionLPFee(uint16 newClosePositionLPFeePercent) external;\\n    function setClosePositionFee(uint16 newClosePositionFeePercentage) external;\\n    function setClosePositionMaxFee(uint16 newClosePositionMaxFeePercentage) external;\\n    function setClosePositionFeeDecay(uint256 newClosePositionFeeDecayPeriod) external;\\n    \\n    function setOracleHeartbeatPeriod(uint256 newOracleHeartbeatPeriod) external;\\n    function setBuyingPremiumFeeMax(uint16 newBuyingPremiumFeeMaxPercentage) external;\\n    function setBuyingPremiumThreshold(uint16 newBuyingPremiumThreshold) external;\\n    function setClosingPremiumFeeMax(uint16 newClosingPremiumFeeMaxPercentage) external;\\n    function setCollateralToBuyingPremiumMapping(uint16[] calldata newCollateralToBuyingPremiumMapping) external;\\n    function setFundingFeeConstantRate(uint16 newfundingFeeConstantRate) external;\\n    function setCollateralToExtraFundingFeeMapping(uint32[] calldata newCollateralToExtraFundingFeeMapping) external;\\n    function setTurbulenceStep(uint16 newTurbulenceStepPercentage) external;\\n    function setMaxTurbulenceFeePercentToTrim(uint16 newMaxTurbulenceFeePercentToTrim) external;\\n    function setTurbulenceDeviationThresholdPercent(uint16 newTurbulenceDeviationThresholdPercent) external;\\n    function setTurbulenceDeviationPercent(uint16 newTurbulenceDeviationPercentage) external;\\n\\n    function calculateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 _lastCVIValue, uint32 _currCVIValue) external view returns (uint16);\\n\\n    function calculateBuyingPremiumFee(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n    function calculateBuyingPremiumFeeWithAddendum(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits, uint16 _turbulenceIndicatorPercent) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n\\n    function calculateClosingPremiumFee() external view returns (uint16 combinedPremiumFeePercentage);\\n\\n    function calculateSingleUnitFundingFee(CVIValue[] memory cviValues, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 fundingFee);\\n    function calculateSingleUnitPeriodFundingFee(CVIValue memory cviValue, uint256 collateralRatio) external view returns (uint256 fundingFee, uint256 fundingFeeRatePercents);\\n    function updateSnapshots(uint256 latestTimestamp, uint256 blockTimestampSnapshot, uint256 latestTimestampSnapshot, uint80 latestOracleRoundId, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (SnapshotUpdate memory snapshotUpdate);\\n\\n    function calculateClosePositionFeePercent(uint256 creationTimestamp, bool isNoLockPositionAddress) external view returns (uint16);\\n    function calculateWithdrawFeePercent(uint256 lastDepositTimestamp) external view returns (uint16);\\n\\n    function calculateCollateralRatio(uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 collateralRatio);\\n\\n    function depositFeePercent() external view returns (uint16);\\n    function withdrawFeePercent() external view returns (uint16);\\n    function openPositionFeePercent() external view returns (uint16);\\n    function closePositionFeePercent() external view returns (uint16);\\n    function openPositionLPFeePercent() external view returns (uint16);\\n    function closePositionLPFeePercent() external view returns (uint16);\\n\\n    function openPositionFees() external view returns (uint16 openPositionFeePercentResult, uint16 buyingPremiumFeeMaxPercentResult);\\n\\n    function turbulenceIndicatorPercent() external view returns (uint16);\\n    function oracleLeverage() external view returns (uint8);\\n\\n    function getCollateralToBuyingPremiumMapping() external view returns(uint16[] memory);\\n    function getCollateralToExtraFundingFeeMapping() external view returns(uint32[] memory);\\n}\\n\",\"keccak256\":\"0xfba7d565b0a7d83dbe5d1abb0bf35897145a96d28e35b0b91864e321606c5734\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IFeesCollector {\\n    function sendProfit(uint256 amount, IERC20 token) external;\\n}\\n\",\"keccak256\":\"0xb16b7c5d985657716ccacf0f1e61de587c06fe4f6591bee6fafc0a3658229b4c\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ILiquidation.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ILiquidation {\\t\\n\\tfunction setMinLiquidationThresholdPercents(uint16[8] calldata newMinThresholdPercents) external;\\n\\tfunction setMinLiquidationRewardPercent(uint16 newMinRewardPercent) external;\\n\\tfunction setMaxLiquidationRewardPercents(uint16[8] calldata newMaxRewardPercents) external;\\n\\tfunction isLiquidationCandidate(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (bool);\\n\\tfunction getLiquidationReward(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (uint256 finderFeeAmount);\\n}\\n\",\"keccak256\":\"0x0799656b324ed8d65391313156e1dfe7d99b6dadb08e71cd6a515d19731539bd\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IPlatform.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IFeesCalculator.sol\\\";\\nimport \\\"./IRewardsCollector.sol\\\";\\nimport \\\"./IFeesCollector.sol\\\";\\nimport \\\"./ILiquidation.sol\\\";\\n\\ninterface IPlatform {\\n\\n    struct Position {\\n        uint168 positionUnitsAmount;\\n        uint8 leverage;\\n        uint32 openCVIValue;\\n        uint32 creationTimestamp;\\n        uint32 originalCreationTimestamp;\\n    }\\n\\n    event Deposit(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event Withdraw(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event OpenPosition(address indexed account, uint256 tokenAmount, uint8 leverage, uint256 feeAmount, uint256 positionUnitsAmount, uint256 cviValue);\\n    event ClosePosition(address indexed account, uint256 tokenAmount, uint256 feeAmount, uint256 positionUnitsAmount, uint8 leverage, uint256 cviValue);\\n    event LiquidatePosition(address indexed positionAddress, uint256 currentPositionBalance, bool isBalancePositive, uint256 positionUnitsAmount);\\n\\n    function deposit(uint256 tokenAmount, uint256 minLPTokenAmount) external returns (uint256 lpTokenAmount);\\n    function withdraw(uint256 tokenAmount, uint256 maxLPTokenBurnAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n    function withdrawLPTokens(uint256 lpTokenAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n\\n    function increaseSharedPool(uint256 tokenAmount) external;\\n\\n    function openPositionWithoutFee(uint168 tokenAmount, uint32 maxCVI, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function openPosition(uint168 tokenAmount, uint32 maxCVI, uint16 maxBuyingPremiumFeePercentage, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function closePositionWithoutFee(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n    function closePosition(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function liquidatePositions(address[] calldata positionOwners) external returns (uint256 finderFeeAmount);\\n\\n    function setAddressSpecificParameters(address holderAddress, bool shouldLockPosition, bool noPremiumFeeAllowed, bool increaseSharedPoolAllowed, bool isLiquidityProvider) external;\\n\\n    function setRevertLockedTransfers(bool revertLockedTransfers) external;\\n\\n    function setSubContracts(IFeesCollector newCollector, ICVIOracle newOracle, IRewardsCollector newRewards, ILiquidation newLiquidation, address _newStakingContractAddress) external;\\n    function setFeesCalculator(IFeesCalculator newCalculator) external;\\n\\n    function setLatestOracleRoundId(uint80 newOracleRoundId) external;\\n    function setMaxTimeAllowedAfterLatestRound(uint32 newMaxTimeAllowedAfterLatestRound) external;\\n\\n    function setLockupPeriods(uint256 newLPLockupPeriod, uint256 newBuyersLockupPeriod) external;\\n\\n    function setEmergencyParameters(bool newEmergencyWithdrawAllowed, bool newCanPurgeSnapshots) external;\\n\\n    function setMaxAllowedLeverage(uint8 newMaxAllowedLeverage) external;\\n\\n    function calculatePositionBalance(address positionAddress) external view returns (uint256 currentPositionBalance, bool isPositive, uint168 positionUnitsAmount, uint8 leverage, uint256 fundingFees, uint256 marginDebt);\\n    function calculatePositionPendingFees(address positionAddress, uint168 positionUnitsAmount) external view returns (uint256 pendingFees);\\n\\n    function totalBalance(bool _withAddendum) external view returns (uint256 balance);\\n\\n    function calculateLatestTurbulenceIndicatorPercent() external view returns (uint16);\\n\\n    function cviOracle() external view returns (ICVIOracle);\\n    function feesCalculator() external view returns (IFeesCalculator);\\n\\n    function PRECISION_DECIMALS() external view returns (uint256);\\n\\n    function totalPositionUnitsAmount() external view returns (uint256);\\n    function totalLeveragedTokensAmount() external view returns (uint256);\\n    function totalFundingFeesAmount() external view returns (uint256);\\n    function latestFundingFees() external view returns (uint256);\\n\\n    function positions(address positionAddress) external view returns (uint168 positionUnitsAmount, uint8 leverage, uint32 openCVIValue, uint32 creationTimestamp, uint32 originalCreationTimestamp);\\n    function buyersLockupPeriod() external view returns (uint256);\\n    function maxCVIValue() external view returns (uint32);\\n}\\n\",\"keccak256\":\"0x11f55f686514975c2dd5adf87856f8df5f85b015621f01e1528addb6b7194686\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IVolatilityToken.sol\\\";\\n\\ninterface IRequestFeesCalculator {\\n    function calculateTimePenaltyFee(IVolatilityToken.Request calldata request) external view returns (uint16 feePercentage);\\n    function calculateTimeDelayFee(uint256 timeDelay) external view returns (uint16 feePercentage);\\n    function calculateFindersFee(uint256 tokensLeftAmount) external view returns (uint256 findersFeeAmount);\\n    function calculateKeepersFee(uint256 tokensAmount) external view returns (uint256 keepersFeeAmount);\\n\\n    function isLiquidable(IVolatilityToken.Request calldata request) external view returns (bool liquidable);\\n\\n    function minWaitTime() external view returns (uint32);\\n\\n    function setTimeWindow(uint32 minTimeWindow, uint32 maxTimeWindow) external;\\n    function setTimeDelayFeesParameters(uint16 minTimeDelayFeePercent, uint16 maxTimeDelayFeePercent) external;\\n    function setMinWaitTime(uint32 newMinWaitTime) external;\\n    function setTimePenaltyFeeParameters(uint16 beforeTargetTimeMaxPenaltyFeePercent, uint32 afterTargetMidTime, uint16 afterTargetMidTimePenaltyFeePercent, uint32 afterTargetMaxTime, uint16 afterTargetMaxTimePenaltyFeePercent) external;\\n    function setFindersFee(uint16 findersFeePercent) external;\\n    function setKeepersFeePercent(uint16 keepersFeePercent) external;\\n    function setKeepersFeeMax(uint256 keepersFeeMax) external;\\n\\n    function getMaxFees() external view returns (uint16 maxFeesPercent);\\n}\\n\",\"keccak256\":\"0xb516083aa9063482c61c12f38b960f017205f2611358dcab31c1197208841611\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRewardsCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IRewardsCollector {\\n\\tfunction reward(address account, uint256 positionUnits, uint8 leverage) external;\\n}\\n\",\"keccak256\":\"0xaae3f1399202cccfb2e7302f69868a1f9adfbc53c968668e79201692c5724ca5\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVaultInfo.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IThetaVaultInfo {\\n    function totalVaultLeveragedAmount() external view returns (uint256);\\n    function vaultPositionUnits() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8077ab6dec8937112a2e2567d9b524a10ba640b7891c4bb40729bfbb648c0c1e\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IVolatilityToken.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IPlatform.sol\\\";\\nimport \\\"./IRequestFeesCalculator.sol\\\";\\nimport \\\"./ICVIOracle.sol\\\";\\n\\ninterface IVolatilityToken {\\n\\n    struct Request {\\n        uint8 requestType; // 1 => mint, 2 => burn\\n        uint168 tokenAmount;\\n        uint16 timeDelayRequestFeesPercent;\\n        uint16 maxRequestFeesPercent;\\n        address owner;\\n        uint32 requestTimestamp;\\n        uint32 targetTimestamp;\\n        bool useKeepers;\\n        uint16 maxBuyingPremiumFeePercentage;\\n    }\\n\\n    event SubmitRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 tokenAmount, uint256 submitFeesAmount, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n    event FulfillRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 fulfillFeesAmount, bool isAborted, bool useKeepers, bool keepersCalled, address indexed fulfiller, uint32 fulfillTimestamp);\\n    event LiquidateRequest(uint256 requestId, uint8 requestType, address indexed account, address indexed liquidator, uint256 findersFeeAmount, bool useKeepers, uint32 liquidateTimestamp);\\n    event Mint(uint256 requestId, address indexed account, uint256 tokenAmount, uint256 positionedTokenAmount, uint256 mintedTokens, uint256 openPositionFee, uint256 buyingPremiumFee);\\n    event Burn(uint256 requestId, address indexed account, uint256 tokenAmountBeforeFees, uint256 tokenAmount, uint256 burnedTokens, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function rebaseCVI() external;\\n\\n    function submitMintRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersMintRequest(uint168 tokenAmount, uint32 timeDelay, uint16 maxBuyingPremiumFeePercentage) external returns (uint256 requestId);\\n    function submitBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n\\n    function fulfillMintRequest(uint256 requestId, uint16 maxBuyingPremiumFeePercentage, bool keepersCalled) external returns (uint256 tokensMinted, bool success);\\n    function fulfillBurnRequest(uint256 requestId, bool keepersCalled) external returns (uint256 tokensBurned);\\n\\n    function mintTokens(uint168 tokenAmount) external returns (uint256 mintedTokens);\\n    function burnTokens(uint168 burnAmount) external returns (uint256 tokenAmount);\\n\\n    function liquidateRequest(uint256 requestId) external returns (uint256 findersFeeAmount);\\n\\n    function setMinter(address minter) external;\\n    function setPlatform(IPlatform newPlatform) external;\\n    function setFeesCalculator(IFeesCalculator newFeesCalculator) external;\\n    function setFeesCollector(IFeesCollector newCollector) external;\\n    function setRequestFeesCalculator(IRequestFeesCalculator newRequestFeesCalculator) external;\\n    function setCVIOracle(ICVIOracle newCVIOracle) external;\\n    function setDeviationParameters(uint16 newDeviationPercentagePerSingleRebaseLag, uint16 newMinDeviationPercentage, uint16 newMaxDeviationPercentage) external;\\n    function setVerifyTotalRequestsAmount(bool verifyTotalRequestsAmount) external;\\n    function setMaxTotalRequestsAmount(uint256 maxTotalRequestsAmount) external;\\n    function setCappedRebase(bool newCappedRebase) external;\\n\\n    function setMinRequestId(uint256 newMinRequestId) external;\\n    function setMaxMinRequestIncrements(uint256 newMaxMinRequestIncrements) external;\\n\\n    function setFulfiller(address fulfiller) external;\\n\\n    function setKeepersFeeVaultAddress(address newKeepersFeeVaultAddress) external;\\n\\n    function setMinKeepersAmounts(uint256 newMinKeepersMintAmount, uint256 newMinKeepersBurnAmount) external;\\n\\n    function platform() external view returns (IPlatform);\\n    function requestFeesCalculator() external view returns (IRequestFeesCalculator);\\n    function leverage() external view returns (uint8);\\n    function initialTokenToLPTokenRate() external view returns (uint256);\\n\\n    function requests(uint256 requestId) external view returns (uint8 requestType, uint168 tokenAmount, uint16 timeDelayRequestFeesPercent, uint16 maxRequestFeesPercent,\\n        address owner, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n}\\n\",\"keccak256\":\"0x9b195f997265f6401224845c81cba2a3ac6f2e4f2bf65d8be5027ac1ee3fa5b4\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/volatility-token/RequestFeesCalculatorContracts.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport '@coti-cvi/contracts-cvi/contracts/RequestFeesCalculator.sol';\\n\\ncontract CVIUSDCRequestFeesCalculator is RequestFeesCalculator {\\n  constructor() RequestFeesCalculator() {}\\n}\\n\\ncontract CVIUSDCRequestFeesCalculator2X is RequestFeesCalculator {\\n  constructor() RequestFeesCalculator() {}\\n}\\n\",\"keccak256\":\"0x61e4442431d7c6778de9194eeb5d926465574d2236fec11a388be1625d9c4cac\",\"license\":\"GPL-3.0\"}},\"version\":1}",
      "bytecode": "0x6080604052600080546001600160a01b03167e64000000002a3000000e100000000000000000000000000000000000000000179055600180546001600160701b0319166c64138801f4012c012c00000384179055623d0900600255600380546001600160401b03191665a8c000000e1017905534801561007e57600080fd5b506100883361008d565b6100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611363806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063738b553f11610104578063a5759c93116100a2578063ce521f2611610071578063ce521f261461042e578063ce6457621461043e578063d0b6865214610451578063f2fde38b1461046857600080fd5b8063a5759c93146103df578063a8859ed1146103f4578063bb8870a91461040b578063bf0ded661461041e57600080fd5b806386734080116100de57806386734080146103895780638da5cb5b1461039e5780639188a6e6146103b9578063956872ca146103cc57600080fd5b8063738b553f1461034e5780637693aa611461036357806377c46f801461037657600080fd5b80634f592a501161017c57806363d7f4c41161014b57806363d7f4c41461030d5780636417b0e0146103205780636f15d7b014610333578063715018a61461034657600080fd5b80634f592a50146102af578063530fd7af146102c4578063558e44d3146102d9578063591b36f7146102fa57600080fd5b806322470032116101b8578063224700321461025957806326db8a311461026e5780632e5ad60514610283578063334a88c81461029857600080fd5b8063051a497b146101df5780630d7310091461020a57806315b3b87314610236575b600080fd5b6101f26101ed3660046111b5565b61047b565b60405161ffff90911681526020015b60405180910390f35b60035461022190600160201b900463ffffffff1681565b60405163ffffffff9091168152602001610201565b6102496102443660046110ed565b6105cd565b6040519015158152602001610201565b6001546101f290600160401b900461ffff1681565b61028161027c3660046111b5565b610617565b005b6001546101f290600160301b900461ffff1681565b6102a160025481565b604051908152602001610201565b6001546101f290600160201b900461ffff1681565b6001546101f290600160501b900461ffff1681565b6102e261271081565b6040516001600160a81b039091168152602001610201565b6102a16103083660046111b5565b610646565b61028161031b366004611105565b610686565b61028161032e3660046111cd565b61071e565b6102816103413660046111e7565b6107c6565b610281610883565b6000546101f290600160f01b900461ffff1681565b6102a16103713660046111b5565b6108b9565b600154600160401b900461ffff166101f2565b6001546101f290600160601b900461ffff1681565b6000546040516001600160a01b039091168152602001610201565b6102816103c7366004611151565b6108e2565b6101f26103da3660046110ed565b610b46565b6000546101f290600160e01b900461ffff1681565b60005461022190600160a01b900463ffffffff1681565b61028161041936600461111f565b610db9565b6003546102219063ffffffff1681565b6001546102219063ffffffff1681565b61028161044c366004611105565b610f16565b60005461022190600160c01b900463ffffffff1681565b6102816104763660046110bf565b610fae565b60008054600160a01b900463ffffffff168210156104d75760405162461bcd60e51b8152602060048201526014602482015273151a5b594819195b185e481d1bdbc81cdb585b1b60621b60448201526064015b60405180910390fd5b600054600160c01b900463ffffffff1682111561052b5760405162461bcd60e51b815260206004820152601260248201527154696d652064656c617920746f6f2062696760701b60448201526064016104ce565b60005461054e9063ffffffff600160a01b8204811691600160c01b9004166112fe565b60005463ffffffff91909116906105799061ffff600160e01b8204811691600160f01b9004166112c4565b60005461ffff919091169061059b90600160a01b900463ffffffff16856112e7565b6105a591906112a5565b6105af9190611285565b6000546105c79190600160f01b900461ffff166112e7565b92915050565b600354600090600160201b900463ffffffff166105f060e0840160c085016111cd565b6105fa919061125d565b63ffffffff1642111561060f57506001919050565b506000919050565b6000546001600160a01b031633146106415760405162461bcd60e51b81526004016104ce90611210565b600255565b60015460009081906127109061066790600160601b900461ffff16856112a5565b6106719190611285565b905060025481106105c7575050600254919050565b6000546001600160a01b031633146106b05760405162461bcd60e51b81526004016104ce90611210565b61271061ffff821611156106fc5760405162461bcd60e51b815260206004820152601360248201527208ccaca40d8c2e4cecae440e8d0c2dc40dac2f606b1b60448201526064016104ce565b6001805461ffff909216600160601b0261ffff60601b19909216919091179055565b6000546001600160a01b031633146107485760405162461bcd60e51b81526004016104ce90611210565b60005463ffffffff600160a01b9091048116908216106107aa5760405162461bcd60e51b815260206004820152601760248201527f4d696e20776169742074696d6520696e2077696e646f7700000000000000000060448201526064016104ce565b6001805463ffffffff191663ffffffff92909216919091179055565b6000546001600160a01b031633146107f05760405162461bcd60e51b81526004016104ce90611210565b8063ffffffff168263ffffffff1611156108435760405162461bcd60e51b815260206004820152601460248201527326b0bc1034b9903632b9b9903a3430b71036b4b760611b60448201526064016104ce565b6000805467ffffffffffffffff60a01b1916600160a01b63ffffffff9485160263ffffffff60c01b191617600160c01b9290931691909102919091179055565b6000546001600160a01b031633146108ad5760405162461bcd60e51b81526004016104ce90611210565b6108b76000611049565b565b600154600090612710906108d890600160501b900461ffff16846112a5565b6105c79190611285565b6000546001600160a01b0316331461090c5760405162461bcd60e51b81526004016104ce90611210565b61271061ffff861611156109625760405162461bcd60e51b815260206004820152601b60248201527f4d696e20666565206c6172676572207468616e206d617820666565000000000060448201526064016104ce565b61271061ffff841611156109b85760405162461bcd60e51b815260206004820152601b60248201527f4d696420666565206c6172676572207468616e206d617820666565000000000060448201526064016104ce565b61271061ffff82161115610a0e5760405162461bcd60e51b815260206004820152601b60248201527f4d617820666565206c6172676572207468616e206d617820666565000000000060448201526064016104ce565b8163ffffffff168463ffffffff161115610a6a5760405162461bcd60e51b815260206004820152601860248201527f4d61782074696d65206265666f7265206d69642074696d65000000000000000060448201526064016104ce565b8061ffff168361ffff161115610ac25760405162461bcd60e51b815260206004820152601960248201527f4d617820666565206c657373207468616e206d6964206665650000000000000060448201526064016104ce565b600180546003805463ffffffff97881667ffffffffffffffff1990911617600160201b9590971685029690961790955567ffffffff000000001990941661ffff95861690920267ffff000000000000191691909117600160301b928516929092029190911769ffff00000000000000001916600160401b9190931602919091179055565b600154600160401b900461ffff16610b6460e0830160c084016111cd565b63ffffffff16421015610c625760015463ffffffff16610b8a60c0840160a085016111cd565b610b94919061125d565b63ffffffff16421015610be25760405162461bcd60e51b815260206004820152601660248201527526b4b7103bb0b4ba103a34b6b2903737ba1037bb32b960511b60448201526064016104ce565b60015463ffffffff16610bfb60c0840160a085016111cd565b610c0b60e0850160c086016111cd565b610c1591906112fe565b610c1f91906112fe565b60015463ffffffff9190911690600160201b900461ffff1642610c4860e0860160c087016111cd565b63ffffffff16610c5891906112e7565b6108d891906112a5565b60035463ffffffff16610c7b60e0840160c085016111cd565b610c85919061125d565b63ffffffff16421015610ccc5760035460015463ffffffff90911690600160301b900461ffff16610cbc60e0850160c086016111cd565b610c589063ffffffff16426112e7565b600354600160201b900463ffffffff16610cec60e0840160c085016111cd565b610cf6919061125d565b63ffffffff16421015610db457600154600354600160301b90910461ffff1690610d309063ffffffff80821691600160201b9004166112fe565b60015463ffffffff9190911690610d5b9061ffff600160301b8204811691600160401b9004166112c4565b60035461ffff919091169063ffffffff16610d7c60e0870160c088016111cd565b610d8c9063ffffffff16426112e7565b610d9691906112e7565b610da091906112a5565b610daa9190611285565b6105c79190611245565b919050565b6000546001600160a01b03163314610de35760405162461bcd60e51b81526004016104ce90611210565b61271061ffff83161115610e395760405162461bcd60e51b815260206004820152601b60248201527f4d696e20666565206c6172676572207468616e206d617820666565000000000060448201526064016104ce565b61271061ffff82161115610e8f5760405162461bcd60e51b815260206004820152601b60248201527f4d617820666565206c6172676572207468616e206d617820666565000000000060448201526064016104ce565b8061ffff168261ffff161115610ede5760405162461bcd60e51b815260206004820152601460248201527326b0bc1034b9903632b9b9903a3430b71036b4b760611b60448201526064016104ce565b600080546001600160e01b0316600160e01b61ffff948516026001600160f01b031617600160f01b9290931691909102919091179055565b6000546001600160a01b03163314610f405760405162461bcd60e51b81526004016104ce90611210565b61271061ffff82161115610f8c5760405162461bcd60e51b815260206004820152601360248201527208ccaca40d8c2e4cecae440e8d0c2dc40dac2f606b1b60448201526064016104ce565b6001805461ffff909216600160501b0261ffff60501b19909216919091179055565b6000546001600160a01b03163314610fd85760405162461bcd60e51b81526004016104ce90611210565b6001600160a01b03811661103d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ce565b61104681611049565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803561ffff81168114610db457600080fd5b803563ffffffff81168114610db457600080fd5b6000602082840312156110d0578081fd5b81356001600160a01b03811681146110e6578182fd5b9392505050565b600061012082840312156110ff578081fd5b50919050565b600060208284031215611116578081fd5b6110e682611099565b60008060408385031215611131578081fd5b61113a83611099565b915061114860208401611099565b90509250929050565b600080600080600060a08688031215611168578081fd5b61117186611099565b945061117f602087016110ab565b935061118d60408701611099565b925061119b606087016110ab565b91506111a960808701611099565b90509295509295909350565b6000602082840312156111c6578081fd5b5035919050565b6000602082840312156111de578081fd5b6110e6826110ab565b600080604083850312156111f9578182fd5b611202836110ab565b9150611148602084016110ab565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561125857611258611317565b500190565b600063ffffffff80831681851680830382111561127c5761127c611317565b01949350505050565b6000826112a057634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156112bf576112bf611317565b500290565b600061ffff838116908316818110156112df576112df611317565b039392505050565b6000828210156112f9576112f9611317565b500390565b600063ffffffff838116908316818110156112df576112df5b634e487b7160e01b600052601160045260246000fdfea2646970667358221220d8e84946906a1eaf64c59ecf80e1ed5e25f0b8d925a88c863350a50a3a5474ab64736f6c63430008040033",
      "deployedBytecode": "",
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 37156,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "_owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 8986,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "minTimeWindow",
            "offset": 20,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 8989,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "maxTimeWindow",
            "offset": 24,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 8992,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "minTimeDelayFeePercent",
            "offset": 28,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 8995,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "maxTimeDelayFeePercent",
            "offset": 30,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 8999,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "minWaitTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint32"
          },
          {
            "astId": 9002,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "beforeTargetTimeMaxPenaltyFeePercent",
            "offset": 4,
            "slot": "1",
            "type": "t_uint16"
          },
          {
            "astId": 9005,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "afterTargetMidTimePenaltyFeePercent",
            "offset": 6,
            "slot": "1",
            "type": "t_uint16"
          },
          {
            "astId": 9008,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "afterTargetMaxTimePenaltyFeePercent",
            "offset": 8,
            "slot": "1",
            "type": "t_uint16"
          },
          {
            "astId": 9011,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "findersFeePercent",
            "offset": 10,
            "slot": "1",
            "type": "t_uint16"
          },
          {
            "astId": 9014,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "keepersFeePercent",
            "offset": 12,
            "slot": "1",
            "type": "t_uint16"
          },
          {
            "astId": 9017,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "keepersFeeMax",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 9020,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "afterTargetMidTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint32"
          },
          {
            "astId": 9023,
            "contract": "contracts/volatility-token/RequestFeesCalculatorContracts.sol:CVIUSDCRequestFeesCalculator",
            "label": "afterTargetMaxTime",
            "offset": 4,
            "slot": "3",
            "type": "t_uint32"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_uint16": {
            "encoding": "inplace",
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "encoding": "inplace",
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      },
      "creationBlock": 29537970,
      "history": [
        {
          "blockNumber": 28311806,
          "address": "0x0A6Ad680e7AEE89F61DC778462d2a21EA7BcfAdB"
        },
        {
          "blockNumber": 27433768,
          "address": "0x71d728DD133De21752294e927054c566cD1FA870"
        },
        {
          "blockNumber": 21240274,
          "address": "0x3030DC8c118966df33704C49E2E27A6898A9e7a0"
        }
      ]
    },
    "CVIUSDCThetaVault": {
      "address": "0xFDeB59a2B4891ea17610EE38665249acC9FCC506",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalUSDCAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "platformLiquidityAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dexVolTokenUSDCAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dexVolTokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dexUSDCAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "mintedThetaTokens",
              "type": "uint256"
            }
          ],
          "name": "FulfillDeposit",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalUSDCAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "platformLiquidityAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dexVolTokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dexUSDCVolTokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dexUSDCAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "burnedThetaTokens",
              "type": "uint256"
            }
          ],
          "name": "FulfillWithdraw",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "liquidator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ],
          "name": "LiquidateRequest",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "targetTimestamp",
              "type": "uint32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalUSDCBalance",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            }
          ],
          "name": "SubmitRequest",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEPOSIT_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MAX_PERCENTAGE",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "PRECISION_DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "UNISWAP_REMOVE_MAX_FEE_PERCENTAGE",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "WITHDRAW_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "depositCap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "depositHoldingsPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "extraLiqidityPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            }
          ],
          "name": "fulfillDepositRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "thetaTokensMinted",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            }
          ],
          "name": "fulfillWithdrawRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenWithdrawnAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fulfiller",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getReserves",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "volTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "usdcAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "initialTokenToThetaTokenRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_initialTokenToThetaTokenRate",
              "type": "uint256"
            },
            {
              "internalType": "contract IPlatform",
              "name": "_platform",
              "type": "address"
            },
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            },
            {
              "internalType": "contract IRewardRouter",
              "name": "_rewardRouter",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "contract IUniswapV2Router02",
              "name": "_router",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_lpTokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_lpTokenSymbolName",
              "type": "string"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "lastDepositTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            }
          ],
          "name": "liquidateRequest",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "liquidationPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lockupPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxMinRequestIncrements",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minDepositAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minDexPercentageAllowed",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minPoolSkewPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minRequestId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minWithdrawAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "nextRequestId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "platform",
          "outputs": [
            {
              "internalType": "contract IPlatform",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rebalance",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "requestDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "requests",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "internalType": "uint168",
              "name": "tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "targetTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "shouldStake",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rewardRouter",
          "outputs": [
            {
              "internalType": "contract IRewardRouter",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "router",
          "outputs": [
            {
              "internalType": "contract IUniswapV2Router02",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newDepositCap",
              "type": "uint256"
            }
          ],
          "name": "setDepositCap",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newDepositHoldingsPercentage",
              "type": "uint16"
            }
          ],
          "name": "setDepositHoldings",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newFulfiller",
              "type": "address"
            }
          ],
          "name": "setFulfiller",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newExtraLiquidityPercentage",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_minDexPercentageAllowed",
              "type": "uint16"
            }
          ],
          "name": "setLiquidityPercentages",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMinDepositAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_newMinWithdrawAmount",
              "type": "uint256"
            }
          ],
          "name": "setMinAmounts",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newMinPoolSkewPercentage",
              "type": "uint16"
            }
          ],
          "name": "setMinPoolSkew",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newLockupPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_newLiquidationPeriod",
              "type": "uint256"
            }
          ],
          "name": "setPeriods",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newRequestDelay",
              "type": "uint256"
            }
          ],
          "name": "setRequestDelay",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRewardRouter",
              "name": "_rewardRouter",
              "type": "address"
            }
          ],
          "name": "setRewardRouter",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            }
          ],
          "name": "submitDepositRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_thetaTokenAmount",
              "type": "uint168"
            }
          ],
          "name": "submitWithdrawRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "usdcPlatformLiquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "intrinsicDEXVolTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "volTokenPositionBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dexUSDCAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dexVolTokensAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalDepositRequestsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalHoldingsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalVaultLeveragedAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "vaultPositionUnits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "volToken",
          "outputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0xFDeB59a2B4891ea17610EE38665249acC9FCC506",
        "transactionIndex": 1,
        "gasUsed": "5912292",
        "logsBloom": "0x000000000008000000000000000000004000000000000000008000000040001000000000000000000000000004000004000000000000100000000000002100004000000000000800000000000000020008012000000000000000000000000000000000000280000001000000000008000000008000000000000000000000004000000200000000000000000000000000000000000000800000000000048000000200800000000000000000010006000200004000000008100000000000000000000000200000000000800000000400000000001004002000040000000000200000100000008000000008000000000000000000000000a0000000000000000000",
        "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e",
        "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFDeB59a2B4891ea17610EE38665249acC9FCC506",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x000000000000000000000000aeb3ec68310cce37da6601e9ca38542a0c932ddc"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFDeB59a2B4891ea17610EE38665249acC9FCC506",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 1,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506",
              "0x000000000000000000000000cef38d86c40522a2b58d82b658c194a9eb340091"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 2,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506",
              "0x0000000000000000000000001b02da8cb0d097eb8d57a175b88c7d8b47997506"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 3,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506",
              "0x0000000000000000000000008096ad3107715747361acefe685943bfb427c722"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 4,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0x8096aD3107715747361acefE685943bFB427C722",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506",
              "0x0000000000000000000000001b02da8cb0d097eb8d57a175b88c7d8b47997506"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 5,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xeDE0CE8cdc65bcF6422f3Afb9d7cDb3e59C09658",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506",
              "0x0000000000000000000000001b02da8cb0d097eb8d57a175b88c7d8b47997506"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 6,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0x8096aD3107715747361acefE685943bFB427C722",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506",
              "0x0000000000000000000000008096ad3107715747361acefe685943bfb427c722"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 7,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFDeB59a2B4891ea17610EE38665249acC9FCC506",
            "topics": [
              "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "logIndex": 8,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFDeB59a2B4891ea17610EE38665249acC9FCC506",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
            ],
            "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d2669586e17fc93773cc637becfa983525501eb",
            "logIndex": 9,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          }
        ],
        "blockNumber": 29538748,
        "cumulativeGasUsed": "5912292",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0xAEb3Ec68310ccE37DA6601E9Ca38542A0C932Ddc",
        "0x9D2669586E17fC93773cc637becfA983525501Eb",
        "0xdf45fe97000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000cef38d86c40522a2b58d82b658c194a9eb3400910000000000000000000000008096ad3107715747361acefe685943bfb427c722000000000000000000000000ff970a61a04b1ca14834a43f5de4533ebddb5cc80000000000000000000000001b02da8cb0d097eb8d57a175b88c7d8b4799750600000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000d54686574612043564f4c204c50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009542d43564f4c2d4c500000000000000000000000000000000000000000000000"
      ],
      "numDeployments": 3,
      "solcInputHash": "0e89febeebc7444140de8e67c9067d2c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x93b4e21c931252739a1ec13ea31d3d35a5c068be3163ccab83e4d70c40355f03\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view virtual returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(Address.isContract(IBeacon(newBeacon).implementation()), \\\"ERC1967: beacon implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17668652127feebed0ce8d9431ef95ccc8c4292f03e3b8cf06c6ca16af396633\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xd5d1fd16e9faff7fcb3a52e02a8d49156f42a38a03f07b5f1810c21c2149a8ab\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3777e696b62134e6177440dbe6e6601c0c156a443f57167194b67e75527439de\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
      "deployedBytecode": "0x60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033",
      "execute": {
        "methodName": "initialize",
        "args": [
          {
            "type": "BigNumber",
            "hex": "0xe8d4a51000"
          },
          "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
          "0x8096aD3107715747361acefE685943bFB427C722",
          "0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",
          "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",
          "Theta CVOL LP",
          "T-CVOL-LP"
        ]
      },
      "implementation": "0x569724E2Ef84aa42a06f86F51aAC75d813B90B2F",
      "devdoc": {
        "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
        "kind": "dev",
        "methods": {
          "admin()": {
            "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
          },
          "constructor": {
            "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
          },
          "implementation()": {
            "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      },
      "creationBlock": 29538748,
      "history": []
    },
    "CVIUSDCThetaVaultRequestFulfiller": {
      "address": "0x0f2962C9188D7852a8bDeB288ab95e5a575C641F",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEPOSIT_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "WITHDRAW_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "checkUpkeep",
          "outputs": [
            {
              "internalType": "bool",
              "name": "upkeepNeeded",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "enableWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "fulfillers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRequestManager",
              "name": "_requestManager",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "performUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "requestManager",
          "outputs": [
            {
              "internalType": "contract IRequestManager",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_enableWhitelist",
              "type": "bool"
            }
          ],
          "name": "setEnableWhitelist",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "name": "setFulfillerAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRequestManager",
              "name": "_requestManager",
              "type": "address"
            }
          ],
          "name": "setRequestManager",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        }
      ],
      "transactionHash": "0x7da24cc904783d9956e76bad8fdb4e69d2d659d9f51736a86d22353377241c21",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x0f2962C9188D7852a8bDeB288ab95e5a575C641F",
        "transactionIndex": 2,
        "gasUsed": "5175434",
        "logsBloom": "0x
        "blockHash": "0x2b9695be9d6a09263a7097c590de2ded714bc5d67555fb53fcaae8757d77ba18",
        "transactionHash": "0x7da24cc904783d9956e76bad8fdb4e69d2d659d9f51736a86d22353377241c21",
        "logs": [
          {
            "transactionIndex": 2,
            "blockNumber": 38037898,
            "transactionHash": "0x7da24cc904783d9956e76bad8fdb4e69d2d659d9f51736a86d22353377241c21",
            "address": "0x0f2962C9188D7852a8bDeB288ab95e5a575C641F",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x000000000000000000000000500b8f46c42b5d6ae78dc3034e45dddf9de72523"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x2b9695be9d6a09263a7097c590de2ded714bc5d67555fb53fcaae8757d77ba18"
          },
          {
            "transactionIndex": 2,
            "blockNumber": 38037898,
            "transactionHash": "0x7da24cc904783d9956e76bad8fdb4e69d2d659d9f51736a86d22353377241c21",
            "address": "0x0f2962C9188D7852a8bDeB288ab95e5a575C641F",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 1,
            "blockHash": "0x2b9695be9d6a09263a7097c590de2ded714bc5d67555fb53fcaae8757d77ba18"
          },
          {
            "transactionIndex": 2,
            "blockNumber": 38037898,
            "transactionHash": "0x7da24cc904783d9956e76bad8fdb4e69d2d659d9f51736a86d22353377241c21",
            "address": "0x0f2962C9188D7852a8bDeB288ab95e5a575C641F",
            "topics": [
              "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "logIndex": 2,
            "blockHash": "0x2b9695be9d6a09263a7097c590de2ded714bc5d67555fb53fcaae8757d77ba18"
          },
          {
            "transactionIndex": 2,
            "blockNumber": 38037898,
            "transactionHash": "0x7da24cc904783d9956e76bad8fdb4e69d2d659d9f51736a86d22353377241c21",
            "address": "0x0f2962C9188D7852a8bDeB288ab95e5a575C641F",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
            ],
            "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d2669586e17fc93773cc637becfa983525501eb",
            "logIndex": 3,
            "blockHash": "0x2b9695be9d6a09263a7097c590de2ded714bc5d67555fb53fcaae8757d77ba18"
          }
        ],
        "blockNumber": 38037898,
        "cumulativeGasUsed": "5400486",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0x500B8f46C42B5d6AE78DC3034E45DdDf9de72523",
        "0x9D2669586E17fC93773cc637becfA983525501Eb",
        "0xc4d66de8000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506"
      ],
      "numDeployments": 1,
      "solcInputHash": "0e89febeebc7444140de8e67c9067d2c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x93b4e21c931252739a1ec13ea31d3d35a5c068be3163ccab83e4d70c40355f03\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view virtual returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(Address.isContract(IBeacon(newBeacon).implementation()), \\\"ERC1967: beacon implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17668652127feebed0ce8d9431ef95ccc8c4292f03e3b8cf06c6ca16af396633\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xd5d1fd16e9faff7fcb3a52e02a8d49156f42a38a03f07b5f1810c21c2149a8ab\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3777e696b62134e6177440dbe6e6601c0c156a443f57167194b67e75527439de\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
      "deployedBytecode": "0x60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033",
      "execute": {
        "methodName": "initialize",
        "args": [
          "0xFDeB59a2B4891ea17610EE38665249acC9FCC506"
        ]
      },
      "implementation": "0x500B8f46C42B5d6AE78DC3034E45DdDf9de72523",
      "devdoc": {
        "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
        "kind": "dev",
        "methods": {
          "admin()": {
            "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
          },
          "constructor": {
            "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
          },
          "implementation()": {
            "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      },
      "creationBlock": 38037898,
      "history": [
        {
          "blockNumber": 37732827,
          "address": "0x09A87Fba49f68Ed5b24C242BcB540082c263464A",
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IRequestManager",
                  "name": "_requestManager",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEPOSIT_REQUEST_TYPE",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "WITHDRAW_REQUEST_TYPE",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "checkUpkeep",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "upkeepNeeded",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "performData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "enableWhitelist",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "fulfillers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "performUpkeep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "requestManager",
              "outputs": [
                {
                  "internalType": "contract IRequestManager",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "_enableWhitelist",
                  "type": "bool"
                }
              ],
              "name": "setEnableWhitelist",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isAllowed",
                  "type": "bool"
                }
              ],
              "name": "setFulfillerAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IRequestManager",
                  "name": "_requestManager",
                  "type": "address"
                }
              ],
              "name": "setRequestManager",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ]
        },
        {
          "blockNumber": 29538759,
          "address": "0x72D4c4eC814C68ECD9825C0B0e41f5aA66704Bd7"
        },
        {
          "blockNumber": 28315325,
          "address": "0x25787a3F0C0cbD4a032Eaa9823e6F7C0EFaEe5CD"
        },
        {
          "blockNumber": 27434263,
          "address": "0x558D7C62aF482Dc729c7D0e113B5552CC9460CA6"
        },
        {
          "blockNumber": 21240534,
          "address": "0x69994395fE6BFF3f9D63f8968d91Fe456f4c608F"
        }
      ]
    },
    "CVIUSDCThetaVaultRequestFulfiller_Implementation": {
      "address": "0x500B8f46C42B5d6AE78DC3034E45DdDf9de72523",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEPOSIT_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "WITHDRAW_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "checkUpkeep",
          "outputs": [
            {
              "internalType": "bool",
              "name": "upkeepNeeded",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "enableWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "fulfillers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRequestManager",
              "name": "_requestManager",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "performUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "requestManager",
          "outputs": [
            {
              "internalType": "contract IRequestManager",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_enableWhitelist",
              "type": "bool"
            }
          ],
          "name": "setEnableWhitelist",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "name": "setFulfillerAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRequestManager",
              "name": "_requestManager",
              "type": "address"
            }
          ],
          "name": "setRequestManager",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "transactionHash": "0x7c2c6d9dc1507f7f2d06f82a7873a68acc9aee8dcdbe8c21b81aaa4cce5579fc",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x500B8f46C42B5d6AE78DC3034E45DdDf9de72523",
        "transactionIndex": 3,
        "gasUsed": "5147227",
        "logsBloom": "0x
        "blockHash": "0xa47f9acf8c002842a6ce147950c1e0cd740e8975603207253e59f52b0c1002f4",
        "transactionHash": "0x7c2c6d9dc1507f7f2d06f82a7873a68acc9aee8dcdbe8c21b81aaa4cce5579fc",
        "logs": [],
        "blockNumber": 38037882,
        "cumulativeGasUsed": "5961723",
        "status": 1,
        "byzantium": true
      },
      "args": [],
      "numDeployments": 1,
      "solcInputHash": "7f3c46bae143bb40321ae0fb3b8535cc",
      "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEPOSIT_REQUEST_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_REQUEST_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fulfillers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRequestManager\",\"name\":\"_requestManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestManager\",\"outputs\":[{\"internalType\":\"contract IRequestManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enableWhitelist\",\"type\":\"bool\"}],\"name\":\"setEnableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"setFulfillerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRequestManager\",\"name\":\"_requestManager\",\"type\":\"address\"}],\"name\":\"setRequestManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/theta-vault/ThetaVaultRequestFulfillerContracts.sol\":\"CVIUSDCThetaVaultRequestFulfiller\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easilly be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xc4a031d4b6e3fa6d40a09bfbf99d3fdd22bbe77ba97065bc790b4cab22adee85\",\"license\":\"MIT\"},\"@coti-cvi/contracts-cvi/contracts/RequestFulfiller.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\nimport \\\"./interfaces/IRequestFulfiller.sol\\\";\\n\\nabstract contract RequestFulfiller is IRequestFulfiller, OwnableUpgradeable, KeeperCompatibleInterface {\\n\\n    IRequestManager public requestManager;\\n\\n    bool public enableWhitelist;\\n    mapping (address => bool) public fulfillers;\\n\\n    function initialize(IRequestManager _requestManager) external initializer {\\n        OwnableUpgradeable.__Ownable_init();\\n\\n        enableWhitelist = true;\\n        requestManager = _requestManager;\\n    }\\n\\n    function setRequestManager(IRequestManager _requestManager) external override onlyOwner {\\n        requestManager = _requestManager;\\n    }\\n\\n    function setEnableWhitelist(bool _enableWhitelist) external override onlyOwner {\\n        enableWhitelist = _enableWhitelist;\\n    }\\n\\n    function setFulfillerAddress(address user, bool isAllowed) external override onlyOwner {\\n        fulfillers[user] = isAllowed;\\n    }\\n\\n    function checkUpkeep(\\n        bytes calldata /* checkData */\\n    ) external view override returns (bool upkeepNeeded, bytes memory performData) {\\n        uint256[] memory fulfillableRequestIds = isUpkeepNeeded();\\n        return (fulfillableRequestIds[0] != 0, performData);\\n    }\\n\\n    function performUpkeep(\\n        bytes calldata /* performData */\\n    ) external override {\\n        require(!enableWhitelist || fulfillers[msg.sender], \\\"Not allowed\\\");\\n        uint256[] memory fulfillableRequestIds = isUpkeepNeeded();\\n        \\n        require(fulfillableRequestIds[0] != 0, \\\"No fulfillable requests\\\");\\n\\n        bool hasAnyFulfilled = false;\\n        for (uint256 i = 0; i < fulfillableRequestIds.length; i++) {\\n            uint256 requestId = fulfillableRequestIds[i];\\n\\n            // Skip last item, which is always 0 (but don't assume it' s always there for safety)\\n            if (requestId != 0) {\\n                bool wasFulfilled = fulfillRequest(requestId);\\n                if (wasFulfilled) {\\n                    hasAnyFulfilled = true;\\n                }\\n            }\\n        }\\n\\n        require(hasAnyFulfilled, \\\"Failed to fulfill requests\\\");\\n    }\\n\\n    function isUpkeepNeeded() private view returns (uint256[] memory fulfillableRequestIds) {\\n        uint256 nextRequestId = requestManager.nextRequestId();\\n        uint256 maxMinRequestIncrements = requestManager.maxMinRequestIncrements();\\n        uint256 minRequestId = requestManager.minRequestId();\\n\\n        uint256 endRequestId = nextRequestId < minRequestId + maxMinRequestIncrements ? nextRequestId : minRequestId + maxMinRequestIncrements;\\n        fulfillableRequestIds = new uint256[](endRequestId - minRequestId + 1); // Critical to add 1, so there will always be a 0 ending to the array (and at least 1 cell, never empty)\\n        uint256 currFulfillableRequestIndex = 0;\\n        for (uint256 currRequest = minRequestId; currRequest < endRequestId; currRequest++) {\\n            if (isRequestKeepersFulfillable(currRequest)) {\\n                fulfillableRequestIds[currFulfillableRequestIndex] = currRequest;\\n                currFulfillableRequestIndex++;\\n            }\\n        }\\n    }\\n\\n    function isRequestKeepersFulfillable(uint256 _requestId) internal virtual view returns (bool isFulfillable);\\n\\n    function fulfillRequest(uint256 _requestId) internal virtual returns (bool wasFulfilled);\\n}\\n\",\"keccak256\":\"0x9541da3323f8a57c1b8930e3c5c70923a8f54b1027a8e7edcf20a24832e20f64\",\"license\":\"GPL-3.0-or-later\"},\"@coti-cvi/contracts-cvi/contracts/ThetaVaultRequestFulfiller.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8;\\n\\nimport \\\"./RequestFulfiller.sol\\\";\\nimport \\\"./interfaces/IThetaVault.sol\\\";\\n\\ncontract ThetaVaultRequestFulfiller is RequestFulfiller {\\n\\n    uint8 public constant DEPOSIT_REQUEST_TYPE = 1;\\n    uint8 public constant WITHDRAW_REQUEST_TYPE = 2;\\n\\n    function isRequestKeepersFulfillable(uint256 _requestId) internal view override returns (bool isFulfillable) {\\n        (,, uint32 targetTimestamp, address owner,) = IThetaVault(address(requestManager)).requests(_requestId);\\n        if (owner != address(0) && block.timestamp >= targetTimestamp) {\\n            isFulfillable = true;\\n        }\\n    }\\n\\n    function fulfillRequest(uint256 _requestId) internal override returns (bool wasFulfilled) {\\n        IThetaVault thetaVault = IThetaVault(address(requestManager));\\n\\n        (uint8 requestType,,,,) = thetaVault.requests(_requestId);\\n\\n        if (requestType == DEPOSIT_REQUEST_TYPE) {\\n            thetaVault.fulfillDepositRequest(_requestId);\\n        } else if (requestType == WITHDRAW_REQUEST_TYPE) {\\n            thetaVault.fulfillWithdrawRequest(_requestId);\\n        }\\n\\n        wasFulfilled = true;\\n    }\\n}\\n\",\"keccak256\":\"0x0a3918ac44b152b8c511d9dd75534ead4a74c8e3ffeec72756c0e596d92b4998\",\"license\":\"GPL-3.0-or-later\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ICVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ICVIOracle {\\n    function getCVIRoundData(uint80 roundId) external view returns (uint32 cviValue, uint256 cviTimestamp);\\n    function getCVILatestRoundData() external view returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp);\\n\\n    function setDeviationCheck(bool newDeviationCheck) external;\\n    function setMaxDeviation(uint16 newMaxDeviation) external;\\n}\\n\",\"keccak256\":\"0xf1871b2e9219f7a11e63d8e3276b7a0a46d8d726d54e385a6326dbdb2bcb1bad\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IThetaVaultInfo.sol\\\";\\n\\ninterface IFeesCalculator {\\n\\n    struct CVIValue {\\n        uint256 period;\\n        uint32 cviValue;\\n    }\\n\\n    struct SnapshotUpdate {\\n        uint256 latestSnapshot;\\n        uint256 singleUnitFundingFee;\\n        uint256 totalTime;\\n        uint256 totalRounds;\\n        uint256 cviValueTimestamp;\\n        uint80 newLatestRoundId;\\n        uint32 cviValue;\\n        bool updatedSnapshot;\\n        bool updatedLatestRoundId;\\n        bool updatedLatestTimestamp;\\n        bool updatedTurbulenceData;\\n    }\\n\\n    function updateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 lastCVIValue, uint32 currCVIValue) external;\\n\\n    function setOracle(ICVIOracle cviOracle) external;\\n    function setThetaVault(IThetaVaultInfo thetaVault) external;\\n\\n    function setStateUpdator(address newUpdator) external;\\n\\n    function setDepositFee(uint16 newDepositFeePercentage) external;\\n    function setWithdrawFee(uint16 newWithdrawFeePercentage) external;\\n    function setOpenPositionFee(uint16 newOpenPositionFeePercentage) external;\\n    function setOpenPositionLPFee(uint16 newOpenPositionLPFeePercent) external;\\n    function setClosePositionLPFee(uint16 newClosePositionLPFeePercent) external;\\n    function setClosePositionFee(uint16 newClosePositionFeePercentage) external;\\n    function setClosePositionMaxFee(uint16 newClosePositionMaxFeePercentage) external;\\n    function setClosePositionFeeDecay(uint256 newClosePositionFeeDecayPeriod) external;\\n    \\n    function setOracleHeartbeatPeriod(uint256 newOracleHeartbeatPeriod) external;\\n    function setBuyingPremiumFeeMax(uint16 newBuyingPremiumFeeMaxPercentage) external;\\n    function setBuyingPremiumThreshold(uint16 newBuyingPremiumThreshold) external;\\n    function setClosingPremiumFeeMax(uint16 newClosingPremiumFeeMaxPercentage) external;\\n    function setCollateralToBuyingPremiumMapping(uint16[] calldata newCollateralToBuyingPremiumMapping) external;\\n    function setFundingFeeConstantRate(uint16 newfundingFeeConstantRate) external;\\n    function setCollateralToExtraFundingFeeMapping(uint32[] calldata newCollateralToExtraFundingFeeMapping) external;\\n    function setTurbulenceStep(uint16 newTurbulenceStepPercentage) external;\\n    function setMaxTurbulenceFeePercentToTrim(uint16 newMaxTurbulenceFeePercentToTrim) external;\\n    function setTurbulenceDeviationThresholdPercent(uint16 newTurbulenceDeviationThresholdPercent) external;\\n    function setTurbulenceDeviationPercent(uint16 newTurbulenceDeviationPercentage) external;\\n\\n    function calculateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 _lastCVIValue, uint32 _currCVIValue) external view returns (uint16);\\n\\n    function calculateBuyingPremiumFee(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n    function calculateBuyingPremiumFeeWithAddendum(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits, uint16 _turbulenceIndicatorPercent) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n\\n    function calculateClosingPremiumFee() external view returns (uint16 combinedPremiumFeePercentage);\\n\\n    function calculateSingleUnitFundingFee(CVIValue[] memory cviValues, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 fundingFee);\\n    function calculateSingleUnitPeriodFundingFee(CVIValue memory cviValue, uint256 collateralRatio) external view returns (uint256 fundingFee, uint256 fundingFeeRatePercents);\\n    function updateSnapshots(uint256 latestTimestamp, uint256 blockTimestampSnapshot, uint256 latestTimestampSnapshot, uint80 latestOracleRoundId, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (SnapshotUpdate memory snapshotUpdate);\\n\\n    function calculateClosePositionFeePercent(uint256 creationTimestamp, bool isNoLockPositionAddress) external view returns (uint16);\\n    function calculateWithdrawFeePercent(uint256 lastDepositTimestamp) external view returns (uint16);\\n\\n    function calculateCollateralRatio(uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 collateralRatio);\\n\\n    function depositFeePercent() external view returns (uint16);\\n    function withdrawFeePercent() external view returns (uint16);\\n    function openPositionFeePercent() external view returns (uint16);\\n    function closePositionFeePercent() external view returns (uint16);\\n    function openPositionLPFeePercent() external view returns (uint16);\\n    function closePositionLPFeePercent() external view returns (uint16);\\n\\n    function openPositionFees() external view returns (uint16 openPositionFeePercentResult, uint16 buyingPremiumFeeMaxPercentResult);\\n\\n    function turbulenceIndicatorPercent() external view returns (uint16);\\n    function oracleLeverage() external view returns (uint8);\\n\\n    function getCollateralToBuyingPremiumMapping() external view returns(uint16[] memory);\\n    function getCollateralToExtraFundingFeeMapping() external view returns(uint32[] memory);\\n}\\n\",\"keccak256\":\"0xfba7d565b0a7d83dbe5d1abb0bf35897145a96d28e35b0b91864e321606c5734\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IFeesCollector {\\n    function sendProfit(uint256 amount, IERC20 token) external;\\n}\\n\",\"keccak256\":\"0xb16b7c5d985657716ccacf0f1e61de587c06fe4f6591bee6fafc0a3658229b4c\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ILiquidation.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ILiquidation {\\t\\n\\tfunction setMinLiquidationThresholdPercents(uint16[8] calldata newMinThresholdPercents) external;\\n\\tfunction setMinLiquidationRewardPercent(uint16 newMinRewardPercent) external;\\n\\tfunction setMaxLiquidationRewardPercents(uint16[8] calldata newMaxRewardPercents) external;\\n\\tfunction isLiquidationCandidate(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (bool);\\n\\tfunction getLiquidationReward(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (uint256 finderFeeAmount);\\n}\\n\",\"keccak256\":\"0x0799656b324ed8d65391313156e1dfe7d99b6dadb08e71cd6a515d19731539bd\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IPlatform.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IFeesCalculator.sol\\\";\\nimport \\\"./IRewardsCollector.sol\\\";\\nimport \\\"./IFeesCollector.sol\\\";\\nimport \\\"./ILiquidation.sol\\\";\\n\\ninterface IPlatform {\\n\\n    struct Position {\\n        uint168 positionUnitsAmount;\\n        uint8 leverage;\\n        uint32 openCVIValue;\\n        uint32 creationTimestamp;\\n        uint32 originalCreationTimestamp;\\n    }\\n\\n    event Deposit(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event Withdraw(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event OpenPosition(address indexed account, uint256 tokenAmount, uint8 leverage, uint256 feeAmount, uint256 positionUnitsAmount, uint256 cviValue);\\n    event ClosePosition(address indexed account, uint256 tokenAmount, uint256 feeAmount, uint256 positionUnitsAmount, uint8 leverage, uint256 cviValue);\\n    event LiquidatePosition(address indexed positionAddress, uint256 currentPositionBalance, bool isBalancePositive, uint256 positionUnitsAmount);\\n\\n    function deposit(uint256 tokenAmount, uint256 minLPTokenAmount) external returns (uint256 lpTokenAmount);\\n    function withdraw(uint256 tokenAmount, uint256 maxLPTokenBurnAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n    function withdrawLPTokens(uint256 lpTokenAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n\\n    function increaseSharedPool(uint256 tokenAmount) external;\\n\\n    function openPositionWithoutFee(uint168 tokenAmount, uint32 maxCVI, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function openPosition(uint168 tokenAmount, uint32 maxCVI, uint16 maxBuyingPremiumFeePercentage, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function closePositionWithoutFee(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n    function closePosition(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function liquidatePositions(address[] calldata positionOwners) external returns (uint256 finderFeeAmount);\\n\\n    function setAddressSpecificParameters(address holderAddress, bool shouldLockPosition, bool noPremiumFeeAllowed, bool increaseSharedPoolAllowed, bool isLiquidityProvider) external;\\n\\n    function setRevertLockedTransfers(bool revertLockedTransfers) external;\\n\\n    function setSubContracts(IFeesCollector newCollector, ICVIOracle newOracle, IRewardsCollector newRewards, ILiquidation newLiquidation, address _newStakingContractAddress) external;\\n    function setFeesCalculator(IFeesCalculator newCalculator) external;\\n\\n    function setLatestOracleRoundId(uint80 newOracleRoundId) external;\\n    function setMaxTimeAllowedAfterLatestRound(uint32 newMaxTimeAllowedAfterLatestRound) external;\\n\\n    function setLockupPeriods(uint256 newLPLockupPeriod, uint256 newBuyersLockupPeriod) external;\\n\\n    function setEmergencyParameters(bool newEmergencyWithdrawAllowed, bool newCanPurgeSnapshots) external;\\n\\n    function setMaxAllowedLeverage(uint8 newMaxAllowedLeverage) external;\\n\\n    function calculatePositionBalance(address positionAddress) external view returns (uint256 currentPositionBalance, bool isPositive, uint168 positionUnitsAmount, uint8 leverage, uint256 fundingFees, uint256 marginDebt);\\n    function calculatePositionPendingFees(address positionAddress, uint168 positionUnitsAmount) external view returns (uint256 pendingFees);\\n\\n    function totalBalance(bool _withAddendum) external view returns (uint256 balance);\\n\\n    function calculateLatestTurbulenceIndicatorPercent() external view returns (uint16);\\n\\n    function cviOracle() external view returns (ICVIOracle);\\n    function feesCalculator() external view returns (IFeesCalculator);\\n\\n    function PRECISION_DECIMALS() external view returns (uint256);\\n\\n    function totalPositionUnitsAmount() external view returns (uint256);\\n    function totalLeveragedTokensAmount() external view returns (uint256);\\n    function totalFundingFeesAmount() external view returns (uint256);\\n    function latestFundingFees() external view returns (uint256);\\n\\n    function positions(address positionAddress) external view returns (uint168 positionUnitsAmount, uint8 leverage, uint32 openCVIValue, uint32 creationTimestamp, uint32 originalCreationTimestamp);\\n    function buyersLockupPeriod() external view returns (uint256);\\n    function maxCVIValue() external view returns (uint32);\\n}\\n\",\"keccak256\":\"0x11f55f686514975c2dd5adf87856f8df5f85b015621f01e1528addb6b7194686\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IVolatilityToken.sol\\\";\\n\\ninterface IRequestFeesCalculator {\\n    function calculateTimePenaltyFee(IVolatilityToken.Request calldata request) external view returns (uint16 feePercentage);\\n    function calculateTimeDelayFee(uint256 timeDelay) external view returns (uint16 feePercentage);\\n    function calculateFindersFee(uint256 tokensLeftAmount) external view returns (uint256 findersFeeAmount);\\n    function calculateKeepersFee(uint256 tokensAmount) external view returns (uint256 keepersFeeAmount);\\n\\n    function isLiquidable(IVolatilityToken.Request calldata request) external view returns (bool liquidable);\\n\\n    function minWaitTime() external view returns (uint32);\\n\\n    function setTimeWindow(uint32 minTimeWindow, uint32 maxTimeWindow) external;\\n    function setTimeDelayFeesParameters(uint16 minTimeDelayFeePercent, uint16 maxTimeDelayFeePercent) external;\\n    function setMinWaitTime(uint32 newMinWaitTime) external;\\n    function setTimePenaltyFeeParameters(uint16 beforeTargetTimeMaxPenaltyFeePercent, uint32 afterTargetMidTime, uint16 afterTargetMidTimePenaltyFeePercent, uint32 afterTargetMaxTime, uint16 afterTargetMaxTimePenaltyFeePercent) external;\\n    function setFindersFee(uint16 findersFeePercent) external;\\n    function setKeepersFeePercent(uint16 keepersFeePercent) external;\\n    function setKeepersFeeMax(uint256 keepersFeeMax) external;\\n\\n    function getMaxFees() external view returns (uint16 maxFeesPercent);\\n}\\n\",\"keccak256\":\"0xb516083aa9063482c61c12f38b960f017205f2611358dcab31c1197208841611\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestFulfiller.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IRequestManager.sol\\\";\\n\\ninterface IRequestFulfiller {\\n    function setRequestManager(IRequestManager requestManager) external;\\n    function setEnableWhitelist(bool enableWhitelist) external;\\n    function setFulfillerAddress(address user, bool isAllowed) external;\\n}\\n\",\"keccak256\":\"0x59f78656c0d519bc2b84569ce097de9c1de05d7ec95e78823ef528c2a7d11eaf\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IRequestManager {\\n\\n\\tfunction nextRequestId() external view returns (uint256);\\n    function minRequestId() external view returns (uint256);\\n    function maxMinRequestIncrements() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4271e6200e0675ca19c931cd82dc9243a01d88bc20a4352effb1d66be761b94b\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRewardsCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IRewardsCollector {\\n\\tfunction reward(address account, uint256 positionUnits, uint8 leverage) external;\\n}\\n\",\"keccak256\":\"0xaae3f1399202cccfb2e7302f69868a1f9adfbc53c968668e79201692c5724ca5\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport '@coti-cvi/contracts-staking/contracts/interfaces/IRewardRouter.sol';\\n\\nimport \\\"./IThetaVaultInfo.sol\\\";\\nimport \\\"./IVolatilityToken.sol\\\";\\n\\ninterface IThetaVault is IThetaVaultInfo {\\n\\n    event SubmitRequest(uint256 requestId, uint8 requestType, uint256 tokenAmount, uint32 targetTimestamp, address indexed account, uint256 totalUSDCBalance, uint256 totalSupply);\\n    event FulfillDeposit(uint256 requestId, address indexed account, uint256 totalUSDCAmount, uint256 platformLiquidityAmount, uint256 dexVolTokenUSDCAmount, uint256 dexVolTokenAmount, uint256 dexUSDCAmount, uint256 mintedThetaTokens);\\n    event FulfillWithdraw(uint256 requestId, address indexed account, uint256 totalUSDCAmount, uint256 platformLiquidityAmount, uint256 dexVolTokenAmount, uint256 dexUSDCVolTokenAmount, uint256 dexUSDCAmount, uint256 burnedThetaTokens);\\n    event LiquidateRequest(uint256 requestId, uint8 requestType, address indexed account, address indexed liquidator, uint256 tokenAmount);\\n\\n    function submitDepositRequest(uint168 tokenAmount/* , bool shouldStake */) external returns (uint256 requestId);\\n    function submitWithdrawRequest(uint168 thetaTokenAmount) external returns (uint256 requestId);\\n\\n    function fulfillDepositRequest(uint256 requestId) external returns (uint256 thetaTokensMinted);\\n    function fulfillWithdrawRequest(uint256 requestId) external returns (uint256 tokenWithdrawnAmount);\\n\\n    function liquidateRequest(uint256 requestId) external;\\n\\n    function rebalance() external;\\n\\n    function setRewardRouter(IRewardRouter rewardRouter) external;\\n    function setFulfiller(address newFulfiller) external;\\n    function setMinPoolSkew(uint16 newMinPoolSkewPercentage) external;\\n    function setLiquidityPercentages(uint16 newExtraLiquidityPercentage, uint16 minDexPercentageAllowed) external;\\n    function setRequestDelay(uint256 newRequestDelay) external;\\n    function setDepositCap(uint256 newDepositCap) external;\\n    function setPeriods(uint256 newLockupPeriod, uint256 newLiquidationPeriod) external;\\n    function setMinAmounts(uint256 newMinDepositAmount, uint256 newMinWithdrawAmount) external;\\n    function setDepositHoldings(uint16 newDepositHoldingsPercentage) external;\\n    \\n    function volToken() external view returns (IVolatilityToken);\\n\\n    function totalBalance() external view returns (uint256 balance, uint256 usdcPlatformLiquidity, uint256 intrinsicDEXVolTokenBalance, uint256 volTokenPositionBalance, uint256 dexUSDCAmount, uint256 dexVolTokensAmount);\\n    function getReserves() external view returns (uint256 volTokenAmount, uint256 usdcAmount);\\n    function requests(uint256 requestId) external view returns (uint8 requestType, uint168 tokenAmount, uint32 targetTimestamp, address owner, bool shouldStake);\\n}\\n\",\"keccak256\":\"0xbd27cde6652e9e4b9cd783ba25bafb31ab00210fad67f80733e8901f980f0fa1\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVaultInfo.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IThetaVaultInfo {\\n    function totalVaultLeveragedAmount() external view returns (uint256);\\n    function vaultPositionUnits() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8077ab6dec8937112a2e2567d9b524a10ba640b7891c4bb40729bfbb648c0c1e\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IVolatilityToken.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IPlatform.sol\\\";\\nimport \\\"./IRequestFeesCalculator.sol\\\";\\nimport \\\"./ICVIOracle.sol\\\";\\n\\ninterface IVolatilityToken {\\n\\n    struct Request {\\n        uint8 requestType; // 1 => mint, 2 => burn\\n        uint168 tokenAmount;\\n        uint16 timeDelayRequestFeesPercent;\\n        uint16 maxRequestFeesPercent;\\n        address owner;\\n        uint32 requestTimestamp;\\n        uint32 targetTimestamp;\\n        bool useKeepers;\\n        uint16 maxBuyingPremiumFeePercentage;\\n    }\\n\\n    event SubmitRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 tokenAmount, uint256 submitFeesAmount, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n    event FulfillRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 fulfillFeesAmount, bool isAborted, bool useKeepers, bool keepersCalled, address indexed fulfiller, uint32 fulfillTimestamp);\\n    event LiquidateRequest(uint256 requestId, uint8 requestType, address indexed account, address indexed liquidator, uint256 findersFeeAmount, bool useKeepers, uint32 liquidateTimestamp);\\n    event Mint(uint256 requestId, address indexed account, uint256 tokenAmount, uint256 positionedTokenAmount, uint256 mintedTokens, uint256 openPositionFee, uint256 buyingPremiumFee);\\n    event Burn(uint256 requestId, address indexed account, uint256 tokenAmountBeforeFees, uint256 tokenAmount, uint256 burnedTokens, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function rebaseCVI() external;\\n\\n    function submitMintRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersMintRequest(uint168 tokenAmount, uint32 timeDelay, uint16 maxBuyingPremiumFeePercentage) external returns (uint256 requestId);\\n    function submitBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n\\n    function fulfillMintRequest(uint256 requestId, uint16 maxBuyingPremiumFeePercentage, bool keepersCalled) external returns (uint256 tokensMinted, bool success);\\n    function fulfillBurnRequest(uint256 requestId, bool keepersCalled) external returns (uint256 tokensBurned);\\n\\n    function mintTokens(uint168 tokenAmount) external returns (uint256 mintedTokens);\\n    function burnTokens(uint168 burnAmount) external returns (uint256 tokenAmount);\\n\\n    function liquidateRequest(uint256 requestId) external returns (uint256 findersFeeAmount);\\n\\n    function setMinter(address minter) external;\\n    function setPlatform(IPlatform newPlatform) external;\\n    function setFeesCalculator(IFeesCalculator newFeesCalculator) external;\\n    function setFeesCollector(IFeesCollector newCollector) external;\\n    function setRequestFeesCalculator(IRequestFeesCalculator newRequestFeesCalculator) external;\\n    function setCVIOracle(ICVIOracle newCVIOracle) external;\\n    function setDeviationParameters(uint16 newDeviationPercentagePerSingleRebaseLag, uint16 newMinDeviationPercentage, uint16 newMaxDeviationPercentage) external;\\n    function setVerifyTotalRequestsAmount(bool verifyTotalRequestsAmount) external;\\n    function setMaxTotalRequestsAmount(uint256 maxTotalRequestsAmount) external;\\n    function setCappedRebase(bool newCappedRebase) external;\\n\\n    function setMinRequestId(uint256 newMinRequestId) external;\\n    function setMaxMinRequestIncrements(uint256 newMaxMinRequestIncrements) external;\\n\\n    function setFulfiller(address fulfiller) external;\\n\\n    function setKeepersFeeVaultAddress(address newKeepersFeeVaultAddress) external;\\n\\n    function setMinKeepersAmounts(uint256 newMinKeepersMintAmount, uint256 newMinKeepersBurnAmount) external;\\n\\n    function platform() external view returns (IPlatform);\\n    function requestFeesCalculator() external view returns (IRequestFeesCalculator);\\n    function leverage() external view returns (uint8);\\n    function initialTokenToLPTokenRate() external view returns (uint256);\\n\\n    function requests(uint256 requestId) external view returns (uint8 requestType, uint168 tokenAmount, uint16 timeDelayRequestFeesPercent, uint16 maxRequestFeesPercent,\\n        address owner, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n}\\n\",\"keccak256\":\"0x9b195f997265f6401224845c81cba2a3ac6f2e4f2bf65d8be5027ac1ee3fa5b4\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-staking/contracts/interfaces/IRewardRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8;\\n\\nimport './IRewardTracker.sol';\\nimport './IVester.sol';\\n\\nenum StakedTokenName {\\n  THETA_VAULT,\\n  ES_GOVI,\\n  GOVI,\\n  LENGTH\\n}\\n\\ninterface IRewardRouter {\\n  event StakeToken(address indexed account, address indexed tokenName, uint256 amount);\\n  event UnstakeToken(address indexed account, address indexed tokenName, uint256 amount);\\n\\n  function stake(StakedTokenName _token, uint256 _amount) external;\\n\\n  function stakeForAccount(\\n    StakedTokenName _token,\\n    address _account,\\n    uint256 _amount\\n  ) external;\\n\\n  function batchStakeForAccount(\\n    StakedTokenName _tokenName,\\n    address[] memory _accounts,\\n    uint256[] memory _amounts\\n  ) external;\\n\\n  function unstake(StakedTokenName _token, uint256 _amount) external;\\n\\n  function claim(StakedTokenName _token) external;\\n\\n  function compound(StakedTokenName _tokenName) external;\\n\\n  function compoundForAccount(address _account, StakedTokenName _tokenName) external;\\n\\n  function batchCompoundForAccounts(address[] memory _accounts, StakedTokenName _tokenName) external;\\n\\n  function setRewardTrackers(StakedTokenName[] calldata _tokenNames, IRewardTracker[] calldata _rewardTrackers)\\n    external;\\n\\n  function setVesters(StakedTokenName[] calldata _tokenNames, IVester[] calldata _vesters) external;\\n\\n  function setTokens(StakedTokenName[] calldata _tokenNames, address[] calldata _tokens) external;\\n\\n  function rewardTrackers(StakedTokenName _token) external view returns (IRewardTracker);\\n\\n  function vesters(StakedTokenName _token) external view returns (IVester);\\n\\n  function tokens(StakedTokenName _token) external view returns (address);\\n}\\n\",\"keccak256\":\"0x3d947510a8edfa0e2d7119d5e31a63ef9ff4bef153ce5afc67343aa2cc2a7f79\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-staking/contracts/interfaces/IRewardTracker.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8;\\n\\ninterface IRewardTracker {\\n  event Claim(address indexed receiver, uint256 amount);\\n\\n  function stake(address _depositToken, uint256 _amount) external;\\n\\n  function stakeForAccount(\\n    address _fundingAccount,\\n    address _account,\\n    address _depositToken,\\n    uint256 _amount\\n  ) external;\\n\\n  function unstake(address _depositToken, uint256 _amount) external;\\n\\n  function unstakeForAccount(\\n    address _account,\\n    address _depositToken,\\n    uint256 _amount,\\n    address _receiver\\n  ) external;\\n\\n  function claim(address _receiver) external returns (uint256);\\n\\n  function claimForAccount(address _account, address _receiver) external returns (uint256);\\n\\n  function updateRewards() external;\\n\\n  function depositBalances(address _account, address _depositToken) external view returns (uint256);\\n\\n  function stakedAmounts(address _account) external view returns (uint256);\\n\\n  function averageStakedAmounts(address _account) external view returns (uint256);\\n\\n  function cumulativeRewards(address _account) external view returns (uint256);\\n\\n  function claimable(address _account) external view returns (uint256);\\n\\n  function tokensPerInterval() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x0af272806df1e2440cb18485e6911a67a2a25fe1edadfa602c08a4ef3e2f1f5c\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-staking/contracts/interfaces/IVester.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8;\\n\\nimport './IRewardTracker.sol';\\n\\ninterface IVester {\\n  event Claim(address indexed receiver, uint256 amount);\\n  event Deposit(address indexed account, uint256 amount);\\n  event Withdraw(address indexed account, uint256 claimedAmount, uint256 balance);\\n  event PairTransfer(address indexed from, address indexed to, uint256 value);\\n\\n  function claimForAccount(address _account, address _receiver) external returns (uint256);\\n\\n  function transferStakeValues(address _sender, address _receiver) external;\\n\\n  function setTransferredAverageStakedAmounts(address _account, uint256 _amount) external;\\n\\n  function setTransferredCumulativeRewards(address _account, uint256 _amount) external;\\n\\n  function setCumulativeRewardDeductions(address _account, uint256 _amount) external;\\n\\n  function setBonusRewards(address _account, uint256 _amount) external;\\n\\n  function rewardTracker() external view returns (IRewardTracker);\\n\\n  function claimable(address _account) external view returns (uint256);\\n\\n  function cumulativeClaimAmounts(address _account) external view returns (uint256);\\n\\n  function claimedAmounts(address _account) external view returns (uint256);\\n\\n  function pairAmounts(address _account) external view returns (uint256);\\n\\n  function getVestedAmount(address _account) external view returns (uint256);\\n\\n  function transferredAverageStakedAmounts(address _account) external view returns (uint256);\\n\\n  function transferredCumulativeRewards(address _account) external view returns (uint256);\\n\\n  function cumulativeRewardDeductions(address _account) external view returns (uint256);\\n\\n  function bonusRewards(address _account) external view returns (uint256);\\n\\n  function getMaxVestableAmount(address _account) external view returns (uint256);\\n\\n  function getCombinedAverageStakedAmount(address _account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x60ef693b02dca48ab14d3f352632065fd8c5cd7a49063e2758eec857bc73ce11\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/theta-vault/ThetaVaultRequestFulfillerContracts.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport '@coti-cvi/contracts-cvi/contracts/ThetaVaultRequestFulfiller.sol';\\n\\ncontract CVIUSDCThetaVaultRequestFulfiller is ThetaVaultRequestFulfiller {\\n  constructor() ThetaVaultRequestFulfiller() {}\\n}\\n\\ncontract CVIUSDCThetaVaultRequestFulfiller2X is ThetaVaultRequestFulfiller {\\n  constructor() ThetaVaultRequestFulfiller() {}\\n}\\n\",\"keccak256\":\"0xa80e2d207346ae12b3d58b3dae2b4d375c1cb9d573073db77eb9509b2dea3132\",\"license\":\"GPL-3.0\"}},\"version\":1}",
      "bytecode": "",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806380a765221161008c578063c4d66de811610066578063c4d66de8146101e5578063cdfb2b4e146101f8578063f2fde38b1461020c578063fd84030c1461021f57600080fd5b806380a765221461017a5780638da5cb5b1461018d578063ae022496146101b257600080fd5b806369477ad2116100c857806369477ad21461012b5780636e04ff0d1461013e578063715018a61461015f57806378f9ccf21461016757600080fd5b80633e9bc3c9146100ef5780634585e33b1461010e57806360e3fb6c14610123575b600080fd5b6100f7600181565b60405160ff90911681526020015b60405180910390f35b61012161011c366004610d23565b610232565b005b6100f7600281565b610121610139366004610ccf565b6103e0565b61015161014c366004610d23565b610435565b604051610105929190610e34565b61012161047c565b610121610175366004610d07565b6104b2565b610121610188366004610cac565b6104fa565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610105565b6101d56101c0366004610cac565b60666020526000908152604090205460ff1681565b6040519015158152602001610105565b6101216101f3366004610cac565b610546565b6065546101d590600160a01b900460ff1681565b61012161021a366004610cac565b6105df565b60655461019a906001600160a01b031681565b606554600160a01b900460ff16158061025a57503360009081526066602052604090205460ff165b6102995760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b60006102a361067a565b9050806000815181106102c657634e487b7160e01b600052603260045260246000fd5b60200260200101516000141561031e5760405162461bcd60e51b815260206004820152601760248201527f4e6f2066756c66696c6c61626c652072657175657374730000000000000000006044820152606401610290565b6000805b825181101561038c57600083828151811061034d57634e487b7160e01b600052603260045260246000fd5b602002602001015190508060001461037957600061036a82610915565b9050801561037757600193505b505b508061038481610f8e565b915050610322565b50806103da5760405162461bcd60e51b815260206004820152601a60248201527f4661696c656420746f2066756c66696c6c2072657175657374730000000000006044820152606401610290565b50505050565b6033546001600160a01b0316331461040a5760405162461bcd60e51b815260040161029090610edf565b6001600160a01b03919091166000908152606660205260409020805460ff1916911515919091179055565b60006060600061044361067a565b90508060008151811061046657634e487b7160e01b600052603260045260246000fd5b6020026020010151600014159250509250929050565b6033546001600160a01b031633146104a65760405162461bcd60e51b815260040161029090610edf565b6104b06000610abb565b565b6033546001600160a01b031633146104dc5760405162461bcd60e51b815260040161029090610edf565b60658054911515600160a01b0260ff60a01b19909216919091179055565b6033546001600160a01b031633146105245760405162461bcd60e51b815260040161029090610edf565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b60006105526001610b0d565b9050801561056a576000805461ff0019166101001790555b610572610b95565b606580546001600160a01b0384166001600160a81b031990911617600160a01b17905580156105db576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6033546001600160a01b031633146106095760405162461bcd60e51b815260040161029090610edf565b6001600160a01b03811661066e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610290565b61067781610abb565b50565b60606000606560009054906101000a90046001600160a01b03166001600160a01b0316636a84a9856040518163ffffffff1660e01b815260040160206040518083038186803b1580156106cc57600080fd5b505afa1580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190610d90565b90506000606560009054906101000a90046001600160a01b03166001600160a01b031663a5cfa15c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561075657600080fd5b505afa15801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190610d90565b90506000606560009054906101000a90046001600160a01b03166001600160a01b03166376b27f336040518163ffffffff1660e01b815260040160206040518083038186803b1580156107e057600080fd5b505afa1580156107f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108189190610d90565b905060006108268383610f5f565b841061083b576108368383610f5f565b61083d565b835b90506108498282610f77565b610854906001610f5f565b67ffffffffffffffff81111561087a57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156108a3578160200160208202803683370190505b5094506000825b8281101561090c576108bb81610bc4565b156108fa57808783815181106108e157634e487b7160e01b600052603260045260246000fd5b6020908102919091010152816108f681610f8e565b9250505b8061090481610f8e565b9150506108aa565b50505050505090565b60655460405163103a258b60e31b8152600481018390526000916001600160a01b031690829082906381d12c589060240160a06040518083038186803b15801561095e57600080fd5b505afa158015610972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109969190610da8565b5092935050505060ff811660011415610a2957604051631c473c7f60e31b8152600481018590526001600160a01b0383169063e239e3f890602401602060405180830381600087803b1580156109eb57600080fd5b505af11580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a239190610d90565b50610ab1565b60ff811660021415610ab15760405163f21d5bbf60e01b8152600481018590526001600160a01b0383169063f21d5bbf90602401602060405180830381600087803b158015610a7757600080fd5b505af1158015610a8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaf9190610d90565b505b5060019392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615610b54578160ff166001148015610b305750303b155b610b4c5760405162461bcd60e51b815260040161029090610e91565b506000919050565b60005460ff808416911610610b7b5760405162461bcd60e51b815260040161029090610e91565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16610bbc5760405162461bcd60e51b815260040161029090610f14565b6104b0610c7c565b60655460405163103a258b60e31b815260048101839052600091829182916001600160a01b0316906381d12c589060240160a06040518083038186803b158015610c0d57600080fd5b505afa158015610c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c459190610da8565b50909450925050506001600160a01b03811615801590610c6b57508163ffffffff164210155b15610c7557600192505b5050919050565b600054610100900460ff16610ca35760405162461bcd60e51b815260040161029090610f14565b6104b033610abb565b600060208284031215610cbd578081fd5b8135610cc881610fbf565b9392505050565b60008060408385031215610ce1578081fd5b8235610cec81610fbf565b91506020830135610cfc81610fd4565b809150509250929050565b600060208284031215610d18578081fd5b8135610cc881610fd4565b60008060208385031215610d35578182fd5b823567ffffffffffffffff80821115610d4c578384fd5b818501915085601f830112610d5f578384fd5b813581811115610d6d578485fd5b866020828501011115610d7e578485fd5b60209290920196919550909350505050565b600060208284031215610da1578081fd5b5051919050565b600080600080600060a08688031215610dbf578081fd5b855160ff81168114610dcf578182fd5b60208701519095506001600160a81b0381168114610deb578182fd5b604087015190945063ffffffff81168114610e04578182fd5b6060870151909350610e1581610fbf565b6080870151909250610e2681610fd4565b809150509295509295909350565b8215158152600060206040818401528351806040850152825b81811015610e6957858101830151858201606001528201610e4d565b81811115610e7a5783606083870101525b50601f01601f191692909201606001949350505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115610f7257610f72610fa9565b500190565b600082821015610f8957610f89610fa9565b500390565b6000600019821415610fa257610fa2610fa9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461067757600080fd5b801515811461067757600080fdfea26469706673582212200e0e7c17b13c17474e2fdc4e826c04833e661e134bcbb5c2adc7c1740b24a8b164736f6c63430008040033",
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 33671,
            "contract": "contracts/theta-vault/ThetaVaultRequestFulfillerContracts.sol:CVIUSDCThetaVaultRequestFulfiller",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 33674,
            "contract": "contracts/theta-vault/ThetaVaultRequestFulfillerContracts.sol:CVIUSDCThetaVaultRequestFulfiller",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 36528,
            "contract": "contracts/theta-vault/ThetaVaultRequestFulfillerContracts.sol:CVIUSDCThetaVaultRequestFulfiller",
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 33551,
            "contract": "contracts/theta-vault/ThetaVaultRequestFulfillerContracts.sol:CVIUSDCThetaVaultRequestFulfiller",
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address"
          },
          {
            "astId": 33663,
            "contract": "contracts/theta-vault/ThetaVaultRequestFulfillerContracts.sol:CVIUSDCThetaVaultRequestFulfiller",
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 9468,
            "contract": "contracts/theta-vault/ThetaVaultRequestFulfillerContracts.sol:CVIUSDCThetaVaultRequestFulfiller",
            "label": "requestManager",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRequestManager)17839"
          },
          {
            "astId": 9470,
            "contract": "contracts/theta-vault/ThetaVaultRequestFulfillerContracts.sol:CVIUSDCThetaVaultRequestFulfiller",
            "label": "enableWhitelist",
            "offset": 20,
            "slot": "101",
            "type": "t_bool"
          },
          {
            "astId": 9474,
            "contract": "contracts/theta-vault/ThetaVaultRequestFulfillerContracts.sol:CVIUSDCThetaVaultRequestFulfiller",
            "label": "fulfillers",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRequestManager)17839": {
            "encoding": "inplace",
            "label": "contract IRequestManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "creationBlock": 38037882,
      "history": []
    },
    "CVIUSDCThetaVaultRequestFulfiller_Proxy": {
      "address": "0x0f2962C9188D7852a8bDeB288ab95e5a575C641F",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0x7da24cc904783d9956e76bad8fdb4e69d2d659d9f51736a86d22353377241c21",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x0f2962C9188D7852a8bDeB288ab95e5a575C641F",
        "transactionIndex": 2,
        "gasUsed": "5175434",
        "logsBloom": "0x
        "blockHash": "0x2b9695be9d6a09263a7097c590de2ded714bc5d67555fb53fcaae8757d77ba18",
        "transactionHash": "0x7da24cc904783d9956e76bad8fdb4e69d2d659d9f51736a86d22353377241c21",
        "logs": [
          {
            "transactionIndex": 2,
            "blockNumber": 38037898,
            "transactionHash": "0x7da24cc904783d9956e76bad8fdb4e69d2d659d9f51736a86d22353377241c21",
            "address": "0x0f2962C9188D7852a8bDeB288ab95e5a575C641F",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x000000000000000000000000500b8f46c42b5d6ae78dc3034e45dddf9de72523"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x2b9695be9d6a09263a7097c590de2ded714bc5d67555fb53fcaae8757d77ba18"
          },
          {
            "transactionIndex": 2,
            "blockNumber": 38037898,
            "transactionHash": "0x7da24cc904783d9956e76bad8fdb4e69d2d659d9f51736a86d22353377241c21",
            "address": "0x0f2962C9188D7852a8bDeB288ab95e5a575C641F",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 1,
            "blockHash": "0x2b9695be9d6a09263a7097c590de2ded714bc5d67555fb53fcaae8757d77ba18"
          },
          {
            "transactionIndex": 2,
            "blockNumber": 38037898,
            "transactionHash": "0x7da24cc904783d9956e76bad8fdb4e69d2d659d9f51736a86d22353377241c21",
            "address": "0x0f2962C9188D7852a8bDeB288ab95e5a575C641F",
            "topics": [
              "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "logIndex": 2,
            "blockHash": "0x2b9695be9d6a09263a7097c590de2ded714bc5d67555fb53fcaae8757d77ba18"
          },
          {
            "transactionIndex": 2,
            "blockNumber": 38037898,
            "transactionHash": "0x7da24cc904783d9956e76bad8fdb4e69d2d659d9f51736a86d22353377241c21",
            "address": "0x0f2962C9188D7852a8bDeB288ab95e5a575C641F",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
            ],
            "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d2669586e17fc93773cc637becfa983525501eb",
            "logIndex": 3,
            "blockHash": "0x2b9695be9d6a09263a7097c590de2ded714bc5d67555fb53fcaae8757d77ba18"
          }
        ],
        "blockNumber": 38037898,
        "cumulativeGasUsed": "5400486",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0x500B8f46C42B5d6AE78DC3034E45DdDf9de72523",
        "0x9D2669586E17fC93773cc637becfA983525501Eb",
        "0xc4d66de8000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506"
      ],
      "numDeployments": 1,
      "solcInputHash": "0e89febeebc7444140de8e67c9067d2c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x93b4e21c931252739a1ec13ea31d3d35a5c068be3163ccab83e4d70c40355f03\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view virtual returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(Address.isContract(IBeacon(newBeacon).implementation()), \\\"ERC1967: beacon implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17668652127feebed0ce8d9431ef95ccc8c4292f03e3b8cf06c6ca16af396633\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xd5d1fd16e9faff7fcb3a52e02a8d49156f42a38a03f07b5f1810c21c2149a8ab\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3777e696b62134e6177440dbe6e6601c0c156a443f57167194b67e75527439de\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
      "deployedBytecode": "0x60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033",
      "devdoc": {
        "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
        "kind": "dev",
        "methods": {
          "admin()": {
            "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
          },
          "constructor": {
            "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
          },
          "implementation()": {
            "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      },
      "creationBlock": 38037898,
      "history": []
    },
    "CVIUSDCThetaVault_Implementation": {
      "address": "0x569724E2Ef84aa42a06f86F51aAC75d813B90B2F",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalUSDCAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "platformLiquidityAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dexVolTokenUSDCAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dexVolTokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dexUSDCAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "mintedThetaTokens",
              "type": "uint256"
            }
          ],
          "name": "FulfillDeposit",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalUSDCAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "platformLiquidityAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dexVolTokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dexUSDCVolTokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dexUSDCAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "burnedThetaTokens",
              "type": "uint256"
            }
          ],
          "name": "FulfillWithdraw",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "liquidator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ],
          "name": "LiquidateRequest",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "targetTimestamp",
              "type": "uint32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalUSDCBalance",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            }
          ],
          "name": "SubmitRequest",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEPOSIT_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MAX_PERCENTAGE",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "PRECISION_DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "UNISWAP_REMOVE_MAX_FEE_PERCENTAGE",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "WITHDRAW_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "depositCap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "depositHoldingsPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "extraLiqidityPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            }
          ],
          "name": "fulfillDepositRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "thetaTokensMinted",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            }
          ],
          "name": "fulfillWithdrawRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenWithdrawnAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fulfiller",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getReserves",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "volTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "usdcAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "initialTokenToThetaTokenRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_initialTokenToThetaTokenRate",
              "type": "uint256"
            },
            {
              "internalType": "contract IPlatform",
              "name": "_platform",
              "type": "address"
            },
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            },
            {
              "internalType": "contract IRewardRouter",
              "name": "_rewardRouter",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "contract IUniswapV2Router02",
              "name": "_router",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_lpTokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_lpTokenSymbolName",
              "type": "string"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "lastDepositTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            }
          ],
          "name": "liquidateRequest",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "liquidationPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lockupPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxMinRequestIncrements",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minDepositAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minDexPercentageAllowed",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minPoolSkewPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minRequestId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minWithdrawAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "nextRequestId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "platform",
          "outputs": [
            {
              "internalType": "contract IPlatform",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rebalance",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "requestDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "requests",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "internalType": "uint168",
              "name": "tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "targetTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "shouldStake",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rewardRouter",
          "outputs": [
            {
              "internalType": "contract IRewardRouter",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "router",
          "outputs": [
            {
              "internalType": "contract IUniswapV2Router02",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newDepositCap",
              "type": "uint256"
            }
          ],
          "name": "setDepositCap",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newDepositHoldingsPercentage",
              "type": "uint16"
            }
          ],
          "name": "setDepositHoldings",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newFulfiller",
              "type": "address"
            }
          ],
          "name": "setFulfiller",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newExtraLiquidityPercentage",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_minDexPercentageAllowed",
              "type": "uint16"
            }
          ],
          "name": "setLiquidityPercentages",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMinDepositAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_newMinWithdrawAmount",
              "type": "uint256"
            }
          ],
          "name": "setMinAmounts",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newMinPoolSkewPercentage",
              "type": "uint16"
            }
          ],
          "name": "setMinPoolSkew",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newLockupPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_newLiquidationPeriod",
              "type": "uint256"
            }
          ],
          "name": "setPeriods",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newRequestDelay",
              "type": "uint256"
            }
          ],
          "name": "setRequestDelay",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRewardRouter",
              "name": "_rewardRouter",
              "type": "address"
            }
          ],
          "name": "setRewardRouter",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            }
          ],
          "name": "submitDepositRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_thetaTokenAmount",
              "type": "uint168"
            }
          ],
          "name": "submitWithdrawRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "usdcPlatformLiquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "intrinsicDEXVolTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "volTokenPositionBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dexUSDCAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dexVolTokensAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalDepositRequestsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalHoldingsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalVaultLeveragedAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "vaultPositionUnits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "volToken",
          "outputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0x5f2e72b10e1f877984c0b0c6e0dc9faeb46e9958dbdedd51bb50235073dd7cf8",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x569724E2Ef84aa42a06f86F51aAC75d813B90B2F",
        "transactionIndex": 3,
        "gasUsed": "29950122",
        "logsBloom": "0x
        "blockHash": "0xcfb15fd67a933b21ae2f24a51c9aa3683efcb004c75d54f269c534d4413fbf8a",
        "transactionHash": "0x5f2e72b10e1f877984c0b0c6e0dc9faeb46e9958dbdedd51bb50235073dd7cf8",
        "logs": [],
        "blockNumber": 62435844,
        "cumulativeGasUsed": "31918483",
        "status": 1,
        "byzantium": true
      },
      "args": [],
      "numDeployments": 3,
      "solcInputHash": "bb48d386e0055c830c90e368ac7a790f",
      "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUSDCAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformLiquidityAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dexVolTokenUSDCAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dexVolTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dexUSDCAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintedThetaTokens\",\"type\":\"uint256\"}],\"name\":\"FulfillDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUSDCAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformLiquidityAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dexVolTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dexUSDCVolTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dexUSDCAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedThetaTokens\",\"type\":\"uint256\"}],\"name\":\"FulfillWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidateRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"targetTimestamp\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUSDCBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"SubmitRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEPOSIT_REQUEST_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_REMOVE_MAX_FEE_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_REQUEST_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositHoldingsPercentage\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extraLiqidityPercentage\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"fulfillDepositRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"thetaTokensMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"fulfillWithdrawRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenWithdrawnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fulfiller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"volTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialTokenToThetaTokenRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialTokenToThetaTokenRate\",\"type\":\"uint256\"},{\"internalType\":\"contract IPlatform\",\"name\":\"_platform\",\"type\":\"address\"},{\"internalType\":\"contract IVolatilityToken\",\"name\":\"_volToken\",\"type\":\"address\"},{\"internalType\":\"contract IRewardRouter\",\"name\":\"_rewardRouter\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_lpTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_lpTokenSymbolName\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastDepositTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"liquidateRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockupPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMinRequestIncrements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDepositAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDexPercentageAllowed\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPoolSkewPercentage\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWithdrawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platform\",\"outputs\":[{\"internalType\":\"contract IPlatform\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"internalType\":\"uint168\",\"name\":\"tokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint32\",\"name\":\"targetTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"shouldStake\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRouter\",\"outputs\":[{\"internalType\":\"contract IRewardRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newDepositCap\",\"type\":\"uint256\"}],\"name\":\"setDepositCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newDepositHoldingsPercentage\",\"type\":\"uint16\"}],\"name\":\"setDepositHoldings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFulfiller\",\"type\":\"address\"}],\"name\":\"setFulfiller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newExtraLiquidityPercentage\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_minDexPercentageAllowed\",\"type\":\"uint16\"}],\"name\":\"setLiquidityPercentages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMinDepositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newMinWithdrawAmount\",\"type\":\"uint256\"}],\"name\":\"setMinAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newMinPoolSkewPercentage\",\"type\":\"uint16\"}],\"name\":\"setMinPoolSkew\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLockupPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newLiquidationPeriod\",\"type\":\"uint256\"}],\"name\":\"setPeriods\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRequestDelay\",\"type\":\"uint256\"}],\"name\":\"setRequestDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRewardRouter\",\"name\":\"_rewardRouter\",\"type\":\"address\"}],\"name\":\"setRewardRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"_tokenAmount\",\"type\":\"uint168\"}],\"name\":\"submitDepositRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"_thetaTokenAmount\",\"type\":\"uint168\"}],\"name\":\"submitWithdrawRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdcPlatformLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intrinsicDEXVolTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volTokenPositionBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dexUSDCAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dexVolTokensAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDepositRequestsAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalHoldingsAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVaultLeveragedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultPositionUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"volToken\",\"outputs\":[{\"internalType\":\"contract IVolatilityToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/theta-vault/ThetaVaultContracts.sol\":\"CVIUSDCThetaVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@coti-cvi/contracts-cvi/contracts/ThetaVault.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8;\\n\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\n\\nimport './interfaces/IThetaVault.sol';\\nimport './interfaces/IRequestManager.sol';\\nimport './external/IUniswapV2Pair.sol';\\nimport './external/IUniswapV2Router02.sol';\\nimport './external/IUniswapV2Factory.sol';\\n\\ncontract ThetaVault is Initializable, IThetaVault, IRequestManager, OwnableUpgradeable, ERC20Upgradeable, ReentrancyGuardUpgradeable\\n{\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    struct Request {\\n        uint8 requestType; // 1 => deposit, 2 => withdraw\\n        uint168 tokenAmount;\\n        uint32 targetTimestamp;\\n        address owner;\\n        bool shouldStake;\\n    }\\n\\n    uint8 public constant DEPOSIT_REQUEST_TYPE = 1;\\n    uint8 public constant WITHDRAW_REQUEST_TYPE = 2;\\n\\n    uint256 public constant PRECISION_DECIMALS = 1e10;\\n    uint16 public constant MAX_PERCENTAGE = 10000;\\n\\n    uint16 public constant UNISWAP_REMOVE_MAX_FEE_PERCENTAGE = 5;\\n\\n    address public fulfiller;\\n\\n    IERC20Upgradeable public token;\\n    IPlatform public platform;\\n    IVolatilityToken public override volToken;\\n    IUniswapV2Router02 public router;\\n\\n    uint256 public override nextRequestId;\\n    mapping(uint256 => Request) public override requests;\\n    mapping(address => uint256) public lastDepositTimestamp;\\n\\n    uint256 public initialTokenToThetaTokenRate;\\n\\n    uint256 public totalDepositRequestsAmount;\\n    uint256 public override totalVaultLeveragedAmount; // Obsolete\\n\\n    uint16 public minPoolSkewPercentage;\\n    uint16 public override extraLiqidityPercentage;\\n    uint256 public depositCap;\\n    uint256 public requestDelay;\\n    uint256 public lockupPeriod;\\n    uint256 public liquidationPeriod;\\n\\n    uint256 public override minRequestId;\\n    uint256 public override maxMinRequestIncrements;\\n    uint256 public minDepositAmount;\\n    uint256 public minWithdrawAmount;\\n\\n    uint256 public totalHoldingsAmount;\\n    uint16 public depositHoldingsPercentage;\\n\\n    uint16 public override minDexPercentageAllowed;\\n\\n    IRewardRouter public rewardRouter;\\n\\n    function initialize(uint256 _initialTokenToThetaTokenRate, IPlatform _platform, IVolatilityToken _volToken, IRewardRouter _rewardRouter, IERC20Upgradeable _token, IUniswapV2Router02 _router, string memory _lpTokenName, string memory _lpTokenSymbolName) public initializer {\\n        require(address(_platform) != address(0));\\n        require(address(_volToken) != address(0));\\n        require(address(_token) != address(0));\\n        require(address(_router) != address(0));\\n        require(_initialTokenToThetaTokenRate > 0);\\n\\n        nextRequestId = 1;\\n        minRequestId = 1;\\n        initialTokenToThetaTokenRate = _initialTokenToThetaTokenRate;\\n        minPoolSkewPercentage = 300;\\n        extraLiqidityPercentage = 1500;\\n        depositCap = type(uint256).max;\\n        requestDelay = 0.5 hours;\\n        lockupPeriod = 24 hours;\\n        liquidationPeriod = 3 days;\\n        maxMinRequestIncrements = 30;\\n        minDepositAmount = 100000;\\n        minWithdrawAmount = 10 ** 16;\\n        depositHoldingsPercentage = 1500;\\n        minDexPercentageAllowed = 3000;\\n\\n        ReentrancyGuardUpgradeable.__ReentrancyGuard_init();\\n        OwnableUpgradeable.__Ownable_init();\\n        ERC20Upgradeable.__ERC20_init(_lpTokenName, _lpTokenSymbolName);\\n\\n        platform = _platform;\\n        token = _token;\\n        volToken = _volToken;\\n        router = _router;\\n        rewardRouter = _rewardRouter;\\n\\n        token.safeApprove(address(platform), type(uint256).max);\\n        token.safeApprove(address(router), type(uint256).max);\\n        token.safeApprove(address(volToken), type(uint256).max);\\n        IERC20Upgradeable(address(volToken)).safeApprove(address(router), type(uint256).max);\\n        IERC20Upgradeable(address(getPair())).safeApprove(address(router), type(uint256).max);\\n        IERC20Upgradeable(address(volToken)).safeApprove(address(volToken), type(uint256).max);\\n    }\\n\\n    function name() public view virtual override returns (string memory) {\\n        return 'Theta CVI LP';\\n    }\\n\\n    function symbol() public view virtual override returns (string memory) {\\n        return 'T-CVI-LP';\\n    }\\n\\n    function submitDepositRequest(uint168 _tokenAmount/* , bool _shouldStake */) external override returns (uint256 requestId) {\\n        require(_tokenAmount >= minDepositAmount, 'Too small');\\n        // require(!_shouldStake || address(rewardRouter) != address(0), 'Router not set');\\n        return submitRequest(DEPOSIT_REQUEST_TYPE, _tokenAmount, false);\\n    }\\n\\n    function submitWithdrawRequest(uint168 _thetaTokenAmount) external override returns (uint256 requestId) {\\n        require(_thetaTokenAmount >= minWithdrawAmount, 'Too small');\\n        require(lastDepositTimestamp[msg.sender] + lockupPeriod <= block.timestamp, 'Deposit locked');\\n        return submitRequest(WITHDRAW_REQUEST_TYPE, _thetaTokenAmount, false);\\n    }\\n\\n    struct FulfillDepositLocals {\\n        uint256 mintVolTokenUSDCAmount;\\n        uint256 addedLiquidityUSDCAmount;\\n        uint256 mintedVolTokenAmount;\\n        uint256 platformLiquidityAmount;\\n        uint256 holdingsAmount;\\n    }\\n\\n    function fulfillDepositRequest(uint256 _requestId) external override returns (uint256 thetaTokensMinted) {\\n        uint168 amountToFulfill;\\n        address owner;\\n        uint256 volTokenPositionBalance;\\n\\n        bool shouldStake = requests[_requestId].shouldStake;\\n        {\\n            bool wasLiquidated;\\n            (amountToFulfill, owner, wasLiquidated) = preFulfillRequest(_requestId, requests[_requestId], DEPOSIT_REQUEST_TYPE);\\n\\n            if (wasLiquidated) {\\n                return 0;\\n            }\\n\\n            deleteRequest(_requestId);\\n\\n            // Note: reverts if pool is skewed after arbitrage, as intended\\n            uint256 balance;\\n            (balance, volTokenPositionBalance) = _rebalance(amountToFulfill);\\n\\n            // Mint theta lp tokens\\n            if (totalSupply() > 0 && balance > 0) {\\n                thetaTokensMinted = (amountToFulfill * totalSupply()) / balance;\\n            } else {\\n                thetaTokensMinted = amountToFulfill * initialTokenToThetaTokenRate;\\n            }\\n        }\\n\\n        require(thetaTokensMinted > 0); // 'Too few tokens'\\n        _mint(owner, thetaTokensMinted);\\n\\n        lastDepositTimestamp[owner] = block.timestamp;\\n\\n        // Avoid crashing in case an old request existed when totalDepositRequestsAmount was initialized\\n        if (totalDepositRequestsAmount < amountToFulfill) {\\n            totalDepositRequestsAmount = 0;\\n        } else {\\n            totalDepositRequestsAmount -= amountToFulfill;\\n        }\\n\\n        FulfillDepositLocals memory locals = deposit(amountToFulfill, volTokenPositionBalance);\\n\\n        if (shouldStake) {\\n            rewardRouter.stakeForAccount(StakedTokenName.THETA_VAULT, owner, thetaTokensMinted);\\n        }\\n\\n        emit FulfillDeposit(_requestId, owner, amountToFulfill, locals.platformLiquidityAmount, locals.mintVolTokenUSDCAmount, locals.mintedVolTokenAmount, \\n            locals.addedLiquidityUSDCAmount, thetaTokensMinted);\\n    }\\n\\n    struct FulfillWithdrawLocals {\\n        uint256 withdrawnLiquidity;\\n        uint256 platformLPTokensToRemove;\\n        uint256 removedVolTokensAmount;\\n        uint256 dexRemovedUSDC;\\n        uint256 burnedVolTokensUSDCAmount;\\n    }\\n\\n    function fulfillWithdrawRequest(uint256 _requestId) external override returns (uint256 tokenWithdrawnAmount) {\\n        (uint168 amountToFulfill, address owner, bool wasLiquidated) = preFulfillRequest(_requestId, requests[_requestId], WITHDRAW_REQUEST_TYPE);\\n\\n        if (!wasLiquidated) {\\n            _rebalance(0);\\n\\n            FulfillWithdrawLocals memory locals;\\n\\n            locals.platformLPTokensToRemove = (amountToFulfill * IERC20Upgradeable(address(platform)).balanceOf(address(this))) / totalSupply();\\n            uint256 poolLPTokensAmount = (amountToFulfill * IERC20Upgradeable(address(getPair())).balanceOf(address(this))) /\\n                totalSupply();\\n            if (poolLPTokensAmount > 0) {\\n                (locals.removedVolTokensAmount, locals.dexRemovedUSDC) = router.removeLiquidity(address(volToken), address(token), poolLPTokensAmount, 0, 0, address(this), block.timestamp);\\n                locals.burnedVolTokensUSDCAmount = burnVolTokens(locals.removedVolTokensAmount);\\n            }\\n\\n            (, locals.withdrawnLiquidity) = platform.withdrawLPTokens(locals.platformLPTokensToRemove);\\n\\n            uint256 withdrawHoldings = totalHoldingsAmount * amountToFulfill / totalSupply();\\n            tokenWithdrawnAmount = withdrawHoldings + locals.withdrawnLiquidity + locals.dexRemovedUSDC + locals.burnedVolTokensUSDCAmount;\\n            totalHoldingsAmount -= withdrawHoldings;\\n\\n            _burn(address(this), amountToFulfill);\\n            deleteRequest(_requestId);\\n\\n            token.safeTransfer(owner, tokenWithdrawnAmount);\\n\\n            emit FulfillWithdraw(_requestId, owner, tokenWithdrawnAmount, locals.withdrawnLiquidity, locals.removedVolTokensAmount, locals.burnedVolTokensUSDCAmount, locals.dexRemovedUSDC, amountToFulfill);\\n        }\\n    }\\n\\n    function liquidateRequest(uint256 _requestId) external override nonReentrant {\\n        Request memory request = requests[_requestId];\\n        require(request.requestType != 0); // 'Request id not found'\\n        require(isLiquidable(_requestId), 'Not liquidable');\\n\\n        _liquidateRequest(_requestId);\\n    }\\n\\n    function rebalance() external override onlyOwner {\\n        _rebalance(0);\\n    }\\n\\n    function _rebalance(uint256 _arbitrageAmount) private returns (uint256 balance, uint256 volTokenPositionBalance) {\\n        // Note: reverts if pool is skewed, as intended\\n        uint256 intrinsicDEXVolTokenBalance;\\n        uint256 usdcPlatformLiquidity;\\n        uint256 dexUSDCAmount;\\n        (balance, usdcPlatformLiquidity, intrinsicDEXVolTokenBalance, volTokenPositionBalance, dexUSDCAmount) = totalBalanceWithArbitrage(_arbitrageAmount);\\n\\n        uint256 adjustedPositionUnits = platform.totalPositionUnitsAmount() * (MAX_PERCENTAGE + extraLiqidityPercentage) / MAX_PERCENTAGE;\\n        uint256 totalLeveragedTokensAmount = platform.totalLeveragedTokensAmount();\\n\\n        // No need to rebalance if no position units for vault (i.e. dex not initialized yet)\\n        if (dexUSDCAmount > 0) {\\n            if (totalLeveragedTokensAmount > adjustedPositionUnits + minDepositAmount) {\\n                uint256 extraLiquidityAmount = totalLeveragedTokensAmount - adjustedPositionUnits;\\n\\n                (, uint256 withdrawnAmount) = platform.withdraw(extraLiquidityAmount, type(uint256).max);\\n\\n                deposit(withdrawnAmount, volTokenPositionBalance);\\n            } else if (totalLeveragedTokensAmount + minDepositAmount < adjustedPositionUnits) {\\n                uint256 liquidityMissing = adjustedPositionUnits - totalLeveragedTokensAmount;\\n\\n                if (intrinsicDEXVolTokenBalance + dexUSDCAmount > liquidityMissing && \\n                    (intrinsicDEXVolTokenBalance + dexUSDCAmount - liquidityMissing) * MAX_PERCENTAGE / balance >= minDexPercentageAllowed) {\\n                    uint256 poolLPTokensToRemove = liquidityMissing * IERC20Upgradeable(address(getPair())).totalSupply() / (intrinsicDEXVolTokenBalance + dexUSDCAmount);\\n\\n                    (uint256 removedVolTokensAmount, uint256 dexRemovedUSDC) = router.removeLiquidity(address(volToken), address(token), poolLPTokensToRemove, 0, 0, address(this), block.timestamp);\\n                    uint256 totalUSDC = burnVolTokens(removedVolTokensAmount) + dexRemovedUSDC;\\n\\n                    platform.deposit(totalUSDC, 0);\\n                }\\n            }\\n\\n            (balance,, intrinsicDEXVolTokenBalance, volTokenPositionBalance, dexUSDCAmount,) = totalBalance();\\n        }\\n    }\\n\\n    function vaultPositionUnits() external view override returns (uint256) {\\n        (uint256 dexVolTokensAmount, ) = getReserves();\\n        IERC20Upgradeable poolPair = IERC20Upgradeable(address(getPair()));\\n        if (IERC20Upgradeable(address(volToken)).totalSupply() == 0 || poolPair.totalSupply() == 0) {\\n            return 0;\\n        }\\n\\n        uint256 dexVaultVolTokensAmount = (dexVolTokensAmount * poolPair.balanceOf(address(this))) / poolPair.totalSupply();\\n\\n        (uint256 totalPositionUnits, , , , ) = platform.positions(address(volToken));\\n        return totalPositionUnits * dexVaultVolTokensAmount / IERC20Upgradeable(address(volToken)).totalSupply();\\n    }\\n\\n    function setRewardRouter(IRewardRouter _rewardRouter) external override onlyOwner {\\n        rewardRouter = _rewardRouter;\\n    }\\n\\n    function setFulfiller(address _newFulfiller) external override onlyOwner {\\n        fulfiller = _newFulfiller;\\n    }\\n\\n    function setMinAmounts(uint256 _newMinDepositAmount, uint256 _newMinWithdrawAmount) external override onlyOwner {\\n        minDepositAmount = _newMinDepositAmount;\\n        minWithdrawAmount = _newMinWithdrawAmount;\\n    }\\n\\n    function setDepositHoldings(uint16 _newDepositHoldingsPercentage) external override onlyOwner {\\n        depositHoldingsPercentage = _newDepositHoldingsPercentage;\\n    }\\n\\n    function setMinPoolSkew(uint16 _newMinPoolSkewPercentage) external override onlyOwner {\\n        minPoolSkewPercentage = _newMinPoolSkewPercentage;\\n    }\\n\\n    function setLiquidityPercentages(uint16 _newExtraLiquidityPercentage, uint16 _minDexPercentageAllowed) external override onlyOwner {\\n        extraLiqidityPercentage = _newExtraLiquidityPercentage;\\n        minDexPercentageAllowed = _minDexPercentageAllowed;\\n    }\\n\\n    function setRequestDelay(uint256 _newRequestDelay) external override onlyOwner {\\n        requestDelay = _newRequestDelay;\\n    }\\n\\n    function setDepositCap(uint256 _newDepositCap) external override onlyOwner {\\n        depositCap = _newDepositCap;\\n    }\\n\\n    function setPeriods(uint256 _newLockupPeriod, uint256 _newLiquidationPeriod) external override onlyOwner {\\n        lockupPeriod = _newLockupPeriod;\\n        liquidationPeriod = _newLiquidationPeriod;\\n    }\\n\\n    function totalBalance() public view override returns (uint256 balance, uint256 usdcPlatformLiquidity, uint256 intrinsicDEXVolTokenBalance, uint256 volTokenPositionBalance, uint256 dexUSDCAmount, uint256 dexVolTokensAmount) {\\n        (intrinsicDEXVolTokenBalance, volTokenPositionBalance, dexUSDCAmount, dexVolTokensAmount,) = calculatePoolValue();\\n        (balance, usdcPlatformLiquidity) = _totalBalance(intrinsicDEXVolTokenBalance, dexUSDCAmount);\\n    }\\n\\n    function totalBalanceWithArbitrage(uint256 _usdcArbitrageAmount) private returns (uint256 balance, uint256 usdcPlatformLiquidity, uint256 intrinsicDEXVolTokenBalance, uint256 volTokenPositionBalance, uint256 dexUSDCAmount) {\\n        (intrinsicDEXVolTokenBalance, volTokenPositionBalance, dexUSDCAmount) = \\n            calculatePoolValueWithArbitrage(_usdcArbitrageAmount);\\n        (balance, usdcPlatformLiquidity) = _totalBalance(intrinsicDEXVolTokenBalance, dexUSDCAmount);\\n    }\\n\\n    function _totalBalance(uint256 _intrinsicDEXVolTokenBalance, uint256 _dexUSDCAmount) private view returns (uint256 balance, uint256 usdcPlatformLiquidity)\\n    {\\n        IERC20Upgradeable poolPair = IERC20Upgradeable(address(getPair()));\\n        uint256 poolLPTokens = poolPair.balanceOf(address(this));\\n        uint256 vaultIntrinsicDEXVolTokenBalance = 0;\\n        uint256 vaultDEXUSDCAmount = 0;\\n\\n        if (poolLPTokens > 0 && poolPair.totalSupply() > 0) {\\n            vaultIntrinsicDEXVolTokenBalance = (_intrinsicDEXVolTokenBalance * poolLPTokens) / poolPair.totalSupply();\\n            vaultDEXUSDCAmount = (_dexUSDCAmount * poolLPTokens) / poolPair.totalSupply();\\n        }\\n\\n        usdcPlatformLiquidity = getUSDCPlatformLiquidity();\\n        balance = totalHoldingsAmount + usdcPlatformLiquidity + vaultIntrinsicDEXVolTokenBalance + vaultDEXUSDCAmount;\\n    }\\n\\n    function deposit(uint256 _tokenAmount, uint256 _volTokenPositionBalance) private returns (FulfillDepositLocals memory locals)\\n    {\\n        (uint256 dexVolTokensAmount, uint256 dexUSDCAmount) = getReserves();\\n\\n        uint256 dexVolTokenPrice;\\n        uint256 intrinsicVolTokenPrice;\\n        bool dexHasLiquidity = true;\\n\\n        if (dexVolTokensAmount == 0 || dexUSDCAmount == 0) {\\n            dexHasLiquidity = false;\\n        } else {\\n            intrinsicVolTokenPrice =\\n                (_volTokenPositionBalance * 10**ERC20Upgradeable(address(volToken)).decimals()) /\\n                IERC20Upgradeable(address(volToken)).totalSupply();\\n            dexVolTokenPrice = (dexUSDCAmount * 10**ERC20Upgradeable(address(volToken)).decimals()) / dexVolTokensAmount;\\n        }\\n\\n        if (dexHasLiquidity) {\\n            (locals.mintVolTokenUSDCAmount, locals.platformLiquidityAmount, locals.holdingsAmount) = calculateDepositAmounts(\\n                _tokenAmount,\\n                dexVolTokenPrice,\\n                intrinsicVolTokenPrice\\n            );\\n\\n            totalHoldingsAmount += locals.holdingsAmount;\\n\\n            platform.deposit(locals.platformLiquidityAmount, 0);\\n            (locals.addedLiquidityUSDCAmount, locals.mintedVolTokenAmount) = addDEXLiquidity(locals.mintVolTokenUSDCAmount);\\n        } else {\\n            locals.platformLiquidityAmount = _tokenAmount;\\n            platform.deposit(locals.platformLiquidityAmount, 0);\\n        }\\n    }\\n\\n    function calculatePoolValue() private view returns (uint256 intrinsicDEXVolTokenBalance, uint256 volTokenBalance, uint256 dexUSDCAmount, uint256 dexVolTokensAmount, bool isPoolSkewed) {\\n        (dexVolTokensAmount, dexUSDCAmount) = getReserves();\\n\\n        bool isPositive = true;\\n        (uint256 currPositionUnits, , , , ) = platform.positions(address(volToken));\\n        if (currPositionUnits != 0) {\\n            (volTokenBalance, isPositive,,,,) = platform.calculatePositionBalance(address(volToken));\\n        }\\n        require(isPositive); // 'Negative balance'\\n\\n        // No need to check skew if pool is still empty\\n        if (dexVolTokensAmount > 0 && dexUSDCAmount > 0) {\\n            // Multiply by vol token decimals to get intrinsic worth in USDC\\n            intrinsicDEXVolTokenBalance =\\n                (dexVolTokensAmount * volTokenBalance) /\\n                IERC20Upgradeable(address(volToken)).totalSupply();\\n            uint256 delta = intrinsicDEXVolTokenBalance > dexUSDCAmount ? intrinsicDEXVolTokenBalance - dexUSDCAmount : dexUSDCAmount - intrinsicDEXVolTokenBalance;\\n\\n            if (delta > (intrinsicDEXVolTokenBalance * minPoolSkewPercentage) / MAX_PERCENTAGE) {\\n                isPoolSkewed = true;\\n            }\\n        }\\n    }\\n\\n    function calculatePoolValueWithArbitrage(uint256 _usdcArbitrageAmount) private returns (uint256 intrinsicDEXVolTokenBalance, uint256 volTokenBalance, uint256 dexUSDCAmount) {\\n        bool isPoolSkewed;\\n        (intrinsicDEXVolTokenBalance, volTokenBalance, dexUSDCAmount,, isPoolSkewed) = calculatePoolValue();\\n\\n        if (isPoolSkewed) {\\n            attemptArbitrage(_usdcArbitrageAmount + totalHoldingsAmount, intrinsicDEXVolTokenBalance, dexUSDCAmount);\\n            (intrinsicDEXVolTokenBalance, volTokenBalance, dexUSDCAmount,, isPoolSkewed) = calculatePoolValue();\\n            require(!isPoolSkewed, 'Too skewed');\\n        }\\n    }\\n\\n    function attemptArbitrage(uint256 _usdcAmount, uint256 _intrinsicDEXVolTokenBalance, uint256 _dexUSDCAmount) private {\\n        uint256 usdcAmountNeeded = _dexUSDCAmount > _intrinsicDEXVolTokenBalance ? (_dexUSDCAmount - _intrinsicDEXVolTokenBalance) / 2 : \\n            (_intrinsicDEXVolTokenBalance - _dexUSDCAmount) / 2; // A good estimation to close arbitrage gap\\n\\n        uint256 withdrawnLiquidity = 0;\\n        if (_usdcAmount < usdcAmountNeeded) {\\n            uint256 leftAmount = usdcAmountNeeded - _usdcAmount;\\n\\n            // Get rest of amount needed from platform liquidity (will revert if not enough collateral)\\n            // Revert is ok here, befcause in that case, there is no way to arbitrage and resolve the skew,\\n            // and no requests will fulfill anyway\\n            (, withdrawnLiquidity) = platform.withdrawLPTokens(\\n                (leftAmount * IERC20Upgradeable(address(platform)).totalSupply()) / platform.totalBalance(true)\\n            );\\n\\n            usdcAmountNeeded = withdrawnLiquidity + _usdcAmount;\\n        }\\n\\n        uint256 updatedUSDCAmount;\\n        if (_dexUSDCAmount > _intrinsicDEXVolTokenBalance) {\\n            // Price is higher than intrinsic value, mint at lower price, then buy on dex\\n            uint256 mintedVolTokenAmount = mintVolTokens(usdcAmountNeeded);\\n\\n            address[] memory path = new address[](2);\\n            path[0] = address(volToken);\\n            path[1] = address(token);\\n\\n            // Note: No need for slippage since we checked the price in this current block\\n            uint256[] memory amounts = router.swapExactTokensForTokens(mintedVolTokenAmount, 0, path, address(this), block.timestamp);\\n\\n            updatedUSDCAmount = amounts[1];\\n        } else {\\n            // Price is lower than intrinsic value, buy on dex, then burn at higher price\\n\\n            address[] memory path = new address[](2);\\n            path[0] = address(token);\\n            path[1] = address(volToken);\\n\\n            // Note: No need for slippage since we checked the price in this current block\\n            uint256[] memory amounts = router.swapExactTokensForTokens(usdcAmountNeeded, 0, path, address(this), block.timestamp);\\n\\n            updatedUSDCAmount = burnVolTokens(amounts[1]);\\n        }\\n\\n        // Make sure we didn't lose by doing arbitrage (for example, mint/burn fees exceeds arbitrage gain)\\n        require(updatedUSDCAmount > usdcAmountNeeded); // 'Arbitrage failed'\\n\\n        // Deposit arbitrage gains back to vault as platform liquidity as well\\n        platform.deposit(updatedUSDCAmount - usdcAmountNeeded + withdrawnLiquidity, 0);\\n    }\\n\\n    function preFulfillRequest(uint256 _requestId, Request memory _request, uint8 _expectedType) private nonReentrant returns (uint168 amountToFulfill, address owner, bool wasLiquidated) {\\n        require(_request.owner != address(0)); // 'Invalid request id'\\n        require(msg.sender == fulfiller || msg.sender == _request.owner); // 'Not allowed'\\n        require(_request.requestType == _expectedType); // 'Wrong request type'\\n        require(block.timestamp >= _request.targetTimestamp, 'Too soon');\\n\\n        if (isLiquidable(_requestId)) {\\n            _liquidateRequest(_requestId);\\n            wasLiquidated = true;\\n        } else {\\n            amountToFulfill = _request.tokenAmount;\\n            owner = _request.owner;\\n        }\\n    }\\n\\n    function submitRequest(uint8 _type, uint168 _tokenAmount, bool _shouldStake) private nonReentrant returns (uint256 requestId) {\\n        require(_tokenAmount > 0); // 'Token amount must be positive'\\n\\n        (uint256 balance,,,,,) = totalBalance();\\n\\n        if (_type == DEPOSIT_REQUEST_TYPE) {\\n            require(balance + _tokenAmount + totalDepositRequestsAmount <= depositCap, 'Cap reached');\\n        }\\n\\n        requestId = nextRequestId;\\n        nextRequestId = nextRequestId + 1; // Overflow allowed to keep id cycling\\n\\n        uint32 targetTimestamp = uint32(block.timestamp + requestDelay);\\n\\n        requests[requestId] = Request(_type, _tokenAmount, targetTimestamp, msg.sender, _shouldStake);\\n\\n        if (_type == DEPOSIT_REQUEST_TYPE) {\\n            totalDepositRequestsAmount += _tokenAmount;\\n        }\\n\\n        collectRelevantTokens(_type, _tokenAmount);\\n\\n        emit SubmitRequest(requestId, _type, _tokenAmount, targetTimestamp, msg.sender, balance, totalSupply());\\n    }\\n\\n    function calculateDepositAmounts(uint256 _totalAmount, uint256 _dexVolTokenPrice, uint256 _intrinsicVolTokenPrice) private view returns (uint256 mintVolTokenUSDCAmount, uint256 platformLiquidityAmount, uint256 holdingsAmount) {\\n        holdingsAmount = _totalAmount * depositHoldingsPercentage / MAX_PERCENTAGE;\\n        uint256 leftAmount = _totalAmount - holdingsAmount;\\n\\n        (uint256 cviValue, , ) = platform.cviOracle().getCVILatestRoundData();\\n\\n        uint256 maxCVIValue = platform.maxCVIValue();\\n        (uint256 currentBalance,,,,,) = platform.calculatePositionBalance(address(volToken));\\n\\n        mintVolTokenUSDCAmount = (cviValue * _intrinsicVolTokenPrice * MAX_PERCENTAGE * leftAmount) /\\n            (_intrinsicVolTokenPrice * extraLiqidityPercentage * maxCVIValue +\\n                (cviValue * _dexVolTokenPrice + _intrinsicVolTokenPrice * maxCVIValue) * MAX_PERCENTAGE);\\n\\n        // Note: must be not-first mint (otherwise dex is empty, and this function won't be called)\\n        uint256 expectedMintedVolTokensAmount = (mintVolTokenUSDCAmount *\\n            IERC20Upgradeable(address(volToken)).totalSupply()) / currentBalance;\\n\\n        (uint256 dexVolTokensAmount, uint256 dexUSDCAmount) = getReserves();\\n        uint256 usdcDEXAmount = (expectedMintedVolTokensAmount * dexUSDCAmount) / dexVolTokensAmount;\\n\\n        platformLiquidityAmount = leftAmount - mintVolTokenUSDCAmount - usdcDEXAmount;\\n    }\\n\\n    function addDEXLiquidity(uint256 _mintVolTokensUSDCAmount) private returns (uint256 addedLiquidityUSDCAmount, uint256 mintedVolTokenAmount) {\\n        mintedVolTokenAmount = mintVolTokens(_mintVolTokensUSDCAmount);\\n\\n        (uint256 dexVolTokenAmount, uint256 dexUSDCAmount) = getReserves();\\n        uint256 _usdcDEXAmount = (mintedVolTokenAmount * dexUSDCAmount) / dexVolTokenAmount;\\n\\n        uint256 addedVolTokenAmount;\\n\\n        (addedVolTokenAmount, addedLiquidityUSDCAmount, ) = router.addLiquidity(address(volToken), address(token), mintedVolTokenAmount, _usdcDEXAmount, \\n            mintedVolTokenAmount, _usdcDEXAmount, address(this), block.timestamp);\\n\\n        require(addedLiquidityUSDCAmount == _usdcDEXAmount);\\n        require(addedVolTokenAmount == mintedVolTokenAmount);\\n\\n        (dexVolTokenAmount, dexUSDCAmount) = getReserves();\\n    }\\n\\n    function withdrawPlatformLiqudity(uint256 _lpTokensAmount, bool _catchRevert) private returns (uint256 withdrawnLiquidity, bool transactionSuccess) {\\n        transactionSuccess = true;\\n\\n        if (_catchRevert) {\\n            (bool success, bytes memory returnData) = \\n                address(platform).call(abi.encodePacked(platform.withdrawLPTokens.selector, abi.encode(_lpTokensAmount)));\\n            \\n            if (success) {\\n                (, withdrawnLiquidity) = abi.decode(returnData, (uint256, uint256));\\n            } else {\\n                transactionSuccess = false;\\n            }\\n        } else {\\n            (, withdrawnLiquidity) = platform.withdrawLPTokens(_lpTokensAmount);\\n        }\\n    }\\n\\n    function burnVolTokens(uint256 _tokensToBurn) private returns (uint256 burnedVolTokensUSDCAmount) {\\n        uint168 __tokensToBurn = uint168(_tokensToBurn);\\n        require(__tokensToBurn == _tokensToBurn); // Sanity, should very rarely fail\\n        burnedVolTokensUSDCAmount = volToken.burnTokens(__tokensToBurn);\\n    }\\n\\n    function mintVolTokens(uint256 _usdcAmount) private returns (uint256 mintedVolTokenAmount) {\\n        uint168 __usdcAmount = uint168(_usdcAmount);\\n        require(__usdcAmount == _usdcAmount); // Sanity, should very rarely fail\\n        mintedVolTokenAmount = volToken.mintTokens(__usdcAmount);\\n    }\\n\\n    function collectRelevantTokens(uint8 _requestType, uint256 _tokenAmount) private {\\n        if (_requestType == WITHDRAW_REQUEST_TYPE) {\\n            require(balanceOf(msg.sender) >= _tokenAmount, 'Not enough tokens');\\n            IERC20Upgradeable(address(this)).safeTransferFrom(msg.sender, address(this), _tokenAmount);\\n        } else {\\n            token.safeTransferFrom(msg.sender, address(this), _tokenAmount);\\n        }\\n    }\\n\\n    function isLiquidable(uint256 _requestId) private view returns (bool) {\\n        return (requests[_requestId].targetTimestamp + liquidationPeriod < block.timestamp);\\n    }\\n\\n    function _liquidateRequest(uint256 _requestId) private {\\n        Request memory request = requests[_requestId];\\n\\n        if (request.requestType == DEPOSIT_REQUEST_TYPE) {\\n            totalDepositRequestsAmount -= request.tokenAmount;\\n        }\\n\\n        deleteRequest(_requestId);\\n\\n        if (request.requestType == WITHDRAW_REQUEST_TYPE) {\\n            IERC20Upgradeable(address(this)).safeTransfer(request.owner, request.tokenAmount);\\n        } else {\\n            token.safeTransfer(request.owner, request.tokenAmount);\\n        }\\n\\n        emit LiquidateRequest(_requestId, request.requestType, request.owner, msg.sender, request.tokenAmount);\\n    }\\n\\n    function deleteRequest(uint256 _requestId) private {\\n        delete requests[_requestId];\\n\\n        uint256 currMinRequestId = minRequestId;\\n        uint256 increments = 0;\\n        bool didIncrement = false;\\n\\n        while (currMinRequestId < nextRequestId && increments < maxMinRequestIncrements && requests[currMinRequestId].owner == address(0)) {\\n            increments++;\\n            currMinRequestId++;\\n            didIncrement = true;\\n        }\\n\\n        if (didIncrement) {\\n            minRequestId = currMinRequestId;\\n        }\\n    }\\n\\n    function getPair() private view returns (IUniswapV2Pair pair) {\\n        return IUniswapV2Pair(IUniswapV2Factory(router.factory()).getPair(address(volToken), address(token)));\\n    }\\n\\n    function getReserves() public view override returns (uint256 volTokenAmount, uint256 usdcAmount) {\\n        (uint256 amount1, uint256 amount2, ) = getPair().getReserves();\\n\\n        if (address(volToken) < address(token)) {\\n            volTokenAmount = amount1;\\n            usdcAmount = amount2;\\n        } else {\\n            volTokenAmount = amount2;\\n            usdcAmount = amount1;\\n        }\\n    }\\n\\n    function getUSDCPlatformLiquidity() private view returns (uint256 usdcPlatformLiquidity) {\\n        uint256 platformLPTokensAmount = IERC20Upgradeable(address(platform)).balanceOf(address(this));\\n\\n        if (platformLPTokensAmount > 0) {\\n            usdcPlatformLiquidity = (platformLPTokensAmount * platform.totalBalance(true)) / IERC20Upgradeable(address(platform)).totalSupply();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb6db7d3d4897b692e229e6520659600e2d7f357091c17869a2fde9814dbee53c\",\"license\":\"BUSL-1.1\"},\"@coti-cvi/contracts-cvi/contracts/external/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xad46b9a71b88b9acff9e1cf7ebc3ca4a75e59b11fd521a056d4b6c951d02496b\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/external/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x9f51a1d68f51a13fd456ba3fb73d6fbff58515f21d88f86f2a56af65a9da43af\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/external/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x7bf9a68b5be399ce542367291361819989039cdca993e8d60f4dd9c723ff4740\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/external/IUniswapV2Router02.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x1cb83915099ee065638cb0b2e3820a14b7edc764c1ce6f54f8507cfc367821d3\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ICVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ICVIOracle {\\n    function getCVIRoundData(uint80 roundId) external view returns (uint32 cviValue, uint256 cviTimestamp);\\n    function getCVILatestRoundData() external view returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp);\\n\\n    function setDeviationCheck(bool newDeviationCheck) external;\\n    function setMaxDeviation(uint16 newMaxDeviation) external;\\n}\\n\",\"keccak256\":\"0xf1871b2e9219f7a11e63d8e3276b7a0a46d8d726d54e385a6326dbdb2bcb1bad\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IThetaVaultInfo.sol\\\";\\n\\ninterface IFeesCalculator {\\n\\n    struct CVIValue {\\n        uint256 period;\\n        uint32 cviValue;\\n    }\\n\\n    struct SnapshotUpdate {\\n        uint256 latestSnapshot;\\n        uint256 singleUnitFundingFee;\\n        uint256 totalTime;\\n        uint256 totalRounds;\\n        uint256 cviValueTimestamp;\\n        uint80 newLatestRoundId;\\n        uint32 cviValue;\\n        bool updatedSnapshot;\\n        bool updatedLatestRoundId;\\n        bool updatedLatestTimestamp;\\n        bool updatedTurbulenceData;\\n    }\\n\\n    function updateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 lastCVIValue, uint32 currCVIValue) external;\\n\\n    function setOracle(ICVIOracle cviOracle) external;\\n    function setThetaVault(IThetaVaultInfo thetaVault) external;\\n\\n    function setStateUpdator(address newUpdator) external;\\n\\n    function setFundingFeeMinRate(uint32 newFundingFeeMinRate) external;\\n    function setFundingFeeMaxRate(uint32 newFundingFeeMaxRate) external;\\n    function setMinFundingFeeCviThreshold(uint32 newMinFundingFeeCviThreshold) external;\\n    function setMaxFundingFeeCviThreshold(uint32 newMaxFundingFeeCviThreshold) external;\\n    function setFundingFeeDivisionFactor(uint32 newFundingFeeDivisionFactor) external;\\n    function setFundingFeeCoefficients(uint32[] calldata newFundingFeeCoefficients) external;\\n\\n    function setDepositFee(uint16 newDepositFeePercentage) external;\\n    function setWithdrawFee(uint16 newWithdrawFeePercentage) external;\\n    function setOpenPositionFee(uint16 newOpenPositionFeePercentage) external;\\n    function setOpenPositionLPFee(uint16 newOpenPositionLPFeePercent) external;\\n    function setClosePositionLPFee(uint16 newClosePositionLPFeePercent) external;\\n    function setClosePositionFee(uint16 newClosePositionFeePercentage) external;\\n    function setClosePositionMaxFee(uint16 newClosePositionMaxFeePercentage) external;\\n    function setClosePositionFeeDecay(uint256 newClosePositionFeeDecayPeriod) external;\\n    \\n    function setOracleHeartbeatPeriod(uint256 newOracleHeartbeatPeriod) external;\\n    function setBuyingPremiumFeeMax(uint16 newBuyingPremiumFeeMaxPercentage) external;\\n    function setBuyingPremiumThreshold(uint16 newBuyingPremiumThreshold) external;\\n    function setClosingPremiumFeeMax(uint16 newClosingPremiumFeeMaxPercentage) external;\\n    function setCollateralToBuyingPremiumMapping(uint16[] calldata newCollateralToBuyingPremiumMapping) external;\\n    function setFundingFeeConstantRate(uint16 newfundingFeeConstantRate) external;\\n    function setCollateralToExtraFundingFeeMapping(uint32[] calldata newCollateralToExtraFundingFeeMapping) external;\\n    function setTurbulenceStep(uint16 newTurbulenceStepPercentage) external;\\n    function setMaxTurbulenceFeePercentToTrim(uint16 newMaxTurbulenceFeePercentToTrim) external;\\n    function setTurbulenceDeviationThresholdPercent(uint16 newTurbulenceDeviationThresholdPercent) external;\\n    function setTurbulenceDeviationPercent(uint16 newTurbulenceDeviationPercentage) external;\\n\\n    function calculateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 _lastCVIValue, uint32 _currCVIValue) external view returns (uint16);\\n\\n    function calculateBuyingPremiumFee(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n    function calculateBuyingPremiumFeeWithAddendum(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits, uint16 _turbulenceIndicatorPercent) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n\\n    function calculateClosingPremiumFee() external view returns (uint16 combinedPremiumFeePercentage);\\n\\n    function calculateSingleUnitFundingFee(CVIValue[] memory cviValues, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 fundingFee);\\n    function calculateSingleUnitPeriodFundingFee(CVIValue memory cviValue, uint256 collateralRatio) external view returns (uint256 fundingFee, uint256 fundingFeeRatePercents);\\n    function updateSnapshots(uint256 latestTimestamp, uint256 blockTimestampSnapshot, uint256 latestTimestampSnapshot, uint80 latestOracleRoundId, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (SnapshotUpdate memory snapshotUpdate);\\n\\n    function calculateClosePositionFeePercent(uint256 creationTimestamp, bool isNoLockPositionAddress) external view returns (uint16);\\n    function calculateWithdrawFeePercent(uint256 lastDepositTimestamp) external view returns (uint16);\\n\\n    function calculateCollateralRatio(uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 collateralRatio);\\n\\n    function depositFeePercent() external view returns (uint16);\\n    function withdrawFeePercent() external view returns (uint16);\\n    function openPositionFeePercent() external view returns (uint16);\\n    function closePositionFeePercent() external view returns (uint16);\\n    function openPositionLPFeePercent() external view returns (uint16);\\n    function closePositionLPFeePercent() external view returns (uint16);\\n\\n    function openPositionFees() external view returns (uint16 openPositionFeePercentResult, uint16 buyingPremiumFeeMaxPercentResult);\\n\\n    function turbulenceIndicatorPercent() external view returns (uint16);\\n    function oracleLeverage() external view returns (uint8);\\n\\n    function getCollateralToBuyingPremiumMapping() external view returns(uint16[] memory);\\n    function getCollateralToExtraFundingFeeMapping() external view returns(uint32[] memory);\\n    function getFundingFeeCoefficients() external view returns(uint32[] memory);\\n}\\n\",\"keccak256\":\"0x4a28b87395a2a35ac1152b83f96630ad4fa1b844b5abca4270486c9c08f388ea\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IFeesCollector {\\n    function sendProfit(uint256 amount, IERC20 token) external;\\n}\\n\",\"keccak256\":\"0xb16b7c5d985657716ccacf0f1e61de587c06fe4f6591bee6fafc0a3658229b4c\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ILiquidation.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ILiquidation {\\t\\n\\tfunction setMinLiquidationThresholdPercents(uint16[8] calldata newMinThresholdPercents) external;\\n\\tfunction setMinLiquidationRewardPercent(uint16 newMinRewardPercent) external;\\n\\tfunction setMaxLiquidationRewardPercents(uint16[8] calldata newMaxRewardPercents) external;\\n\\tfunction isLiquidationCandidate(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (bool);\\n\\tfunction getLiquidationReward(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (uint256 finderFeeAmount);\\n}\\n\",\"keccak256\":\"0x0799656b324ed8d65391313156e1dfe7d99b6dadb08e71cd6a515d19731539bd\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IPlatform.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IFeesCalculator.sol\\\";\\nimport \\\"./IRewardsCollector.sol\\\";\\nimport \\\"./IFeesCollector.sol\\\";\\nimport \\\"./ILiquidation.sol\\\";\\n\\ninterface IPlatform {\\n\\n    struct Position {\\n        uint168 positionUnitsAmount;\\n        uint8 leverage;\\n        uint32 openCVIValue;\\n        uint32 creationTimestamp;\\n        uint32 originalCreationTimestamp;\\n    }\\n\\n    event Deposit(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event Withdraw(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event OpenPosition(address indexed account, uint256 tokenAmount, uint8 leverage, uint256 feeAmount, uint256 positionUnitsAmount, uint256 cviValue);\\n    event ClosePosition(address indexed account, uint256 tokenAmount, uint256 feeAmount, uint256 positionUnitsAmount, uint8 leverage, uint256 cviValue);\\n    event LiquidatePosition(address indexed positionAddress, uint256 currentPositionBalance, bool isBalancePositive, uint256 positionUnitsAmount);\\n\\n    function deposit(uint256 tokenAmount, uint256 minLPTokenAmount) external returns (uint256 lpTokenAmount);\\n    function withdraw(uint256 tokenAmount, uint256 maxLPTokenBurnAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n    function withdrawLPTokens(uint256 lpTokenAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n\\n    function increaseSharedPool(uint256 tokenAmount) external;\\n\\n    function openPositionWithoutFee(uint168 tokenAmount, uint32 maxCVI, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function openPosition(uint168 tokenAmount, uint32 maxCVI, uint16 maxBuyingPremiumFeePercentage, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function closePositionWithoutFee(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n    function closePosition(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function liquidatePositions(address[] calldata positionOwners) external returns (uint256 finderFeeAmount);\\n\\n    function setAddressSpecificParameters(address holderAddress, bool shouldLockPosition, bool noPremiumFeeAllowed, bool increaseSharedPoolAllowed, bool isLiquidityProvider) external;\\n\\n    function setRevertLockedTransfers(bool revertLockedTransfers) external;\\n\\n    function setSubContracts(IFeesCollector newCollector, ICVIOracle newOracle, IRewardsCollector newRewards, ILiquidation newLiquidation, address _newStakingContractAddress) external;\\n    function setFeesCalculator(IFeesCalculator newCalculator) external;\\n\\n    function setLatestOracleRoundId(uint80 newOracleRoundId) external;\\n    function setMaxTimeAllowedAfterLatestRound(uint32 newMaxTimeAllowedAfterLatestRound) external;\\n\\n    function setLockupPeriods(uint256 newLPLockupPeriod, uint256 newBuyersLockupPeriod) external;\\n\\n    function setEmergencyParameters(bool newEmergencyWithdrawAllowed, bool newCanPurgeSnapshots) external;\\n\\n    function setMaxAllowedLeverage(uint8 newMaxAllowedLeverage) external;\\n\\n    function calculatePositionBalance(address positionAddress) external view returns (uint256 currentPositionBalance, bool isPositive, uint168 positionUnitsAmount, uint8 leverage, uint256 fundingFees, uint256 marginDebt);\\n    function calculatePositionPendingFees(address positionAddress, uint168 positionUnitsAmount) external view returns (uint256 pendingFees);\\n\\n    function totalBalance(bool _withAddendum) external view returns (uint256 balance);\\n\\n    function calculateLatestTurbulenceIndicatorPercent() external view returns (uint16);\\n\\n    function cviOracle() external view returns (ICVIOracle);\\n    function feesCalculator() external view returns (IFeesCalculator);\\n\\n    function PRECISION_DECIMALS() external view returns (uint256);\\n\\n    function totalPositionUnitsAmount() external view returns (uint256);\\n    function totalLeveragedTokensAmount() external view returns (uint256);\\n    function totalFundingFeesAmount() external view returns (uint256);\\n    function latestFundingFees() external view returns (uint256);\\n\\n    function positions(address positionAddress) external view returns (uint168 positionUnitsAmount, uint8 leverage, uint32 openCVIValue, uint32 creationTimestamp, uint32 originalCreationTimestamp);\\n    function buyersLockupPeriod() external view returns (uint256);\\n    function maxCVIValue() external view returns (uint32);\\n}\\n\",\"keccak256\":\"0x11f55f686514975c2dd5adf87856f8df5f85b015621f01e1528addb6b7194686\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IVolatilityToken.sol\\\";\\n\\ninterface IRequestFeesCalculator {\\n    function calculateTimePenaltyFee(IVolatilityToken.Request calldata request) external view returns (uint16 feePercentage);\\n    function calculateTimeDelayFee(uint256 timeDelay) external view returns (uint16 feePercentage);\\n    function calculateFindersFee(uint256 tokensLeftAmount) external view returns (uint256 findersFeeAmount);\\n    function calculateKeepersFee(uint256 tokensAmount) external view returns (uint256 keepersFeeAmount);\\n\\n    function isLiquidable(IVolatilityToken.Request calldata request) external view returns (bool liquidable);\\n\\n    function minWaitTime() external view returns (uint32);\\n\\n    function setTimeWindow(uint32 minTimeWindow, uint32 maxTimeWindow) external;\\n    function setTimeDelayFeesParameters(uint16 minTimeDelayFeePercent, uint16 maxTimeDelayFeePercent) external;\\n    function setMinWaitTime(uint32 newMinWaitTime) external;\\n    function setTimePenaltyFeeParameters(uint16 beforeTargetTimeMaxPenaltyFeePercent, uint32 afterTargetMidTime, uint16 afterTargetMidTimePenaltyFeePercent, uint32 afterTargetMaxTime, uint16 afterTargetMaxTimePenaltyFeePercent) external;\\n    function setFindersFee(uint16 findersFeePercent) external;\\n    function setKeepersFeePercent(uint16 keepersFeePercent) external;\\n    function setKeepersFeeMax(uint256 keepersFeeMax) external;\\n\\n    function getMaxFees() external view returns (uint16 maxFeesPercent);\\n}\\n\",\"keccak256\":\"0xb516083aa9063482c61c12f38b960f017205f2611358dcab31c1197208841611\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IRequestManager {\\n\\n\\tfunction nextRequestId() external view returns (uint256);\\n    function minRequestId() external view returns (uint256);\\n    function maxMinRequestIncrements() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4271e6200e0675ca19c931cd82dc9243a01d88bc20a4352effb1d66be761b94b\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRewardsCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IRewardsCollector {\\n\\tfunction reward(address account, uint256 positionUnits, uint8 leverage) external;\\n}\\n\",\"keccak256\":\"0xaae3f1399202cccfb2e7302f69868a1f9adfbc53c968668e79201692c5724ca5\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport '@coti-cvi/contracts-staking/contracts/interfaces/IRewardRouter.sol';\\n\\nimport \\\"./IThetaVaultInfo.sol\\\";\\nimport \\\"./IVolatilityToken.sol\\\";\\n\\ninterface IThetaVault is IThetaVaultInfo {\\n\\n    event SubmitRequest(uint256 requestId, uint8 requestType, uint256 tokenAmount, uint32 targetTimestamp, address indexed account, uint256 totalUSDCBalance, uint256 totalSupply);\\n    event FulfillDeposit(uint256 requestId, address indexed account, uint256 totalUSDCAmount, uint256 platformLiquidityAmount, uint256 dexVolTokenUSDCAmount, uint256 dexVolTokenAmount, uint256 dexUSDCAmount, uint256 mintedThetaTokens);\\n    event FulfillWithdraw(uint256 requestId, address indexed account, uint256 totalUSDCAmount, uint256 platformLiquidityAmount, uint256 dexVolTokenAmount, uint256 dexUSDCVolTokenAmount, uint256 dexUSDCAmount, uint256 burnedThetaTokens);\\n    event LiquidateRequest(uint256 requestId, uint8 requestType, address indexed account, address indexed liquidator, uint256 tokenAmount);\\n\\n    function submitDepositRequest(uint168 tokenAmount/* , bool shouldStake */) external returns (uint256 requestId);\\n    function submitWithdrawRequest(uint168 thetaTokenAmount) external returns (uint256 requestId);\\n\\n    function fulfillDepositRequest(uint256 requestId) external returns (uint256 thetaTokensMinted);\\n    function fulfillWithdrawRequest(uint256 requestId) external returns (uint256 tokenWithdrawnAmount);\\n\\n    function liquidateRequest(uint256 requestId) external;\\n\\n    function rebalance() external;\\n\\n    function setRewardRouter(IRewardRouter rewardRouter) external;\\n    function setFulfiller(address newFulfiller) external;\\n    function setMinPoolSkew(uint16 newMinPoolSkewPercentage) external;\\n    function setLiquidityPercentages(uint16 newExtraLiquidityPercentage, uint16 minDexPercentageAllowed) external;\\n    function setRequestDelay(uint256 newRequestDelay) external;\\n    function setDepositCap(uint256 newDepositCap) external;\\n    function setPeriods(uint256 newLockupPeriod, uint256 newLiquidationPeriod) external;\\n    function setMinAmounts(uint256 newMinDepositAmount, uint256 newMinWithdrawAmount) external;\\n    function setDepositHoldings(uint16 newDepositHoldingsPercentage) external;\\n    \\n    function volToken() external view returns (IVolatilityToken);\\n\\n    function totalBalance() external view returns (uint256 balance, uint256 usdcPlatformLiquidity, uint256 intrinsicDEXVolTokenBalance, uint256 volTokenPositionBalance, uint256 dexUSDCAmount, uint256 dexVolTokensAmount);\\n    function getReserves() external view returns (uint256 volTokenAmount, uint256 usdcAmount);\\n    function requests(uint256 requestId) external view returns (uint8 requestType, uint168 tokenAmount, uint32 targetTimestamp, address owner, bool shouldStake);\\n}\\n\",\"keccak256\":\"0xbd27cde6652e9e4b9cd783ba25bafb31ab00210fad67f80733e8901f980f0fa1\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVaultInfo.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IThetaVaultInfo {\\n    function totalVaultLeveragedAmount() external view returns (uint256);\\n    function vaultPositionUnits() external view returns (uint256);\\n    function extraLiqidityPercentage() external view returns (uint16);\\n    function minDexPercentageAllowed() external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xce2b14eb4cfcf69d7fe194658560dd77ee0f37c913eefa8d60a2d09bdd7683f6\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IVolatilityToken.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IPlatform.sol\\\";\\nimport \\\"./IRequestFeesCalculator.sol\\\";\\nimport \\\"./ICVIOracle.sol\\\";\\n\\ninterface IVolatilityToken {\\n\\n    struct Request {\\n        uint8 requestType; // 1 => mint, 2 => burn\\n        uint168 tokenAmount;\\n        uint16 timeDelayRequestFeesPercent;\\n        uint16 maxRequestFeesPercent;\\n        address owner;\\n        uint32 requestTimestamp;\\n        uint32 targetTimestamp;\\n        bool useKeepers;\\n        uint16 maxBuyingPremiumFeePercentage;\\n    }\\n\\n    event SubmitRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 tokenAmount, uint256 submitFeesAmount, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n    event FulfillRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 fulfillFeesAmount, bool isAborted, bool useKeepers, bool keepersCalled, address indexed fulfiller, uint32 fulfillTimestamp);\\n    event LiquidateRequest(uint256 requestId, uint8 requestType, address indexed account, address indexed liquidator, uint256 findersFeeAmount, bool useKeepers, uint32 liquidateTimestamp);\\n    event Mint(uint256 requestId, address indexed account, uint256 tokenAmount, uint256 positionedTokenAmount, uint256 mintedTokens, uint256 openPositionFee, uint256 buyingPremiumFee);\\n    event Burn(uint256 requestId, address indexed account, uint256 tokenAmountBeforeFees, uint256 tokenAmount, uint256 burnedTokens, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function rebaseCVI() external;\\n\\n    function submitMintRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersMintRequest(uint168 tokenAmount, uint32 timeDelay, uint16 maxBuyingPremiumFeePercentage) external returns (uint256 requestId);\\n    function submitBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n\\n    function fulfillMintRequest(uint256 requestId, uint16 maxBuyingPremiumFeePercentage, bool keepersCalled) external returns (uint256 tokensMinted, bool success);\\n    function fulfillBurnRequest(uint256 requestId, bool keepersCalled) external returns (uint256 tokensBurned);\\n\\n    function mintTokens(uint168 tokenAmount) external returns (uint256 mintedTokens);\\n    function burnTokens(uint168 burnAmount) external returns (uint256 tokenAmount);\\n\\n    function liquidateRequest(uint256 requestId) external returns (uint256 findersFeeAmount);\\n\\n    function setMinter(address minter) external;\\n    function setPlatform(IPlatform newPlatform) external;\\n    function setFeesCalculator(IFeesCalculator newFeesCalculator) external;\\n    function setFeesCollector(IFeesCollector newCollector) external;\\n    function setRequestFeesCalculator(IRequestFeesCalculator newRequestFeesCalculator) external;\\n    function setCVIOracle(ICVIOracle newCVIOracle) external;\\n    function setDeviationParameters(uint16 newDeviationPercentagePerSingleRebaseLag, uint16 newMinDeviationPercentage, uint16 newMaxDeviationPercentage) external;\\n    function setVerifyTotalRequestsAmount(bool verifyTotalRequestsAmount) external;\\n    function setMaxTotalRequestsAmount(uint256 maxTotalRequestsAmount) external;\\n    function setCappedRebase(bool newCappedRebase) external;\\n\\n    function setMinRequestId(uint256 newMinRequestId) external;\\n    function setMaxMinRequestIncrements(uint256 newMaxMinRequestIncrements) external;\\n\\n    function setFulfiller(address fulfiller) external;\\n\\n    function setKeepersFeeVaultAddress(address newKeepersFeeVaultAddress) external;\\n\\n    function setMinKeepersAmounts(uint256 newMinKeepersMintAmount, uint256 newMinKeepersBurnAmount) external;\\n\\n    function platform() external view returns (IPlatform);\\n    function requestFeesCalculator() external view returns (IRequestFeesCalculator);\\n    function leverage() external view returns (uint8);\\n    function initialTokenToLPTokenRate() external view returns (uint256);\\n\\n    function requests(uint256 requestId) external view returns (uint8 requestType, uint168 tokenAmount, uint16 timeDelayRequestFeesPercent, uint16 maxRequestFeesPercent,\\n        address owner, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n}\\n\",\"keccak256\":\"0x9b195f997265f6401224845c81cba2a3ac6f2e4f2bf65d8be5027ac1ee3fa5b4\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-staking/contracts/interfaces/IRewardRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8;\\n\\nimport './IRewardTracker.sol';\\nimport './IVester.sol';\\n\\nenum StakedTokenName {\\n  THETA_VAULT,\\n  ES_GOVI,\\n  GOVI,\\n  LENGTH\\n}\\n\\ninterface IRewardRouter {\\n  event StakeToken(address indexed account, address indexed tokenName, uint256 amount);\\n  event UnstakeToken(address indexed account, address indexed tokenName, uint256 amount);\\n\\n  function stake(StakedTokenName _token, uint256 _amount) external;\\n\\n  function stakeForAccount(\\n    StakedTokenName _token,\\n    address _account,\\n    uint256 _amount\\n  ) external;\\n\\n  function batchStakeForAccount(\\n    StakedTokenName _tokenName,\\n    address[] memory _accounts,\\n    uint256[] memory _amounts\\n  ) external;\\n\\n  function unstake(StakedTokenName _token, uint256 _amount) external;\\n\\n  function claim(StakedTokenName _token) external;\\n\\n  function compound(StakedTokenName _tokenName) external;\\n\\n  function compoundForAccount(address _account, StakedTokenName _tokenName) external;\\n\\n  function batchCompoundForAccounts(address[] memory _accounts, StakedTokenName _tokenName) external;\\n\\n  function setRewardTrackers(StakedTokenName[] calldata _tokenNames, IRewardTracker[] calldata _rewardTrackers)\\n    external;\\n\\n  function setVesters(StakedTokenName[] calldata _tokenNames, IVester[] calldata _vesters) external;\\n\\n  function setTokens(StakedTokenName[] calldata _tokenNames, address[] calldata _tokens) external;\\n\\n  function rewardTrackers(StakedTokenName _token) external view returns (IRewardTracker);\\n\\n  function vesters(StakedTokenName _token) external view returns (IVester);\\n\\n  function tokens(StakedTokenName _token) external view returns (address);\\n}\\n\",\"keccak256\":\"0x3d947510a8edfa0e2d7119d5e31a63ef9ff4bef153ce5afc67343aa2cc2a7f79\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-staking/contracts/interfaces/IRewardTracker.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8;\\n\\ninterface IRewardTracker {\\n  event Claim(address indexed receiver, uint256 amount);\\n\\n  function stake(address _depositToken, uint256 _amount) external;\\n\\n  function stakeForAccount(\\n    address _fundingAccount,\\n    address _account,\\n    address _depositToken,\\n    uint256 _amount\\n  ) external;\\n\\n  function unstake(address _depositToken, uint256 _amount) external;\\n\\n  function unstakeForAccount(\\n    address _account,\\n    address _depositToken,\\n    uint256 _amount,\\n    address _receiver\\n  ) external;\\n\\n  function claim(address _receiver) external returns (uint256);\\n\\n  function claimForAccount(address _account, address _receiver) external returns (uint256);\\n\\n  function updateRewards() external;\\n\\n  function depositBalances(address _account, address _depositToken) external view returns (uint256);\\n\\n  function stakedAmounts(address _account) external view returns (uint256);\\n\\n  function averageStakedAmounts(address _account) external view returns (uint256);\\n\\n  function cumulativeRewards(address _account) external view returns (uint256);\\n\\n  function claimable(address _account) external view returns (uint256);\\n\\n  function tokensPerInterval() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x0af272806df1e2440cb18485e6911a67a2a25fe1edadfa602c08a4ef3e2f1f5c\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-staking/contracts/interfaces/IVester.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8;\\n\\nimport './IRewardTracker.sol';\\n\\ninterface IVester {\\n  event Claim(address indexed receiver, uint256 amount);\\n  event Deposit(address indexed account, uint256 amount);\\n  event Withdraw(address indexed account, uint256 claimedAmount, uint256 balance);\\n  event PairTransfer(address indexed from, address indexed to, uint256 value);\\n\\n  function claimForAccount(address _account, address _receiver) external returns (uint256);\\n\\n  function transferStakeValues(address _sender, address _receiver) external;\\n\\n  function setTransferredAverageStakedAmounts(address _account, uint256 _amount) external;\\n\\n  function setTransferredCumulativeRewards(address _account, uint256 _amount) external;\\n\\n  function setCumulativeRewardDeductions(address _account, uint256 _amount) external;\\n\\n  function setBonusRewards(address _account, uint256 _amount) external;\\n\\n  function rewardTracker() external view returns (IRewardTracker);\\n\\n  function claimable(address _account) external view returns (uint256);\\n\\n  function cumulativeClaimAmounts(address _account) external view returns (uint256);\\n\\n  function claimedAmounts(address _account) external view returns (uint256);\\n\\n  function pairAmounts(address _account) external view returns (uint256);\\n\\n  function getVestedAmount(address _account) external view returns (uint256);\\n\\n  function transferredAverageStakedAmounts(address _account) external view returns (uint256);\\n\\n  function transferredCumulativeRewards(address _account) external view returns (uint256);\\n\\n  function cumulativeRewardDeductions(address _account) external view returns (uint256);\\n\\n  function bonusRewards(address _account) external view returns (uint256);\\n\\n  function getMaxVestableAmount(address _account) external view returns (uint256);\\n\\n  function getCombinedAverageStakedAmount(address _account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x60ef693b02dca48ab14d3f352632065fd8c5cd7a49063e2758eec857bc73ce11\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xb71b875e7f1b8ad082eb6ff83bca4bfa7d050476cc98fd39295826b654edfb46\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/theta-vault/ThetaVaultContracts.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport '@coti-cvi/contracts-cvi/contracts/ThetaVault.sol';\\n\\ncontract CVIUSDCThetaVault is ThetaVault {\\n  constructor() ThetaVault() {}\\n}\\n\\ncontract CVIUSDCThetaVault2X is ThetaVault {\\n  constructor() ThetaVault() {}\\n}\\n\",\"keccak256\":\"0xd2102b6b87f44dd194240c6745ff9be532494e0aaf305a21b77a71e9e5a424ee\",\"license\":\"GPL-3.0\"}},\"version\":1}",
      "bytecode": "0x608060405234801561001057600080fd5b506156bf80620000216000396000f3fe608060405234801561001057600080fd5b50600436106103c55760003560e01c806380b4ec9f116101ff578063ad7a672f1161011a578063e5f2eb5f116100ad578063f2fde38b1161007c578063f2fde38b146108b1578063f4b86023146108c4578063f887ea40146108d7578063fc0c546a146108ea57600080fd5b8063e5f2eb5f14610874578063ecd169ae14610887578063ee947a7c14610895578063f21d5bbf1461089e57600080fd5b8063dbd5edc7116100e9578063dbd5edc714610832578063dd62ed3e1461083b578063e1be525d1461084e578063e239e3f81461086157600080fd5b8063ad7a672f146107ce578063af03d9e114610803578063c3c9677214610816578063c98ece901461081f57600080fd5b806398ec20e511610192578063a457c2d711610161578063a457c2d714610796578063a5cfa15c146107a9578063a6eea7f3146107b2578063a9059cbb146107bb57600080fd5b806398ec20e5146107695780639a91ee1e146107715780639c6e009c14610784578063a08102161461078d57600080fd5b80638da5cb5b116101ce5780638da5cb5b1461071357806395d89b41146107245780639673fc4b14610748578063977b91d71461075657600080fd5b806380b4ec9f1461063357806381d12c581461064657806386651203146106ed5780638bf92bbe1461070057600080fd5b80634c255c97116102ef5780636a84a9851161028257806376b27f331161025157806376b27f33146105fb57806379a81656146106045780637b5d6fe3146106175780637d7c2a1c1461062b57600080fd5b80636a84a985146105ae57806370a08231146105b7578063715018a6146105e0578063767ac369146105e857600080fd5b806361176a0e116102be57806361176a0e14610569578063645006ca1461057c578063655d8dec1461058557806368378f86146105a557600080fd5b80634c255c97146105315780635a3bb9891461053a57806360e3fb6c1461055557806360ebfee61461055d57600080fd5b8063313ce567116103675780633e9bc3c9116103365780633e9bc3c9146104ed5780634568b3b1146104f5578063457e1a49146104fd5780634bde38c81461050657600080fd5b8063313ce5671461049d578063342273e4146104b257806339509351146104c55780633d43ef57146104d857600080fd5b80630cd34787116103a35780630cd347871461044457806318160ddd1461045b57806323b872dd14610463578063293d09151461047657600080fd5b806306fdde03146103ca5780630902f1ac14610404578063095ea7b314610421575b600080fd5b60408051808201909152600c81526b0546865746120435649204c560a41b60208201525b6040516103fb9190615256565b60405180910390f35b61040c6108fd565b604080519283526020830191909152016103fb565b61043461042f366004614d74565b6109c0565b60405190151581526020016103fb565b61044d60d15481565b6040519081526020016103fb565b60675461044d565b610434610471366004614d34565b6109da565b60d45461048a9062010000900461ffff1681565b60405161ffff90911681526020016103fb565b60125b60405160ff90911681526020016103fb565b61044d6104c0366004614ebd565b610a00565b6104346104d3366004614d74565b610a5b565b6104eb6104e63660046150c9565b610a7d565b005b6104a0600181565b61044d610ab2565b61044d60dc5481565b60cb54610519906001600160a01b031681565b6040516001600160a01b0390911681526020016103fb565b61048a61271081565b60de546105199064010000000090046001600160a01b031681565b6104a0600281565b61044d6402540be40081565b60cc54610519906001600160a01b031681565b61044d60db5481565b61044d610593366004614cc4565b60d06020526000908152604090205481565b61044d60d65481565b61044d60ce5481565b61044d6105c5366004614cc4565b6001600160a01b031660009081526065602052604090205490565b6104eb610e0f565b6104eb6105f63660046150c9565b610e45565b61044d60d95481565b6104eb610612366004614ea3565b610e7a565b60de5461048a9062010000900461ffff1681565b6104eb610ebc565b6104eb610641366004614f71565b610ef4565b6106a4610654366004614f71565b60cf602052600090815260409020805460019091015460ff8083169261010081046001600160a81b031692600160b01b90910463ffffffff16916001600160a01b03821691600160a01b90041685565b6040805160ff90961686526001600160a81b03909416602086015263ffffffff909216928401929092526001600160a01b0390911660608301521515608082015260a0016103fb565b6104eb6106fb366004614f71565b610ff1565b61044d61070e366004614ebd565b611020565b6033546001600160a01b0316610519565b6040805180820190915260088152670542d4356492d4c560c41b60208201526103ee565b60d45461048a9061ffff1681565b6104eb610764366004614cc4565b6110d3565b61048a600581565b6104eb61077f366004614f71565b61112b565b61044d60d35481565b61044d60d25481565b6104346107a4366004614d74565b61115a565b61044d60da5481565b61044d60d85481565b6104346107c9366004614d74565b6111e0565b6107d66111ee565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016103fb565b6104eb610811366004614f3f565b611223565b61044d60dd5481565b6104eb61082d366004614cc4565b61127d565b61044d60d55481565b61044d610849366004614cfc565b6112c9565b6104eb61085c366004614ea3565b6112f4565b61044d61086f366004614f71565b611336565b6104eb610882366004615001565b6115f5565b60de5461048a9061ffff1681565b61044d60d75481565b61044d6108ac366004614f71565b61185f565b6104eb6108bf366004614cc4565b611cea565b60c954610519906001600160a01b031681565b60cd54610519906001600160a01b031681565b60ca54610519906001600160a01b031681565b60008060008061090b611d85565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561094357600080fd5b505afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190614e61565b5060ca5460cc546001600160701b0393841695509190921692506001600160a01b03918216911610156109b3578193508092506109ba565b8093508192505b50509091565b6000336109ce818585611e8e565b60019150505b92915050565b6000336109e8858285611fb2565b6109f385858561202c565b60019150505b9392505050565b600060db54826001600160a81b03161015610a4e5760405162461bcd60e51b8152602060048201526009602482015268151bdbc81cdb585b1b60ba1b60448201526064015b60405180910390fd5b6109d460018360006121fa565b6000336109ce818585610a6e83836112c9565b610a789190615455565b611e8e565b6033546001600160a01b03163314610aa75760405162461bcd60e51b8152600401610a45906152d7565b60db9190915560dc55565b600080610abd6108fd565b5090506000610aca611d85565b905060cc60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1a57600080fd5b505afa158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b529190614f89565b1580610bcc5750806001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b9257600080fd5b505afa158015610ba6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bca9190614f89565b155b15610bda5760009250505090565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1557600080fd5b505afa158015610c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4d9190614f89565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a082319060240160206040518083038186803b158015610c8c57600080fd5b505afa158015610ca0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc49190614f89565b610cce908561557b565b610cd8919061546d565b60cb5460cc5460405163055f575160e41b81526001600160a01b0391821660048201529293506000929116906355f575109060240160a06040518083038186803b158015610d2557600080fd5b505afa158015610d39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5d9190614ed9565b505050506001600160a81b0316905060cc60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610dba57600080fd5b505afa158015610dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df29190614f89565b610dfc838361557b565b610e06919061546d565b94505050505090565b6033546001600160a01b03163314610e395760405162461bcd60e51b8152600401610a45906152d7565b610e43600061245d565b565b6033546001600160a01b03163314610e6f5760405162461bcd60e51b8152600401610a45906152d7565b60d79190915560d855565b6033546001600160a01b03163314610ea45760405162461bcd60e51b8152600401610a45906152d7565b60d4805461ffff191661ffff92909216919091179055565b6033546001600160a01b03163314610ee65760405162461bcd60e51b8152600401610a45906152d7565b610ef060006124af565b5050565b60026097541415610f175760405162461bcd60e51b8152600401610a4590615357565b6002609755600081815260cf6020908152604091829020825160a081018452815460ff80821680845261010083046001600160a81b031695840195909552600160b01b90910463ffffffff16948201949094526001909101546001600160a01b0381166060830152600160a01b900490921615156080830152610f9957600080fd5b610fa282612950565b610fdf5760405162461bcd60e51b815260206004820152600e60248201526d4e6f74206c697175696461626c6560901b6044820152606401610a45565b610fe882612984565b50506001609755565b6033546001600160a01b0316331461101b5760405162461bcd60e51b8152600401610a45906152d7565b60d555565b600060dc54826001600160a81b031610156110695760405162461bcd60e51b8152602060048201526009602482015268151bdbc81cdb585b1b60ba1b6044820152606401610a45565b60d75433600090815260d06020526040902054429161108791615455565b11156110c65760405162461bcd60e51b815260206004820152600e60248201526d11195c1bdcda5d081b1bd8dad95960921b6044820152606401610a45565b6109d460028360006121fa565b6033546001600160a01b031633146110fd5760405162461bcd60e51b8152600401610a45906152d7565b60de80546001600160a01b0390921664010000000002640100000000600160c01b0319909216919091179055565b6033546001600160a01b031633146111555760405162461bcd60e51b8152600401610a45906152d7565b60d655565b6000338161116882866112c9565b9050838110156111c85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610a45565b6111d58286868403611e8e565b506001949350505050565b6000336109ce81858561202c565b6000806000806000806111ff612afa565b50929650909450925090506112148483612d4c565b90979096509394509192909190565b6033546001600160a01b0316331461124d5760405162461bcd60e51b8152600401610a45906152d7565b60d4805461ffff9384166201000090810263ffff0000199283161790925560de8054939094169091029116179055565b6033546001600160a01b031633146112a75760405162461bcd60e51b8152600401610a45906152d7565b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6033546001600160a01b0316331461131e5760405162461bcd60e51b8152600401610a45906152d7565b60de805461ffff191661ffff92909216919091179055565b600081815260cf60209081526040808320600180820154835160a081018552925460ff808216855261010082046001600160a81b031696850196909652600160b01b900463ffffffff16938301939093526001600160a01b0383166060830152600160a01b90920490921680151560808401528392839283929183916113bd918991612faa565b9196509450905080156113d7575060009695505050505050565b6113e0876130bf565b60006113f4866001600160a81b03166124af565b94509050600061140360675490565b1180156114105750600081115b15611443578061141f60675490565b611432906001600160a81b03891661557b565b61143c919061546d565b965061145c565b60d154611459906001600160a81b03881661557b565b96505b50506000851161146b57600080fd5b611475838661315f565b6001600160a01b038316600090815260d06020526040902042905560d2546001600160a81b03851611156114ad57600060d2556114ce565b836001600160a81b031660d260008282546114c8919061559a565b90915550505b60006114e3856001600160a81b03168461323e565b9050811561155a5760de54604051633174ff7d60e21b81526401000000009091046001600160a01b03169063c5d3fdf4906115279060009088908b90600401615217565b600060405180830381600087803b15801561154157600080fd5b505af1158015611555573d6000803e3d6000fd5b505050505b836001600160a01b03167fa7690d0009c94c00bb8bf9ac437b46aa227cf737189169782a3ab5d072bda2ff888784606001518560000151866040015187602001518d6040516115e397969594939291909687526001600160a81b0395909516602087015260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a25050505050919050565b600061160160016135ec565b90508015611619576000805461ff0019166101001790555b6001600160a01b03881661162c57600080fd5b6001600160a01b03871661163f57600080fd5b6001600160a01b03851661165257600080fd5b6001600160a01b03841661166557600080fd5b6000891161167257600080fd5b600160ce81905560d95560d189905560d4805463ffffffff199081166305dc012c1790915560001960d55561070860d6556201518060d7556203f48060d855601e60da55620186a060db55662386f26fc1000060dc5560de8054909116630bb805dc1790556116df613679565b6116e76136a8565b6116f183836136d7565b60cb80546001600160a01b03808b166001600160a01b0319928316811790935560ca8054898316908416811790915560cc80548c841690851617905560cd805489841694169390931790925560de8054918a1664010000000002640100000000600160c01b031990921691909117905561176d91600019613708565b60cd5460ca5461178c916001600160a01b039182169116600019613708565b60cc5460ca546117ab916001600160a01b039182169116600019613708565b60cd5460cc546117ca916001600160a01b039182169116600019613708565b60cd546117f5906001600160a01b03166000196117e5611d85565b6001600160a01b03169190613708565b60cc5461180e906001600160a01b031680600019613708565b8015611854576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b600081815260cf60209081526040808320815160a081018352815460ff808216835261010082046001600160a81b031695830195909552600160b01b900463ffffffff1692810192909252600101546001600160a01b0381166060830152600160a01b9004909116151560808201528190819081906118e19086906002612faa565b92509250925080611ce2576118f660006124af565b505061192a6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b60675460cb546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561197057600080fd5b505afa158015611984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a89190614f89565b6119bb906001600160a81b03871661557b565b6119c5919061546d565b602082015260006119d560675490565b6119dd611d85565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015611a1e57600080fd5b505afa158015611a32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a569190614f89565b611a69906001600160a81b03881661557b565b611a73919061546d565b90508015611b2d5760cd5460cc5460ca54604051635d5155ef60e11b81526001600160a01b039384169363baa2abde93611ac1939082169291169086906000908190309042906004016151d7565b6040805180830381600087803b158015611ada57600080fd5b505af1158015611aee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1291906150ea565b606084015260408301819052611b2790613864565b60808301525b60cb54602083015160405163452d003f60e01b81526001600160a01b039092169163452d003f91611b649160040190815260200190565b6040805180830381600087803b158015611b7d57600080fd5b505af1158015611b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb591906150ea565b8352506000611bc360675490565b866001600160a81b031660dd54611bda919061557b565b611be4919061546d565b905082608001518360600151846000015183611c009190615455565b611c0a9190615455565b611c149190615455565b96508060dd6000828254611c28919061559a565b90915550611c419050306001600160a81b038816613903565b611c4a886130bf565b60ca54611c61906001600160a01b03168689613a51565b825160408085015160808087015160608089015185518f8152602081018f905280870197909752908601939093529084015260a08301526001600160a81b03881660c0830152516001600160a01b038716917f4574d70f7fcf4382fe2ec80c834752c2addb47b7a07d163dd71ca054be2dd741919081900360e00190a25050505b505050919050565b6033546001600160a01b03163314611d145760405162461bcd60e51b8152600401610a45906152d7565b6001600160a01b038116611d795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a45565b611d828161245d565b50565b60cd546040805163c45a015560e01b815290516000926001600160a01b03169163c45a0155916004808301926020929190829003018186803b158015611dca57600080fd5b505afa158015611dde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e029190614ce0565b60cc5460ca5460405163e6a4390560e01b81526001600160a01b039283166004820152908216602482015291169063e6a439059060440160206040518083038186803b158015611e5157600080fd5b505afa158015611e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e899190614ce0565b905090565b6001600160a01b038316611ef05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610a45565b6001600160a01b038216611f515760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610a45565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000611fbe84846112c9565b9050600019811461202657818110156120195760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610a45565b6120268484848403611e8e565b50505050565b6001600160a01b0383166120905760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610a45565b6001600160a01b0382166120f25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610a45565b6001600160a01b0383166000908152606560205260409020548181101561216a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610a45565b6001600160a01b038085166000908152606560205260408082208585039055918516815290812080548492906121a1908490615455565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516121ed91815260200190565b60405180910390a3612026565b60006002609754141561221f5760405162461bcd60e51b8152600401610a4590615357565b60026097556001600160a81b03831661223757600080fd5b60006122416111ee565b509394505050505060ff8516600114156122b45760d55460d25461226e6001600160a81b03871684615455565b6122789190615455565b11156122b45760405162461bcd60e51b815260206004820152600b60248201526a10d85c081c995858da195960aa1b6044820152606401610a45565b60ce5491506122c4826001615455565b60ce5560d6546000906122d79042615455565b6040805160a08101825260ff808a168083526001600160a81b03808b16602080860191825263ffffffff80891687890190815233606089019081528e151560808a0190815260008f815260cf909552999093209751885494519151909216600160b01b0263ffffffff60b01b1991909516610100026001600160b01b03199094169190961617919091179390931617835590516001928301805494511515600160a01b026001600160a81b03199095166001600160a01b0392909216919091179390931790925591925014156123c857846001600160a81b031660d260008282546123c29190615455565b90915550505b6123db86866001600160a81b0316613a81565b337fbf4d2957ec4d507c14dcbff7e87761bcb7d387e35cab2dcbf05cb283906599ec848888858761240b60675490565b6040805196875260ff9590951660208701526001600160a81b03939093168585015263ffffffff919091166060850152608084015260a0830152519081900360c00190a2505060016097559392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060008060006124c086613b04565b60d4549499509097509095509093509150600090612710906124ec9062010000900461ffff168261542f565b61ffff1660cb60009054906101000a90046001600160a01b03166001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b15801561253e57600080fd5b505afa158015612552573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125769190614f89565b612580919061557b565b61258a919061546d565b9050600060cb60009054906101000a90046001600160a01b03166001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b1580156125dc57600080fd5b505afa1580156125f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126149190614f89565b905082156129465760db546126299083615455565b8111156126dc57600061263c838361559a565b60cb54604051630441a3e760e41b81526004810183905260001960248201529192506000916001600160a01b039091169063441a3e70906044016040805180830381600087803b15801561268f57600080fd5b505af11580156126a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126c791906150ea565b9150506126d4818961323e565b505050612931565b8160db54826126eb9190615455565b10156129315760006126fd828461559a565b90508061270a8588615455565b11801561274f575060de5462010000900461ffff16886127108361272e888b615455565b612738919061559a565b612742919061557b565b61274c919061546d565b10155b1561292f5760006127608588615455565b612768611d85565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156127a057600080fd5b505afa1580156127b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d89190614f89565b6127e2908461557b565b6127ec919061546d565b60cd5460cc5460ca54604051635d5155ef60e11b815293945060009384936001600160a01b039081169363baa2abde9361283893918316921690889087908190309042906004016151d7565b6040805180830381600087803b15801561285157600080fd5b505af1158015612865573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288991906150ea565b9150915060008161289984613864565b6128a39190615455565b60cb54604051631c57762b60e31b815260048101839052600060248201529192506001600160a01b03169063e2bbb15890604401602060405180830381600087803b1580156128f157600080fd5b505af1158015612905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129299190614f89565b50505050505b505b6129396111ee565b50939a5098509650909350505b5050505050915091565b60d854600082815260cf60205260408120549091429161297d9190600160b01b900463ffffffff16615455565b1092915050565b600081815260cf6020908152604091829020825160a081018452815460ff80821680845261010083046001600160a81b031695840195909552600160b01b90910463ffffffff16948201949094526001918201546001600160a01b0381166060830152600160a01b9004909316151560808401521415612a235780602001516001600160a81b031660d26000828254612a1d919061559a565b90915550505b612a2c826130bf565b805160ff1660021415612a5c5760608101516020820151612a579130916001600160a81b0316613a51565b612a87565b6060810151602082015160ca54612a87926001600160a01b03909116916001600160a81b0316613a51565b60608101518151602083015160405133936001600160a01b0316927ff6f94f933b96f98ce5b3687b190c131a0c4ede50caec0a7b2f1ea76035eec97292612aee928892919092835260ff9190911660208301526001600160a81b0316604082015260600190565b60405180910390a35050565b6000806000806000612b0a6108fd565b60cb5460cc5460405163055f575160e41b81526001600160a01b0391821660048201529296509294506001926000929116906355f575109060240160a06040518083038186803b158015612b5d57600080fd5b505afa158015612b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b959190614ed9565b505050506001600160a81b0316905080600014612c365760cb5460cc546040516329b2a60b60e21b81526001600160a01b03918216600482015291169063a6ca982c9060240160c06040518083038186803b158015612bf357600080fd5b505afa158015612c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c2b9190614fa1565b509399509194505050505b81612c4057600080fd5b600084118015612c505750600085115b15612d435760cc60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ca357600080fd5b505afa158015612cb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cdb9190614f89565b612ce5878661557b565b612cef919061546d565b96506000858811612d0957612d04888761559a565b612d13565b612d13868961559a565b60d45490915061271090612d2b9061ffff168a61557b565b612d35919061546d565b811115612d4157600193505b505b50509091929394565b6000806000612d59611d85565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a082319060240160206040518083038186803b158015612d9e57600080fd5b505afa158015612db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dd69190614f89565b9050600080600083118015612e5b57506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612e2157600080fd5b505afa158015612e35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e599190614f89565b115b15612f6f57836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612e9957600080fd5b505afa158015612ead573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ed19190614f89565b612edb848a61557b565b612ee5919061546d565b9150836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612f2057600080fd5b505afa158015612f34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f589190614f89565b612f62848961557b565b612f6c919061546d565b90505b612f77613b34565b945080828660dd54612f899190615455565b612f939190615455565b612f9d9190615455565b9550505050509250929050565b600080600060026097541415612fd25760405162461bcd60e51b8152600401610a4590615357565b600260975560608501516001600160a01b0316612fee57600080fd5b60c9546001600160a01b031633148061301c575084606001516001600160a01b0316336001600160a01b0316145b61302557600080fd5b8360ff16856000015160ff161461303b57600080fd5b846040015163ffffffff164210156130805760405162461bcd60e51b81526020600482015260086024820152672a37b79039b7b7b760c11b6044820152606401610a45565b61308986612950565b1561309f5761309786612984565b5060016130ae565b84602001519250846060015191505b600160978190555093509350939050565b600081815260cf6020526040812080546001600160d01b031916815560010180546001600160a81b031916905560d95490805b60ce5483108015613104575060da5482105b80156131285750600083815260cf60205260409020600101546001600160a01b0316155b15613151578161313781615618565b925050828061314590615618565b935050600190506130f2565b801561202657505060d95550565b6001600160a01b0382166131b55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610a45565b80606760008282546131c79190615455565b90915550506001600160a01b038216600090815260656020526040812080548392906131f4908490615455565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6132706040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b60008061327b6108fd565b90925090506000806001841580613290575083155b1561329d57506000613473565b60cc60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156132eb57600080fd5b505afa1580156132ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133239190614f89565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561337157600080fd5b505afa158015613385573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133a991906151a1565b6133b490600a6154d0565b6133be908961557b565b6133c8919061546d565b91508460cc60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561341957600080fd5b505afa15801561342d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061345191906151a1565b61345c90600a6154d0565b613466908661557b565b613470919061546d565b92505b801561355357613484888484613cd9565b60808901819052606089019190915290875260dd80546000906134a8908490615455565b909155505060cb546060870151604051631c57762b60e31b81526004810191909152600060248201526001600160a01b039091169063e2bbb15890604401602060405180830381600087803b15801561350057600080fd5b505af1158015613514573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135389190614f89565b508551613544906140a9565b604088015260208701526135e1565b6060860188905260cb54604051631c57762b60e31b8152600481018a9052600060248201526001600160a01b039091169063e2bbb15890604401602060405180830381600087803b1580156135a757600080fd5b505af11580156135bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135df9190614f89565b505b505050505092915050565b60008054610100900460ff1615613633578160ff16600114801561360f5750303b155b61362b5760405162461bcd60e51b8152600401610a4590615289565b506000919050565b60005460ff80841691161061365a5760405162461bcd60e51b8152600401610a4590615289565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166136a05760405162461bcd60e51b8152600401610a459061530c565b610e436141cc565b600054610100900460ff166136cf5760405162461bcd60e51b8152600401610a459061530c565b610e436141fa565b600054610100900460ff166136fe5760405162461bcd60e51b8152600401610a459061530c565b610ef0828261422a565b8015806137915750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561375757600080fd5b505afa15801561376b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061378f9190614f89565b155b6137fc5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610a45565b6040516001600160a01b03831660248201526044810182905261385f90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614278565b505050565b6000816001600160a81b038116811461387c57600080fd5b60cc5460405163ec27050760e01b81526001600160a81b03831660048201526001600160a01b039091169063ec270507906024015b602060405180830381600087803b1580156138cb57600080fd5b505af11580156138df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f99190614f89565b6001600160a01b0382166139635760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610a45565b6001600160a01b038216600090815260656020526040902054818110156139d75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610a45565b6001600160a01b0383166000908152606560205260408120838303905560678054849290613a0690849061559a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b03831660248201526044810182905261385f90849063a9059cbb60e01b90606401613828565b60ff821660021415613aec5733600090815260656020526040902054811115613ae05760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b6044820152606401610a45565b610ef03033818461434a565b60ca54610ef0906001600160a01b031633308461434a565b6000806000806000613b1586614382565b91945092509050613b268382612d4c565b909790965092945090925090565b60cb546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a082319060240160206040518083038186803b158015613b7c57600080fd5b505afa158015613b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bb49190614f89565b90508015613cd55760cb60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015613c0a57600080fd5b505afa158015613c1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c429190614f89565b60cb54604051630d9c362960e41b8152600160048201526001600160a01b039091169063d9c362909060240160206040518083038186803b158015613c8657600080fd5b505afa158015613c9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cbe9190614f89565b613cc8908361557b565b613cd2919061546d565b91505b5090565b60de546000908190819061271090613cf59061ffff168861557b565b613cff919061546d565b90506000613d0d828861559a565b9050600060cb60009054906101000a90046001600160a01b03166001600160a01b0316636f7d78286040518163ffffffff1660e01b815260040160206040518083038186803b158015613d5f57600080fd5b505afa158015613d73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d979190614ce0565b6001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b158015613dcf57600080fd5b505afa158015613de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e079190615154565b505063ffffffff169050600060cb60009054906101000a90046001600160a01b03166001600160a01b031663d934c20b6040518163ffffffff1660e01b815260040160206040518083038186803b158015613e6157600080fd5b505afa158015613e75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e99919061513a565b60cb5460cc546040516329b2a60b60e21b81526001600160a01b03918216600482015263ffffffff93909316935060009291169063a6ca982c9060240160c06040518083038186803b158015613eee57600080fd5b505afa158015613f02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f269190614fa1565b5050505050905061271061ffff168289613f40919061557b565b613f4a8b8661557b565b613f549190615455565b613f5e919061557b565b60d4548390613f779062010000900461ffff168b61557b565b613f81919061557b565b613f8b9190615455565b84612710613f998b8761557b565b613fa3919061557b565b613fad919061557b565b613fb7919061546d565b965060008160cc60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561400a57600080fd5b505afa15801561401e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140429190614f89565b61404c908a61557b565b614056919061546d565b90506000806140636108fd565b9092509050600082614075838661557b565b61407f919061546d565b90508061408c8c8a61559a565b614096919061559a565b9950505050505050505093509350939050565b6000806140b583614411565b90506000806140c26108fd565b90925090506000826140d4838661557b565b6140de919061546d565b60cd5460cc5460ca5460405162e8e33760e81b81526001600160a01b039283166004820152908216602482015260448101889052606481018490526084810188905260a481018490523060c48201524260e482015292935060009291169063e8e337009061010401606060405180830381600087803b15801561416057600080fd5b505af1158015614174573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614198919061510d565b50965090508186146141a957600080fd5b8481146141b557600080fd5b6141bd6108fd565b50959794965093945050505050565b600054610100900460ff166141f35760405162461bcd60e51b8152600401610a459061530c565b6001609755565b600054610100900460ff166142215760405162461bcd60e51b8152600401610a459061530c565b610e433361245d565b600054610100900460ff166142515760405162461bcd60e51b8152600401610a459061530c565b8151614264906068906020850190614b6b565b50805161385f906069906020840190614b6b565b60006142cd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166144629092919063ffffffff16565b80519091501561385f57808060200190518101906142eb9190614e47565b61385f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a45565b6040516001600160a01b03808516602483015283166044820152606481018290526120269085906323b872dd60e01b90608401613828565b600080600080614390612afa565b9397509195509350909150508015614409576143ba60dd54866143b39190615455565b8584614479565b6143c2612afa565b93975091955093509091505080156144095760405162461bcd60e51b815260206004820152600a602482015269151bdbc81cdad95dd95960b21b6044820152606401610a45565b509193909250565b6000816001600160a81b038116811461442957600080fd5b60cc5460405163d4a56af160e01b81526001600160a81b03831660048201526001600160a01b039091169063d4a56af1906024016138b1565b60606144718484600085614a01565b949350505050565b600082821161449d57600261448e838561559a565b614498919061546d565b6144b3565b60026144a9848461559a565b6144b3919061546d565b905060008185101561466b5760006144cb868461559a565b60cb54604051630d9c362960e41b8152600160048201529192506001600160a01b03169063452d003f90829063d9c362909060240160206040518083038186803b15801561451857600080fd5b505afa15801561452c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145509190614f89565b60cb60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561459e57600080fd5b505afa1580156145b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145d69190614f89565b6145e0908561557b565b6145ea919061546d565b6040518263ffffffff1660e01b815260040161460891815260200190565b6040805180830381600087803b15801561462157600080fd5b505af1158015614635573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061465991906150ea565b925061466790508683615455565b9250505b6000848411156147e857600061468084614411565b6040805160028082526060820183529293506000929091602083019080368337505060cc5482519293506001600160a01b0316918391506000906146d457634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260ca5482519116908290600190811061471357634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260cd546040516338ed173960e01b815260009291909116906338ed17399061475d908690859087903090429060040161538e565b600060405180830381600087803b15801561477757600080fd5b505af115801561478b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526147b39190810190614d9f565b9050806001815181106147d657634e487b7160e01b600052603260045260246000fd5b6020026020010151935050505061494e565b604080516002808252606082018352600092602083019080368337505060ca5482519293506001600160a01b03169183915060009061483757634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260cc5482519116908290600190811061487657634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260cd546040516338ed173960e01b815260009291909116906338ed1739906148c0908890859087903090429060040161538e565b600060405180830381600087803b1580156148da57600080fd5b505af11580156148ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526149169190810190614d9f565b90506149498160018151811061493c57634e487b7160e01b600052603260045260246000fd5b6020026020010151613864565b925050505b82811161495a57600080fd5b60cb546001600160a01b031663e2bbb15883614976868561559a565b6149809190615455565b6040516001600160e01b031960e084901b168152600481019190915260006024820152604401602060405180830381600087803b1580156149c057600080fd5b505af11580156149d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149f89190614f89565b50505050505050565b606082471015614a625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a45565b6001600160a01b0385163b614ab95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a45565b600080866001600160a01b03168587604051614ad591906151bb565b60006040518083038185875af1925050503d8060008114614b12576040519150601f19603f3d011682016040523d82523d6000602084013e614b17565b606091505b5091509150614b27828286614b32565b979650505050505050565b60608315614b415750816109f9565b825115614b515782518084602001fd5b8160405162461bcd60e51b8152600401610a459190615256565b828054614b77906155dd565b90600052602060002090601f016020900481019282614b995760008555614bdf565b82601f10614bb257805160ff1916838001178555614bdf565b82800160010185558215614bdf579182015b82811115614bdf578251825591602001919060010190614bc4565b50613cd59291505b80821115613cd55760008155600101614be7565b8051801515811461367457600080fd5b600082601f830112614c1b578081fd5b813567ffffffffffffffff811115614c3557614c35615649565b614c48601f8201601f19166020016153fe565b818152846020838601011115614c5c578283fd5b816020850160208301379081016020019190915292915050565b80516001600160701b038116811461367457600080fd5b803561ffff8116811461367457600080fd5b805163ffffffff8116811461367457600080fd5b805160ff8116811461367457600080fd5b600060208284031215614cd5578081fd5b81356109f98161565f565b600060208284031215614cf1578081fd5b81516109f98161565f565b60008060408385031215614d0e578081fd5b8235614d198161565f565b91506020830135614d298161565f565b809150509250929050565b600080600060608486031215614d48578081fd5b8335614d538161565f565b92506020840135614d638161565f565b929592945050506040919091013590565b60008060408385031215614d86578182fd5b8235614d918161565f565b946020939093013593505050565b60006020808385031215614db1578182fd5b825167ffffffffffffffff80821115614dc8578384fd5b818501915085601f830112614ddb578384fd5b815181811115614ded57614ded615649565b8060051b9150614dfe8483016153fe565b8181528481019084860184860187018a1015614e18578788fd5b8795505b83861015614e3a578051835260019590950194918601918601614e1c565b5098975050505050505050565b600060208284031215614e58578081fd5b6109f982614bfb565b600080600060608486031215614e75578081fd5b614e7e84614c76565b9250614e8c60208501614c76565b9150614e9a60408501614c9f565b90509250925092565b600060208284031215614eb4578081fd5b6109f982614c8d565b600060208284031215614ece578081fd5b81356109f981615674565b600080600080600060a08688031215614ef0578283fd5b8551614efb81615674565b9450614f0960208701614cb3565b9350614f1760408701614c9f565b9250614f2560608701614c9f565b9150614f3360808701614c9f565b90509295509295909350565b60008060408385031215614f51578182fd5b614f5a83614c8d565b9150614f6860208401614c8d565b90509250929050565b600060208284031215614f82578081fd5b5035919050565b600060208284031215614f9a578081fd5b5051919050565b60008060008060008060c08789031215614fb9578384fd5b86519550614fc960208801614bfb565b94506040870151614fd981615674565b9350614fe760608801614cb3565b92506080870151915060a087015190509295509295509295565b600080600080600080600080610100898b03121561501d578586fd5b88359750602089013561502f8161565f565b9650604089013561503f8161565f565b9550606089013561504f8161565f565b9450608089013561505f8161565f565b935060a089013561506f8161565f565b925060c089013567ffffffffffffffff8082111561508b578384fd5b6150978c838d01614c0b565b935060e08b01359150808211156150ac578283fd5b506150b98b828c01614c0b565b9150509295985092959890939650565b600080604083850312156150db578182fd5b50508035926020909101359150565b600080604083850312156150fc578182fd5b505080516020909101519092909150565b600080600060608486031215615121578081fd5b8351925060208401519150604084015190509250925092565b60006020828403121561514b578081fd5b6109f982614c9f565b600080600060608486031215615168578081fd5b61517184614c9f565b9250602084015169ffffffffffffffffffff8116811461518f578182fd5b80925050604084015190509250925092565b6000602082840312156151b2578081fd5b6109f982614cb3565b600082516151cd8184602087016155b1565b9190910192915050565b6001600160a01b039788168152958716602087015260408601949094526060850192909252608084015290921660a082015260c081019190915260e00190565b606081016004851061523957634e487b7160e01b600052602160045260246000fd5b9381526001600160a01b0392909216602083015260409091015290565b60208152600082518060208401526152758160408501602087016155b1565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b818110156153dd5784516001600160a01b0316835293830193918301916001016153b8565b50506001600160a01b03969096166060850152505050608001529392505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561542757615427615649565b604052919050565b600061ffff80831681851680830382111561544c5761544c615633565b01949350505050565b6000821982111561546857615468615633565b500190565b60008261548857634e487b7160e01b81526012600452602481fd5b500490565b600181815b808511156154c85781600019048211156154ae576154ae615633565b808516156154bb57918102915b93841c9390800290615492565b509250929050565b60006109f960ff8416836000826154e9575060016109d4565b816154f6575060006109d4565b816001811461550c576002811461551657615532565b60019150506109d4565b60ff84111561552757615527615633565b50506001821b6109d4565b5060208310610133831016604e8410600b8410161715615555575081810a6109d4565b61555f838361548d565b806000190482111561557357615573615633565b029392505050565b600081600019048311821515161561559557615595615633565b500290565b6000828210156155ac576155ac615633565b500390565b60005b838110156155cc5781810151838201526020016155b4565b838111156120265750506000910152565b600181811c908216806155f157607f821691505b6020821081141561561257634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561562c5761562c615633565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611d8257600080fd5b6001600160a81b0381168114611d8257600080fdfea2646970667358221220708bea4cca1abf983b81d36478a8c5ee8e65ccefde0bfedf5749e826c5520be464736f6c63430008040033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103c55760003560e01c806380b4ec9f116101ff578063ad7a672f1161011a578063e5f2eb5f116100ad578063f2fde38b1161007c578063f2fde38b146108b1578063f4b86023146108c4578063f887ea40146108d7578063fc0c546a146108ea57600080fd5b8063e5f2eb5f14610874578063ecd169ae14610887578063ee947a7c14610895578063f21d5bbf1461089e57600080fd5b8063dbd5edc7116100e9578063dbd5edc714610832578063dd62ed3e1461083b578063e1be525d1461084e578063e239e3f81461086157600080fd5b8063ad7a672f146107ce578063af03d9e114610803578063c3c9677214610816578063c98ece901461081f57600080fd5b806398ec20e511610192578063a457c2d711610161578063a457c2d714610796578063a5cfa15c146107a9578063a6eea7f3146107b2578063a9059cbb146107bb57600080fd5b806398ec20e5146107695780639a91ee1e146107715780639c6e009c14610784578063a08102161461078d57600080fd5b80638da5cb5b116101ce5780638da5cb5b1461071357806395d89b41146107245780639673fc4b14610748578063977b91d71461075657600080fd5b806380b4ec9f1461063357806381d12c581461064657806386651203146106ed5780638bf92bbe1461070057600080fd5b80634c255c97116102ef5780636a84a9851161028257806376b27f331161025157806376b27f33146105fb57806379a81656146106045780637b5d6fe3146106175780637d7c2a1c1461062b57600080fd5b80636a84a985146105ae57806370a08231146105b7578063715018a6146105e0578063767ac369146105e857600080fd5b806361176a0e116102be57806361176a0e14610569578063645006ca1461057c578063655d8dec1461058557806368378f86146105a557600080fd5b80634c255c97146105315780635a3bb9891461053a57806360e3fb6c1461055557806360ebfee61461055d57600080fd5b8063313ce567116103675780633e9bc3c9116103365780633e9bc3c9146104ed5780634568b3b1146104f5578063457e1a49146104fd5780634bde38c81461050657600080fd5b8063313ce5671461049d578063342273e4146104b257806339509351146104c55780633d43ef57146104d857600080fd5b80630cd34787116103a35780630cd347871461044457806318160ddd1461045b57806323b872dd14610463578063293d09151461047657600080fd5b806306fdde03146103ca5780630902f1ac14610404578063095ea7b314610421575b600080fd5b60408051808201909152600c81526b0546865746120435649204c560a41b60208201525b6040516103fb9190615256565b60405180910390f35b61040c6108fd565b604080519283526020830191909152016103fb565b61043461042f366004614d74565b6109c0565b60405190151581526020016103fb565b61044d60d15481565b6040519081526020016103fb565b60675461044d565b610434610471366004614d34565b6109da565b60d45461048a9062010000900461ffff1681565b60405161ffff90911681526020016103fb565b60125b60405160ff90911681526020016103fb565b61044d6104c0366004614ebd565b610a00565b6104346104d3366004614d74565b610a5b565b6104eb6104e63660046150c9565b610a7d565b005b6104a0600181565b61044d610ab2565b61044d60dc5481565b60cb54610519906001600160a01b031681565b6040516001600160a01b0390911681526020016103fb565b61048a61271081565b60de546105199064010000000090046001600160a01b031681565b6104a0600281565b61044d6402540be40081565b60cc54610519906001600160a01b031681565b61044d60db5481565b61044d610593366004614cc4565b60d06020526000908152604090205481565b61044d60d65481565b61044d60ce5481565b61044d6105c5366004614cc4565b6001600160a01b031660009081526065602052604090205490565b6104eb610e0f565b6104eb6105f63660046150c9565b610e45565b61044d60d95481565b6104eb610612366004614ea3565b610e7a565b60de5461048a9062010000900461ffff1681565b6104eb610ebc565b6104eb610641366004614f71565b610ef4565b6106a4610654366004614f71565b60cf602052600090815260409020805460019091015460ff8083169261010081046001600160a81b031692600160b01b90910463ffffffff16916001600160a01b03821691600160a01b90041685565b6040805160ff90961686526001600160a81b03909416602086015263ffffffff909216928401929092526001600160a01b0390911660608301521515608082015260a0016103fb565b6104eb6106fb366004614f71565b610ff1565b61044d61070e366004614ebd565b611020565b6033546001600160a01b0316610519565b6040805180820190915260088152670542d4356492d4c560c41b60208201526103ee565b60d45461048a9061ffff1681565b6104eb610764366004614cc4565b6110d3565b61048a600581565b6104eb61077f366004614f71565b61112b565b61044d60d35481565b61044d60d25481565b6104346107a4366004614d74565b61115a565b61044d60da5481565b61044d60d85481565b6104346107c9366004614d74565b6111e0565b6107d66111ee565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016103fb565b6104eb610811366004614f3f565b611223565b61044d60dd5481565b6104eb61082d366004614cc4565b61127d565b61044d60d55481565b61044d610849366004614cfc565b6112c9565b6104eb61085c366004614ea3565b6112f4565b61044d61086f366004614f71565b611336565b6104eb610882366004615001565b6115f5565b60de5461048a9061ffff1681565b61044d60d75481565b61044d6108ac366004614f71565b61185f565b6104eb6108bf366004614cc4565b611cea565b60c954610519906001600160a01b031681565b60cd54610519906001600160a01b031681565b60ca54610519906001600160a01b031681565b60008060008061090b611d85565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561094357600080fd5b505afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190614e61565b5060ca5460cc546001600160701b0393841695509190921692506001600160a01b03918216911610156109b3578193508092506109ba565b8093508192505b50509091565b6000336109ce818585611e8e565b60019150505b92915050565b6000336109e8858285611fb2565b6109f385858561202c565b60019150505b9392505050565b600060db54826001600160a81b03161015610a4e5760405162461bcd60e51b8152602060048201526009602482015268151bdbc81cdb585b1b60ba1b60448201526064015b60405180910390fd5b6109d460018360006121fa565b6000336109ce818585610a6e83836112c9565b610a789190615455565b611e8e565b6033546001600160a01b03163314610aa75760405162461bcd60e51b8152600401610a45906152d7565b60db9190915560dc55565b600080610abd6108fd565b5090506000610aca611d85565b905060cc60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1a57600080fd5b505afa158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b529190614f89565b1580610bcc5750806001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b9257600080fd5b505afa158015610ba6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bca9190614f89565b155b15610bda5760009250505090565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1557600080fd5b505afa158015610c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4d9190614f89565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a082319060240160206040518083038186803b158015610c8c57600080fd5b505afa158015610ca0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc49190614f89565b610cce908561557b565b610cd8919061546d565b60cb5460cc5460405163055f575160e41b81526001600160a01b0391821660048201529293506000929116906355f575109060240160a06040518083038186803b158015610d2557600080fd5b505afa158015610d39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5d9190614ed9565b505050506001600160a81b0316905060cc60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610dba57600080fd5b505afa158015610dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df29190614f89565b610dfc838361557b565b610e06919061546d565b94505050505090565b6033546001600160a01b03163314610e395760405162461bcd60e51b8152600401610a45906152d7565b610e43600061245d565b565b6033546001600160a01b03163314610e6f5760405162461bcd60e51b8152600401610a45906152d7565b60d79190915560d855565b6033546001600160a01b03163314610ea45760405162461bcd60e51b8152600401610a45906152d7565b60d4805461ffff191661ffff92909216919091179055565b6033546001600160a01b03163314610ee65760405162461bcd60e51b8152600401610a45906152d7565b610ef060006124af565b5050565b60026097541415610f175760405162461bcd60e51b8152600401610a4590615357565b6002609755600081815260cf6020908152604091829020825160a081018452815460ff80821680845261010083046001600160a81b031695840195909552600160b01b90910463ffffffff16948201949094526001909101546001600160a01b0381166060830152600160a01b900490921615156080830152610f9957600080fd5b610fa282612950565b610fdf5760405162461bcd60e51b815260206004820152600e60248201526d4e6f74206c697175696461626c6560901b6044820152606401610a45565b610fe882612984565b50506001609755565b6033546001600160a01b0316331461101b5760405162461bcd60e51b8152600401610a45906152d7565b60d555565b600060dc54826001600160a81b031610156110695760405162461bcd60e51b8152602060048201526009602482015268151bdbc81cdb585b1b60ba1b6044820152606401610a45565b60d75433600090815260d06020526040902054429161108791615455565b11156110c65760405162461bcd60e51b815260206004820152600e60248201526d11195c1bdcda5d081b1bd8dad95960921b6044820152606401610a45565b6109d460028360006121fa565b6033546001600160a01b031633146110fd5760405162461bcd60e51b8152600401610a45906152d7565b60de80546001600160a01b0390921664010000000002640100000000600160c01b0319909216919091179055565b6033546001600160a01b031633146111555760405162461bcd60e51b8152600401610a45906152d7565b60d655565b6000338161116882866112c9565b9050838110156111c85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610a45565b6111d58286868403611e8e565b506001949350505050565b6000336109ce81858561202c565b6000806000806000806111ff612afa565b50929650909450925090506112148483612d4c565b90979096509394509192909190565b6033546001600160a01b0316331461124d5760405162461bcd60e51b8152600401610a45906152d7565b60d4805461ffff9384166201000090810263ffff0000199283161790925560de8054939094169091029116179055565b6033546001600160a01b031633146112a75760405162461bcd60e51b8152600401610a45906152d7565b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6033546001600160a01b0316331461131e5760405162461bcd60e51b8152600401610a45906152d7565b60de805461ffff191661ffff92909216919091179055565b600081815260cf60209081526040808320600180820154835160a081018552925460ff808216855261010082046001600160a81b031696850196909652600160b01b900463ffffffff16938301939093526001600160a01b0383166060830152600160a01b90920490921680151560808401528392839283929183916113bd918991612faa565b9196509450905080156113d7575060009695505050505050565b6113e0876130bf565b60006113f4866001600160a81b03166124af565b94509050600061140360675490565b1180156114105750600081115b15611443578061141f60675490565b611432906001600160a81b03891661557b565b61143c919061546d565b965061145c565b60d154611459906001600160a81b03881661557b565b96505b50506000851161146b57600080fd5b611475838661315f565b6001600160a01b038316600090815260d06020526040902042905560d2546001600160a81b03851611156114ad57600060d2556114ce565b836001600160a81b031660d260008282546114c8919061559a565b90915550505b60006114e3856001600160a81b03168461323e565b9050811561155a5760de54604051633174ff7d60e21b81526401000000009091046001600160a01b03169063c5d3fdf4906115279060009088908b90600401615217565b600060405180830381600087803b15801561154157600080fd5b505af1158015611555573d6000803e3d6000fd5b505050505b836001600160a01b03167fa7690d0009c94c00bb8bf9ac437b46aa227cf737189169782a3ab5d072bda2ff888784606001518560000151866040015187602001518d6040516115e397969594939291909687526001600160a81b0395909516602087015260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a25050505050919050565b600061160160016135ec565b90508015611619576000805461ff0019166101001790555b6001600160a01b03881661162c57600080fd5b6001600160a01b03871661163f57600080fd5b6001600160a01b03851661165257600080fd5b6001600160a01b03841661166557600080fd5b6000891161167257600080fd5b600160ce81905560d95560d189905560d4805463ffffffff199081166305dc012c1790915560001960d55561070860d6556201518060d7556203f48060d855601e60da55620186a060db55662386f26fc1000060dc5560de8054909116630bb805dc1790556116df613679565b6116e76136a8565b6116f183836136d7565b60cb80546001600160a01b03808b166001600160a01b0319928316811790935560ca8054898316908416811790915560cc80548c841690851617905560cd805489841694169390931790925560de8054918a1664010000000002640100000000600160c01b031990921691909117905561176d91600019613708565b60cd5460ca5461178c916001600160a01b039182169116600019613708565b60cc5460ca546117ab916001600160a01b039182169116600019613708565b60cd5460cc546117ca916001600160a01b039182169116600019613708565b60cd546117f5906001600160a01b03166000196117e5611d85565b6001600160a01b03169190613708565b60cc5461180e906001600160a01b031680600019613708565b8015611854576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b600081815260cf60209081526040808320815160a081018352815460ff808216835261010082046001600160a81b031695830195909552600160b01b900463ffffffff1692810192909252600101546001600160a01b0381166060830152600160a01b9004909116151560808201528190819081906118e19086906002612faa565b92509250925080611ce2576118f660006124af565b505061192a6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b60675460cb546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561197057600080fd5b505afa158015611984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a89190614f89565b6119bb906001600160a81b03871661557b565b6119c5919061546d565b602082015260006119d560675490565b6119dd611d85565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015611a1e57600080fd5b505afa158015611a32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a569190614f89565b611a69906001600160a81b03881661557b565b611a73919061546d565b90508015611b2d5760cd5460cc5460ca54604051635d5155ef60e11b81526001600160a01b039384169363baa2abde93611ac1939082169291169086906000908190309042906004016151d7565b6040805180830381600087803b158015611ada57600080fd5b505af1158015611aee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1291906150ea565b606084015260408301819052611b2790613864565b60808301525b60cb54602083015160405163452d003f60e01b81526001600160a01b039092169163452d003f91611b649160040190815260200190565b6040805180830381600087803b158015611b7d57600080fd5b505af1158015611b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb591906150ea565b8352506000611bc360675490565b866001600160a81b031660dd54611bda919061557b565b611be4919061546d565b905082608001518360600151846000015183611c009190615455565b611c0a9190615455565b611c149190615455565b96508060dd6000828254611c28919061559a565b90915550611c419050306001600160a81b038816613903565b611c4a886130bf565b60ca54611c61906001600160a01b03168689613a51565b825160408085015160808087015160608089015185518f8152602081018f905280870197909752908601939093529084015260a08301526001600160a81b03881660c0830152516001600160a01b038716917f4574d70f7fcf4382fe2ec80c834752c2addb47b7a07d163dd71ca054be2dd741919081900360e00190a25050505b505050919050565b6033546001600160a01b03163314611d145760405162461bcd60e51b8152600401610a45906152d7565b6001600160a01b038116611d795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a45565b611d828161245d565b50565b60cd546040805163c45a015560e01b815290516000926001600160a01b03169163c45a0155916004808301926020929190829003018186803b158015611dca57600080fd5b505afa158015611dde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e029190614ce0565b60cc5460ca5460405163e6a4390560e01b81526001600160a01b039283166004820152908216602482015291169063e6a439059060440160206040518083038186803b158015611e5157600080fd5b505afa158015611e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e899190614ce0565b905090565b6001600160a01b038316611ef05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610a45565b6001600160a01b038216611f515760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610a45565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000611fbe84846112c9565b9050600019811461202657818110156120195760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610a45565b6120268484848403611e8e565b50505050565b6001600160a01b0383166120905760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610a45565b6001600160a01b0382166120f25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610a45565b6001600160a01b0383166000908152606560205260409020548181101561216a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610a45565b6001600160a01b038085166000908152606560205260408082208585039055918516815290812080548492906121a1908490615455565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516121ed91815260200190565b60405180910390a3612026565b60006002609754141561221f5760405162461bcd60e51b8152600401610a4590615357565b60026097556001600160a81b03831661223757600080fd5b60006122416111ee565b509394505050505060ff8516600114156122b45760d55460d25461226e6001600160a81b03871684615455565b6122789190615455565b11156122b45760405162461bcd60e51b815260206004820152600b60248201526a10d85c081c995858da195960aa1b6044820152606401610a45565b60ce5491506122c4826001615455565b60ce5560d6546000906122d79042615455565b6040805160a08101825260ff808a168083526001600160a81b03808b16602080860191825263ffffffff80891687890190815233606089019081528e151560808a0190815260008f815260cf909552999093209751885494519151909216600160b01b0263ffffffff60b01b1991909516610100026001600160b01b03199094169190961617919091179390931617835590516001928301805494511515600160a01b026001600160a81b03199095166001600160a01b0392909216919091179390931790925591925014156123c857846001600160a81b031660d260008282546123c29190615455565b90915550505b6123db86866001600160a81b0316613a81565b337fbf4d2957ec4d507c14dcbff7e87761bcb7d387e35cab2dcbf05cb283906599ec848888858761240b60675490565b6040805196875260ff9590951660208701526001600160a81b03939093168585015263ffffffff919091166060850152608084015260a0830152519081900360c00190a2505060016097559392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060008060006124c086613b04565b60d4549499509097509095509093509150600090612710906124ec9062010000900461ffff168261542f565b61ffff1660cb60009054906101000a90046001600160a01b03166001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b15801561253e57600080fd5b505afa158015612552573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125769190614f89565b612580919061557b565b61258a919061546d565b9050600060cb60009054906101000a90046001600160a01b03166001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b1580156125dc57600080fd5b505afa1580156125f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126149190614f89565b905082156129465760db546126299083615455565b8111156126dc57600061263c838361559a565b60cb54604051630441a3e760e41b81526004810183905260001960248201529192506000916001600160a01b039091169063441a3e70906044016040805180830381600087803b15801561268f57600080fd5b505af11580156126a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126c791906150ea565b9150506126d4818961323e565b505050612931565b8160db54826126eb9190615455565b10156129315760006126fd828461559a565b90508061270a8588615455565b11801561274f575060de5462010000900461ffff16886127108361272e888b615455565b612738919061559a565b612742919061557b565b61274c919061546d565b10155b1561292f5760006127608588615455565b612768611d85565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156127a057600080fd5b505afa1580156127b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d89190614f89565b6127e2908461557b565b6127ec919061546d565b60cd5460cc5460ca54604051635d5155ef60e11b815293945060009384936001600160a01b039081169363baa2abde9361283893918316921690889087908190309042906004016151d7565b6040805180830381600087803b15801561285157600080fd5b505af1158015612865573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288991906150ea565b9150915060008161289984613864565b6128a39190615455565b60cb54604051631c57762b60e31b815260048101839052600060248201529192506001600160a01b03169063e2bbb15890604401602060405180830381600087803b1580156128f157600080fd5b505af1158015612905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129299190614f89565b50505050505b505b6129396111ee565b50939a5098509650909350505b5050505050915091565b60d854600082815260cf60205260408120549091429161297d9190600160b01b900463ffffffff16615455565b1092915050565b600081815260cf6020908152604091829020825160a081018452815460ff80821680845261010083046001600160a81b031695840195909552600160b01b90910463ffffffff16948201949094526001918201546001600160a01b0381166060830152600160a01b9004909316151560808401521415612a235780602001516001600160a81b031660d26000828254612a1d919061559a565b90915550505b612a2c826130bf565b805160ff1660021415612a5c5760608101516020820151612a579130916001600160a81b0316613a51565b612a87565b6060810151602082015160ca54612a87926001600160a01b03909116916001600160a81b0316613a51565b60608101518151602083015160405133936001600160a01b0316927ff6f94f933b96f98ce5b3687b190c131a0c4ede50caec0a7b2f1ea76035eec97292612aee928892919092835260ff9190911660208301526001600160a81b0316604082015260600190565b60405180910390a35050565b6000806000806000612b0a6108fd565b60cb5460cc5460405163055f575160e41b81526001600160a01b0391821660048201529296509294506001926000929116906355f575109060240160a06040518083038186803b158015612b5d57600080fd5b505afa158015612b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b959190614ed9565b505050506001600160a81b0316905080600014612c365760cb5460cc546040516329b2a60b60e21b81526001600160a01b03918216600482015291169063a6ca982c9060240160c06040518083038186803b158015612bf357600080fd5b505afa158015612c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c2b9190614fa1565b509399509194505050505b81612c4057600080fd5b600084118015612c505750600085115b15612d435760cc60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ca357600080fd5b505afa158015612cb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cdb9190614f89565b612ce5878661557b565b612cef919061546d565b96506000858811612d0957612d04888761559a565b612d13565b612d13868961559a565b60d45490915061271090612d2b9061ffff168a61557b565b612d35919061546d565b811115612d4157600193505b505b50509091929394565b6000806000612d59611d85565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a082319060240160206040518083038186803b158015612d9e57600080fd5b505afa158015612db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dd69190614f89565b9050600080600083118015612e5b57506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612e2157600080fd5b505afa158015612e35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e599190614f89565b115b15612f6f57836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612e9957600080fd5b505afa158015612ead573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ed19190614f89565b612edb848a61557b565b612ee5919061546d565b9150836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612f2057600080fd5b505afa158015612f34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f589190614f89565b612f62848961557b565b612f6c919061546d565b90505b612f77613b34565b945080828660dd54612f899190615455565b612f939190615455565b612f9d9190615455565b9550505050509250929050565b600080600060026097541415612fd25760405162461bcd60e51b8152600401610a4590615357565b600260975560608501516001600160a01b0316612fee57600080fd5b60c9546001600160a01b031633148061301c575084606001516001600160a01b0316336001600160a01b0316145b61302557600080fd5b8360ff16856000015160ff161461303b57600080fd5b846040015163ffffffff164210156130805760405162461bcd60e51b81526020600482015260086024820152672a37b79039b7b7b760c11b6044820152606401610a45565b61308986612950565b1561309f5761309786612984565b5060016130ae565b84602001519250846060015191505b600160978190555093509350939050565b600081815260cf6020526040812080546001600160d01b031916815560010180546001600160a81b031916905560d95490805b60ce5483108015613104575060da5482105b80156131285750600083815260cf60205260409020600101546001600160a01b0316155b15613151578161313781615618565b925050828061314590615618565b935050600190506130f2565b801561202657505060d95550565b6001600160a01b0382166131b55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610a45565b80606760008282546131c79190615455565b90915550506001600160a01b038216600090815260656020526040812080548392906131f4908490615455565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6132706040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b60008061327b6108fd565b90925090506000806001841580613290575083155b1561329d57506000613473565b60cc60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156132eb57600080fd5b505afa1580156132ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133239190614f89565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561337157600080fd5b505afa158015613385573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133a991906151a1565b6133b490600a6154d0565b6133be908961557b565b6133c8919061546d565b91508460cc60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561341957600080fd5b505afa15801561342d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061345191906151a1565b61345c90600a6154d0565b613466908661557b565b613470919061546d565b92505b801561355357613484888484613cd9565b60808901819052606089019190915290875260dd80546000906134a8908490615455565b909155505060cb546060870151604051631c57762b60e31b81526004810191909152600060248201526001600160a01b039091169063e2bbb15890604401602060405180830381600087803b15801561350057600080fd5b505af1158015613514573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135389190614f89565b508551613544906140a9565b604088015260208701526135e1565b6060860188905260cb54604051631c57762b60e31b8152600481018a9052600060248201526001600160a01b039091169063e2bbb15890604401602060405180830381600087803b1580156135a757600080fd5b505af11580156135bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135df9190614f89565b505b505050505092915050565b60008054610100900460ff1615613633578160ff16600114801561360f5750303b155b61362b5760405162461bcd60e51b8152600401610a4590615289565b506000919050565b60005460ff80841691161061365a5760405162461bcd60e51b8152600401610a4590615289565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166136a05760405162461bcd60e51b8152600401610a459061530c565b610e436141cc565b600054610100900460ff166136cf5760405162461bcd60e51b8152600401610a459061530c565b610e436141fa565b600054610100900460ff166136fe5760405162461bcd60e51b8152600401610a459061530c565b610ef0828261422a565b8015806137915750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561375757600080fd5b505afa15801561376b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061378f9190614f89565b155b6137fc5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610a45565b6040516001600160a01b03831660248201526044810182905261385f90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614278565b505050565b6000816001600160a81b038116811461387c57600080fd5b60cc5460405163ec27050760e01b81526001600160a81b03831660048201526001600160a01b039091169063ec270507906024015b602060405180830381600087803b1580156138cb57600080fd5b505af11580156138df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f99190614f89565b6001600160a01b0382166139635760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610a45565b6001600160a01b038216600090815260656020526040902054818110156139d75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610a45565b6001600160a01b0383166000908152606560205260408120838303905560678054849290613a0690849061559a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b03831660248201526044810182905261385f90849063a9059cbb60e01b90606401613828565b60ff821660021415613aec5733600090815260656020526040902054811115613ae05760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b6044820152606401610a45565b610ef03033818461434a565b60ca54610ef0906001600160a01b031633308461434a565b6000806000806000613b1586614382565b91945092509050613b268382612d4c565b909790965092945090925090565b60cb546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a082319060240160206040518083038186803b158015613b7c57600080fd5b505afa158015613b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bb49190614f89565b90508015613cd55760cb60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015613c0a57600080fd5b505afa158015613c1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c429190614f89565b60cb54604051630d9c362960e41b8152600160048201526001600160a01b039091169063d9c362909060240160206040518083038186803b158015613c8657600080fd5b505afa158015613c9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cbe9190614f89565b613cc8908361557b565b613cd2919061546d565b91505b5090565b60de546000908190819061271090613cf59061ffff168861557b565b613cff919061546d565b90506000613d0d828861559a565b9050600060cb60009054906101000a90046001600160a01b03166001600160a01b0316636f7d78286040518163ffffffff1660e01b815260040160206040518083038186803b158015613d5f57600080fd5b505afa158015613d73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d979190614ce0565b6001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b158015613dcf57600080fd5b505afa158015613de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e079190615154565b505063ffffffff169050600060cb60009054906101000a90046001600160a01b03166001600160a01b031663d934c20b6040518163ffffffff1660e01b815260040160206040518083038186803b158015613e6157600080fd5b505afa158015613e75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e99919061513a565b60cb5460cc546040516329b2a60b60e21b81526001600160a01b03918216600482015263ffffffff93909316935060009291169063a6ca982c9060240160c06040518083038186803b158015613eee57600080fd5b505afa158015613f02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f269190614fa1565b5050505050905061271061ffff168289613f40919061557b565b613f4a8b8661557b565b613f549190615455565b613f5e919061557b565b60d4548390613f779062010000900461ffff168b61557b565b613f81919061557b565b613f8b9190615455565b84612710613f998b8761557b565b613fa3919061557b565b613fad919061557b565b613fb7919061546d565b965060008160cc60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561400a57600080fd5b505afa15801561401e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140429190614f89565b61404c908a61557b565b614056919061546d565b90506000806140636108fd565b9092509050600082614075838661557b565b61407f919061546d565b90508061408c8c8a61559a565b614096919061559a565b9950505050505050505093509350939050565b6000806140b583614411565b90506000806140c26108fd565b90925090506000826140d4838661557b565b6140de919061546d565b60cd5460cc5460ca5460405162e8e33760e81b81526001600160a01b039283166004820152908216602482015260448101889052606481018490526084810188905260a481018490523060c48201524260e482015292935060009291169063e8e337009061010401606060405180830381600087803b15801561416057600080fd5b505af1158015614174573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614198919061510d565b50965090508186146141a957600080fd5b8481146141b557600080fd5b6141bd6108fd565b50959794965093945050505050565b600054610100900460ff166141f35760405162461bcd60e51b8152600401610a459061530c565b6001609755565b600054610100900460ff166142215760405162461bcd60e51b8152600401610a459061530c565b610e433361245d565b600054610100900460ff166142515760405162461bcd60e51b8152600401610a459061530c565b8151614264906068906020850190614b6b565b50805161385f906069906020840190614b6b565b60006142cd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166144629092919063ffffffff16565b80519091501561385f57808060200190518101906142eb9190614e47565b61385f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a45565b6040516001600160a01b03808516602483015283166044820152606481018290526120269085906323b872dd60e01b90608401613828565b600080600080614390612afa565b9397509195509350909150508015614409576143ba60dd54866143b39190615455565b8584614479565b6143c2612afa565b93975091955093509091505080156144095760405162461bcd60e51b815260206004820152600a602482015269151bdbc81cdad95dd95960b21b6044820152606401610a45565b509193909250565b6000816001600160a81b038116811461442957600080fd5b60cc5460405163d4a56af160e01b81526001600160a81b03831660048201526001600160a01b039091169063d4a56af1906024016138b1565b60606144718484600085614a01565b949350505050565b600082821161449d57600261448e838561559a565b614498919061546d565b6144b3565b60026144a9848461559a565b6144b3919061546d565b905060008185101561466b5760006144cb868461559a565b60cb54604051630d9c362960e41b8152600160048201529192506001600160a01b03169063452d003f90829063d9c362909060240160206040518083038186803b15801561451857600080fd5b505afa15801561452c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145509190614f89565b60cb60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561459e57600080fd5b505afa1580156145b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145d69190614f89565b6145e0908561557b565b6145ea919061546d565b6040518263ffffffff1660e01b815260040161460891815260200190565b6040805180830381600087803b15801561462157600080fd5b505af1158015614635573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061465991906150ea565b925061466790508683615455565b9250505b6000848411156147e857600061468084614411565b6040805160028082526060820183529293506000929091602083019080368337505060cc5482519293506001600160a01b0316918391506000906146d457634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260ca5482519116908290600190811061471357634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260cd546040516338ed173960e01b815260009291909116906338ed17399061475d908690859087903090429060040161538e565b600060405180830381600087803b15801561477757600080fd5b505af115801561478b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526147b39190810190614d9f565b9050806001815181106147d657634e487b7160e01b600052603260045260246000fd5b6020026020010151935050505061494e565b604080516002808252606082018352600092602083019080368337505060ca5482519293506001600160a01b03169183915060009061483757634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260cc5482519116908290600190811061487657634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260cd546040516338ed173960e01b815260009291909116906338ed1739906148c0908890859087903090429060040161538e565b600060405180830381600087803b1580156148da57600080fd5b505af11580156148ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526149169190810190614d9f565b90506149498160018151811061493c57634e487b7160e01b600052603260045260246000fd5b6020026020010151613864565b925050505b82811161495a57600080fd5b60cb546001600160a01b031663e2bbb15883614976868561559a565b6149809190615455565b6040516001600160e01b031960e084901b168152600481019190915260006024820152604401602060405180830381600087803b1580156149c057600080fd5b505af11580156149d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149f89190614f89565b50505050505050565b606082471015614a625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a45565b6001600160a01b0385163b614ab95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a45565b600080866001600160a01b03168587604051614ad591906151bb565b60006040518083038185875af1925050503d8060008114614b12576040519150601f19603f3d011682016040523d82523d6000602084013e614b17565b606091505b5091509150614b27828286614b32565b979650505050505050565b60608315614b415750816109f9565b825115614b515782518084602001fd5b8160405162461bcd60e51b8152600401610a459190615256565b828054614b77906155dd565b90600052602060002090601f016020900481019282614b995760008555614bdf565b82601f10614bb257805160ff1916838001178555614bdf565b82800160010185558215614bdf579182015b82811115614bdf578251825591602001919060010190614bc4565b50613cd59291505b80821115613cd55760008155600101614be7565b8051801515811461367457600080fd5b600082601f830112614c1b578081fd5b813567ffffffffffffffff811115614c3557614c35615649565b614c48601f8201601f19166020016153fe565b818152846020838601011115614c5c578283fd5b816020850160208301379081016020019190915292915050565b80516001600160701b038116811461367457600080fd5b803561ffff8116811461367457600080fd5b805163ffffffff8116811461367457600080fd5b805160ff8116811461367457600080fd5b600060208284031215614cd5578081fd5b81356109f98161565f565b600060208284031215614cf1578081fd5b81516109f98161565f565b60008060408385031215614d0e578081fd5b8235614d198161565f565b91506020830135614d298161565f565b809150509250929050565b600080600060608486031215614d48578081fd5b8335614d538161565f565b92506020840135614d638161565f565b929592945050506040919091013590565b60008060408385031215614d86578182fd5b8235614d918161565f565b946020939093013593505050565b60006020808385031215614db1578182fd5b825167ffffffffffffffff80821115614dc8578384fd5b818501915085601f830112614ddb578384fd5b815181811115614ded57614ded615649565b8060051b9150614dfe8483016153fe565b8181528481019084860184860187018a1015614e18578788fd5b8795505b83861015614e3a578051835260019590950194918601918601614e1c565b5098975050505050505050565b600060208284031215614e58578081fd5b6109f982614bfb565b600080600060608486031215614e75578081fd5b614e7e84614c76565b9250614e8c60208501614c76565b9150614e9a60408501614c9f565b90509250925092565b600060208284031215614eb4578081fd5b6109f982614c8d565b600060208284031215614ece578081fd5b81356109f981615674565b600080600080600060a08688031215614ef0578283fd5b8551614efb81615674565b9450614f0960208701614cb3565b9350614f1760408701614c9f565b9250614f2560608701614c9f565b9150614f3360808701614c9f565b90509295509295909350565b60008060408385031215614f51578182fd5b614f5a83614c8d565b9150614f6860208401614c8d565b90509250929050565b600060208284031215614f82578081fd5b5035919050565b600060208284031215614f9a578081fd5b5051919050565b60008060008060008060c08789031215614fb9578384fd5b86519550614fc960208801614bfb565b94506040870151614fd981615674565b9350614fe760608801614cb3565b92506080870151915060a087015190509295509295509295565b600080600080600080600080610100898b03121561501d578586fd5b88359750602089013561502f8161565f565b9650604089013561503f8161565f565b9550606089013561504f8161565f565b9450608089013561505f8161565f565b935060a089013561506f8161565f565b925060c089013567ffffffffffffffff8082111561508b578384fd5b6150978c838d01614c0b565b935060e08b01359150808211156150ac578283fd5b506150b98b828c01614c0b565b9150509295985092959890939650565b600080604083850312156150db578182fd5b50508035926020909101359150565b600080604083850312156150fc578182fd5b505080516020909101519092909150565b600080600060608486031215615121578081fd5b8351925060208401519150604084015190509250925092565b60006020828403121561514b578081fd5b6109f982614c9f565b600080600060608486031215615168578081fd5b61517184614c9f565b9250602084015169ffffffffffffffffffff8116811461518f578182fd5b80925050604084015190509250925092565b6000602082840312156151b2578081fd5b6109f982614cb3565b600082516151cd8184602087016155b1565b9190910192915050565b6001600160a01b039788168152958716602087015260408601949094526060850192909252608084015290921660a082015260c081019190915260e00190565b606081016004851061523957634e487b7160e01b600052602160045260246000fd5b9381526001600160a01b0392909216602083015260409091015290565b60208152600082518060208401526152758160408501602087016155b1565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b818110156153dd5784516001600160a01b0316835293830193918301916001016153b8565b50506001600160a01b03969096166060850152505050608001529392505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561542757615427615649565b604052919050565b600061ffff80831681851680830382111561544c5761544c615633565b01949350505050565b6000821982111561546857615468615633565b500190565b60008261548857634e487b7160e01b81526012600452602481fd5b500490565b600181815b808511156154c85781600019048211156154ae576154ae615633565b808516156154bb57918102915b93841c9390800290615492565b509250929050565b60006109f960ff8416836000826154e9575060016109d4565b816154f6575060006109d4565b816001811461550c576002811461551657615532565b60019150506109d4565b60ff84111561552757615527615633565b50506001821b6109d4565b5060208310610133831016604e8410600b8410161715615555575081810a6109d4565b61555f838361548d565b806000190482111561557357615573615633565b029392505050565b600081600019048311821515161561559557615595615633565b500290565b6000828210156155ac576155ac615633565b500390565b60005b838110156155cc5781810151838201526020016155b4565b838111156120265750506000910152565b600181811c908216806155f157607f821691505b6020821081141561561257634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561562c5761562c615633565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611d8257600080fd5b6001600160a81b0381168114611d8257600080fdfea2646970667358221220708bea4cca1abf983b81d36478a8c5ee8e65ccefde0bfedf5749e826c5520be464736f6c63430008040033",
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 34444,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 34447,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 37301,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 34324,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address"
          },
          {
            "astId": 34436,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 34657,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 34663,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 34665,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256"
          },
          {
            "astId": 34667,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage"
          },
          {
            "astId": 34669,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage"
          },
          {
            "astId": 35248,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage"
          },
          {
            "astId": 34593,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256"
          },
          {
            "astId": 34637,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 10478,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "fulfiller",
            "offset": 0,
            "slot": "201",
            "type": "t_address"
          },
          {
            "astId": 10481,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "token",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC20Upgradeable)35327"
          },
          {
            "astId": 10484,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "platform",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IPlatform)18123"
          },
          {
            "astId": 10488,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "volToken",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IVolatilityToken)19308"
          },
          {
            "astId": 10491,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "router",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IUniswapV2Router02)16665"
          },
          {
            "astId": 10494,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "nextRequestId",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256"
          },
          {
            "astId": 10500,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "requests",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_uint256,t_struct(Request)10461_storage)"
          },
          {
            "astId": 10504,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "lastDepositTimestamp",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 10506,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "initialTokenToThetaTokenRate",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256"
          },
          {
            "astId": 10508,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "totalDepositRequestsAmount",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256"
          },
          {
            "astId": 10511,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "totalVaultLeveragedAmount",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256"
          },
          {
            "astId": 10513,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "minPoolSkewPercentage",
            "offset": 0,
            "slot": "212",
            "type": "t_uint16"
          },
          {
            "astId": 10516,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "extraLiqidityPercentage",
            "offset": 2,
            "slot": "212",
            "type": "t_uint16"
          },
          {
            "astId": 10518,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "depositCap",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256"
          },
          {
            "astId": 10520,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "requestDelay",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256"
          },
          {
            "astId": 10522,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "lockupPeriod",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256"
          },
          {
            "astId": 10524,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "liquidationPeriod",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256"
          },
          {
            "astId": 10527,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "minRequestId",
            "offset": 0,
            "slot": "217",
            "type": "t_uint256"
          },
          {
            "astId": 10530,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "maxMinRequestIncrements",
            "offset": 0,
            "slot": "218",
            "type": "t_uint256"
          },
          {
            "astId": 10532,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "minDepositAmount",
            "offset": 0,
            "slot": "219",
            "type": "t_uint256"
          },
          {
            "astId": 10534,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "minWithdrawAmount",
            "offset": 0,
            "slot": "220",
            "type": "t_uint256"
          },
          {
            "astId": 10536,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "totalHoldingsAmount",
            "offset": 0,
            "slot": "221",
            "type": "t_uint256"
          },
          {
            "astId": 10538,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "depositHoldingsPercentage",
            "offset": 0,
            "slot": "222",
            "type": "t_uint16"
          },
          {
            "astId": 10541,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "minDexPercentageAllowed",
            "offset": 2,
            "slot": "222",
            "type": "t_uint16"
          },
          {
            "astId": 10544,
            "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
            "label": "rewardRouter",
            "offset": 4,
            "slot": "222",
            "type": "t_contract(IRewardRouter)33575"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)35327": {
            "encoding": "inplace",
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IPlatform)18123": {
            "encoding": "inplace",
            "label": "contract IPlatform",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardRouter)33575": {
            "encoding": "inplace",
            "label": "contract IRewardRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)16665": {
            "encoding": "inplace",
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(IVolatilityToken)19308": {
            "encoding": "inplace",
            "label": "contract IVolatilityToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_uint256,t_struct(Request)10461_storage)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => struct ThetaVault.Request)",
            "numberOfBytes": "32",
            "value": "t_struct(Request)10461_storage"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Request)10461_storage": {
            "encoding": "inplace",
            "label": "struct ThetaVault.Request",
            "members": [
              {
                "astId": 10452,
                "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
                "label": "requestType",
                "offset": 0,
                "slot": "0",
                "type": "t_uint8"
              },
              {
                "astId": 10454,
                "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
                "label": "tokenAmount",
                "offset": 1,
                "slot": "0",
                "type": "t_uint168"
              },
              {
                "astId": 10456,
                "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
                "label": "targetTimestamp",
                "offset": 22,
                "slot": "0",
                "type": "t_uint32"
              },
              {
                "astId": 10458,
                "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
                "label": "owner",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 10460,
                "contract": "contracts/theta-vault/ThetaVaultContracts.sol:CVIUSDCThetaVault",
                "label": "shouldStake",
                "offset": 20,
                "slot": "1",
                "type": "t_bool"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "encoding": "inplace",
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint168": {
            "encoding": "inplace",
            "label": "uint168",
            "numberOfBytes": "21"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "encoding": "inplace",
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "creationBlock": 62435844,
      "history": []
    },
    "CVIUSDCThetaVault_Proxy": {
      "address": "0xFDeB59a2B4891ea17610EE38665249acC9FCC506",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0xFDeB59a2B4891ea17610EE38665249acC9FCC506",
        "transactionIndex": 1,
        "gasUsed": "5912292",
        "logsBloom": "0x000000000008000000000000000000004000000000000000008000000040001000000000000000000000000004000004000000000000100000000000002100004000000000000800000000000000020008012000000000000000000000000000000000000280000001000000000008000000008000000000000000000000004000000200000000000000000000000000000000000000800000000000048000000200800000000000000000010006000200004000000008100000000000000000000000200000000000800000000400000000001004002000040000000000200000100000008000000008000000000000000000000000a0000000000000000000",
        "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e",
        "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFDeB59a2B4891ea17610EE38665249acC9FCC506",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x000000000000000000000000aeb3ec68310cce37da6601e9ca38542a0c932ddc"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFDeB59a2B4891ea17610EE38665249acC9FCC506",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 1,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506",
              "0x000000000000000000000000cef38d86c40522a2b58d82b658c194a9eb340091"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 2,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506",
              "0x0000000000000000000000001b02da8cb0d097eb8d57a175b88c7d8b47997506"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 3,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506",
              "0x0000000000000000000000008096ad3107715747361acefe685943bfb427c722"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 4,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0x8096aD3107715747361acefE685943bFB427C722",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506",
              "0x0000000000000000000000001b02da8cb0d097eb8d57a175b88c7d8b47997506"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 5,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xeDE0CE8cdc65bcF6422f3Afb9d7cDb3e59C09658",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506",
              "0x0000000000000000000000001b02da8cb0d097eb8d57a175b88c7d8b47997506"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 6,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0x8096aD3107715747361acefE685943bFB427C722",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x000000000000000000000000fdeb59a2b4891ea17610ee38665249acc9fcc506",
              "0x0000000000000000000000008096ad3107715747361acefe685943bfb427c722"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 7,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFDeB59a2B4891ea17610EE38665249acC9FCC506",
            "topics": [
              "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "logIndex": 8,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29538748,
            "transactionHash": "0x44be200489b5b03cb54997b93d82711fabdcbecea9e3aa8d75067c923852d214",
            "address": "0xFDeB59a2B4891ea17610EE38665249acC9FCC506",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
            ],
            "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d2669586e17fc93773cc637becfa983525501eb",
            "logIndex": 9,
            "blockHash": "0x1ec97920d2802b9bbec25884e93cf3d925e4fd1d56e3a36f00631c62563ef87e"
          }
        ],
        "blockNumber": 29538748,
        "cumulativeGasUsed": "5912292",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0xAEb3Ec68310ccE37DA6601E9Ca38542A0C932Ddc",
        "0x9D2669586E17fC93773cc637becfA983525501Eb",
        "0xdf45fe97000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000cef38d86c40522a2b58d82b658c194a9eb3400910000000000000000000000008096ad3107715747361acefe685943bfb427c722000000000000000000000000ff970a61a04b1ca14834a43f5de4533ebddb5cc80000000000000000000000001b02da8cb0d097eb8d57a175b88c7d8b4799750600000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000d54686574612043564f4c204c50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009542d43564f4c2d4c500000000000000000000000000000000000000000000000"
      ],
      "numDeployments": 1,
      "solcInputHash": "0e89febeebc7444140de8e67c9067d2c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x93b4e21c931252739a1ec13ea31d3d35a5c068be3163ccab83e4d70c40355f03\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view virtual returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(Address.isContract(IBeacon(newBeacon).implementation()), \\\"ERC1967: beacon implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17668652127feebed0ce8d9431ef95ccc8c4292f03e3b8cf06c6ca16af396633\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xd5d1fd16e9faff7fcb3a52e02a8d49156f42a38a03f07b5f1810c21c2149a8ab\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3777e696b62134e6177440dbe6e6601c0c156a443f57167194b67e75527439de\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
      "deployedBytecode": "0x60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033",
      "devdoc": {
        "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
        "kind": "dev",
        "methods": {
          "admin()": {
            "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
          },
          "constructor": {
            "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
          },
          "implementation()": {
            "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      },
      "creationBlock": 29538748,
      "history": []
    },
    "CVIUSDCVolTokenRequestFulfiller": {
      "address": "0x3ce3886cb8FE17940FBABFBF727e32f38e2b991C",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "BURN_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MINT_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "checkUpkeep",
          "outputs": [
            {
              "internalType": "bool",
              "name": "upkeepNeeded",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "enableWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "fulfillers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRequestManager",
              "name": "_requestManager",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "performUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "requestManager",
          "outputs": [
            {
              "internalType": "contract IRequestManager",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_enableWhitelist",
              "type": "bool"
            }
          ],
          "name": "setEnableWhitelist",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "name": "setFulfillerAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRequestManager",
              "name": "_requestManager",
              "type": "address"
            }
          ],
          "name": "setRequestManager",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        }
      ],
      "transactionHash": "0xfa2c2a51aca9a1ed7349f3932a9f0c1127839b7cbbd81afe1e1ef02a85a8d33c",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x3ce3886cb8FE17940FBABFBF727e32f38e2b991C",
        "transactionIndex": 1,
        "gasUsed": "5182338",
        "logsBloom": "0x
        "blockHash": "0xdc47afbd13f0088bee8ffabdd0bb01c0ac2d197bbf85dec19fc7ea533ad48a43",
        "transactionHash": "0xfa2c2a51aca9a1ed7349f3932a9f0c1127839b7cbbd81afe1e1ef02a85a8d33c",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 38037677,
            "transactionHash": "0xfa2c2a51aca9a1ed7349f3932a9f0c1127839b7cbbd81afe1e1ef02a85a8d33c",
            "address": "0x3ce3886cb8FE17940FBABFBF727e32f38e2b991C",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x0000000000000000000000000ac1db24e39d9325ce240b56a150b04847175358"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0xdc47afbd13f0088bee8ffabdd0bb01c0ac2d197bbf85dec19fc7ea533ad48a43"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 38037677,
            "transactionHash": "0xfa2c2a51aca9a1ed7349f3932a9f0c1127839b7cbbd81afe1e1ef02a85a8d33c",
            "address": "0x3ce3886cb8FE17940FBABFBF727e32f38e2b991C",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 1,
            "blockHash": "0xdc47afbd13f0088bee8ffabdd0bb01c0ac2d197bbf85dec19fc7ea533ad48a43"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 38037677,
            "transactionHash": "0xfa2c2a51aca9a1ed7349f3932a9f0c1127839b7cbbd81afe1e1ef02a85a8d33c",
            "address": "0x3ce3886cb8FE17940FBABFBF727e32f38e2b991C",
            "topics": [
              "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "logIndex": 2,
            "blockHash": "0xdc47afbd13f0088bee8ffabdd0bb01c0ac2d197bbf85dec19fc7ea533ad48a43"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 38037677,
            "transactionHash": "0xfa2c2a51aca9a1ed7349f3932a9f0c1127839b7cbbd81afe1e1ef02a85a8d33c",
            "address": "0x3ce3886cb8FE17940FBABFBF727e32f38e2b991C",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
            ],
            "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d2669586e17fc93773cc637becfa983525501eb",
            "logIndex": 3,
            "blockHash": "0xdc47afbd13f0088bee8ffabdd0bb01c0ac2d197bbf85dec19fc7ea533ad48a43"
          }
        ],
        "blockNumber": 38037677,
        "cumulativeGasUsed": "5182338",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0x0ac1DB24E39d9325cE240B56A150B04847175358",
        "0x9D2669586E17fC93773cc637becfA983525501Eb",
        "0xc4d66de80000000000000000000000008096ad3107715747361acefe685943bfb427c722"
      ],
      "numDeployments": 1,
      "solcInputHash": "0e89febeebc7444140de8e67c9067d2c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x93b4e21c931252739a1ec13ea31d3d35a5c068be3163ccab83e4d70c40355f03\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view virtual returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(Address.isContract(IBeacon(newBeacon).implementation()), \\\"ERC1967: beacon implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17668652127feebed0ce8d9431ef95ccc8c4292f03e3b8cf06c6ca16af396633\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xd5d1fd16e9faff7fcb3a52e02a8d49156f42a38a03f07b5f1810c21c2149a8ab\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3777e696b62134e6177440dbe6e6601c0c156a443f57167194b67e75527439de\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
      "deployedBytecode": "0x60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033",
      "execute": {
        "methodName": "initialize",
        "args": [
          "0x8096aD3107715747361acefE685943bFB427C722"
        ]
      },
      "implementation": "0x0ac1DB24E39d9325cE240B56A150B04847175358",
      "devdoc": {
        "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
        "kind": "dev",
        "methods": {
          "admin()": {
            "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
          },
          "constructor": {
            "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
          },
          "implementation()": {
            "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      },
      "creationBlock": 38037677,
      "history": [
        {
          "blockNumber": 29537998,
          "address": "0x6902bB81dC4F30408B801540f5924550cbee8D24"
        },
        {
          "blockNumber": 28314384,
          "address": "0xCAD3F68E65df36121FC76B4F5E5D5d408A610eC4"
        },
        {
          "blockNumber": 27433820,
          "address": "0xE1db41617188103cD5E4B2EBdA9C2fb2D0f0a375"
        },
        {
          "blockNumber": 21240309,
          "address": "0x3D5375836d6FcBa61735DDEA4bA183063Ce57d5f"
        }
      ]
    },
    "CVIUSDCVolTokenRequestFulfiller_Implementation": {
      "address": "0x0ac1DB24E39d9325cE240B56A150B04847175358",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "BURN_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MINT_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "checkUpkeep",
          "outputs": [
            {
              "internalType": "bool",
              "name": "upkeepNeeded",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "enableWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "fulfillers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRequestManager",
              "name": "_requestManager",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "performUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "requestManager",
          "outputs": [
            {
              "internalType": "contract IRequestManager",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_enableWhitelist",
              "type": "bool"
            }
          ],
          "name": "setEnableWhitelist",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "name": "setFulfillerAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRequestManager",
              "name": "_requestManager",
              "type": "address"
            }
          ],
          "name": "setRequestManager",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "transactionHash": "0x9867765f99682faab6035c19cd1ae2ce89204a1a5c420f20263cd0ef49936d9f",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x0ac1DB24E39d9325cE240B56A150B04847175358",
        "transactionIndex": 1,
        "gasUsed": "5419338",
        "logsBloom": "0x
        "blockHash": "0xe5631f62a3f00d147ea6d23d7960024f8c24e2140b5aa2bfe4d83ce4cf1fe42d",
        "transactionHash": "0x9867765f99682faab6035c19cd1ae2ce89204a1a5c420f20263cd0ef49936d9f",
        "logs": [],
        "blockNumber": 38037660,
        "cumulativeGasUsed": "5419338",
        "status": 1,
        "byzantium": true
      },
      "args": [],
      "numDeployments": 1,
      "solcInputHash": "7f3c46bae143bb40321ae0fb3b8535cc",
      "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN_REQUEST_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_REQUEST_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fulfillers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRequestManager\",\"name\":\"_requestManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestManager\",\"outputs\":[{\"internalType\":\"contract IRequestManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enableWhitelist\",\"type\":\"bool\"}],\"name\":\"setEnableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"setFulfillerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRequestManager\",\"name\":\"_requestManager\",\"type\":\"address\"}],\"name\":\"setRequestManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/volatility-token/VolatilityTokenRequestFulfillerContracts.sol\":\"CVIUSDCVolTokenRequestFulfiller\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easilly be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xc4a031d4b6e3fa6d40a09bfbf99d3fdd22bbe77ba97065bc790b4cab22adee85\",\"license\":\"MIT\"},\"@coti-cvi/contracts-cvi/contracts/RequestFulfiller.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\nimport \\\"./interfaces/IRequestFulfiller.sol\\\";\\n\\nabstract contract RequestFulfiller is IRequestFulfiller, OwnableUpgradeable, KeeperCompatibleInterface {\\n\\n    IRequestManager public requestManager;\\n\\n    bool public enableWhitelist;\\n    mapping (address => bool) public fulfillers;\\n\\n    function initialize(IRequestManager _requestManager) external initializer {\\n        OwnableUpgradeable.__Ownable_init();\\n\\n        enableWhitelist = true;\\n        requestManager = _requestManager;\\n    }\\n\\n    function setRequestManager(IRequestManager _requestManager) external override onlyOwner {\\n        requestManager = _requestManager;\\n    }\\n\\n    function setEnableWhitelist(bool _enableWhitelist) external override onlyOwner {\\n        enableWhitelist = _enableWhitelist;\\n    }\\n\\n    function setFulfillerAddress(address user, bool isAllowed) external override onlyOwner {\\n        fulfillers[user] = isAllowed;\\n    }\\n\\n    function checkUpkeep(\\n        bytes calldata /* checkData */\\n    ) external view override returns (bool upkeepNeeded, bytes memory performData) {\\n        uint256[] memory fulfillableRequestIds = isUpkeepNeeded();\\n        return (fulfillableRequestIds[0] != 0, performData);\\n    }\\n\\n    function performUpkeep(\\n        bytes calldata /* performData */\\n    ) external override {\\n        require(!enableWhitelist || fulfillers[msg.sender], \\\"Not allowed\\\");\\n        uint256[] memory fulfillableRequestIds = isUpkeepNeeded();\\n        \\n        require(fulfillableRequestIds[0] != 0, \\\"No fulfillable requests\\\");\\n\\n        bool hasAnyFulfilled = false;\\n        for (uint256 i = 0; i < fulfillableRequestIds.length; i++) {\\n            uint256 requestId = fulfillableRequestIds[i];\\n\\n            // Skip last item, which is always 0 (but don't assume it' s always there for safety)\\n            if (requestId != 0) {\\n                bool wasFulfilled = fulfillRequest(requestId);\\n                if (wasFulfilled) {\\n                    hasAnyFulfilled = true;\\n                }\\n            }\\n        }\\n\\n        require(hasAnyFulfilled, \\\"Failed to fulfill requests\\\");\\n    }\\n\\n    function isUpkeepNeeded() private view returns (uint256[] memory fulfillableRequestIds) {\\n        uint256 nextRequestId = requestManager.nextRequestId();\\n        uint256 maxMinRequestIncrements = requestManager.maxMinRequestIncrements();\\n        uint256 minRequestId = requestManager.minRequestId();\\n\\n        uint256 endRequestId = nextRequestId < minRequestId + maxMinRequestIncrements ? nextRequestId : minRequestId + maxMinRequestIncrements;\\n        fulfillableRequestIds = new uint256[](endRequestId - minRequestId + 1); // Critical to add 1, so there will always be a 0 ending to the array (and at least 1 cell, never empty)\\n        uint256 currFulfillableRequestIndex = 0;\\n        for (uint256 currRequest = minRequestId; currRequest < endRequestId; currRequest++) {\\n            if (isRequestKeepersFulfillable(currRequest)) {\\n                fulfillableRequestIds[currFulfillableRequestIndex] = currRequest;\\n                currFulfillableRequestIndex++;\\n            }\\n        }\\n    }\\n\\n    function isRequestKeepersFulfillable(uint256 _requestId) internal virtual view returns (bool isFulfillable);\\n\\n    function fulfillRequest(uint256 _requestId) internal virtual returns (bool wasFulfilled);\\n}\\n\",\"keccak256\":\"0x9541da3323f8a57c1b8930e3c5c70923a8f54b1027a8e7edcf20a24832e20f64\",\"license\":\"GPL-3.0-or-later\"},\"@coti-cvi/contracts-cvi/contracts/VolTokenRequestFulfiller.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8;\\n\\nimport \\\"./RequestFulfiller.sol\\\";\\nimport \\\"./interfaces/IVolatilityToken.sol\\\";\\n\\ncontract VolTokenRequestFulfiller is RequestFulfiller {\\n\\n    uint8 public constant MINT_REQUEST_TYPE = 1;\\n    uint8 public constant BURN_REQUEST_TYPE = 2;\\n\\n    function isRequestKeepersFulfillable(uint256 _requestId) internal view override returns (bool isFulfillable) {\\n         (,,,, address owner,, uint32 targetTimestamp, bool useKeepers,) = IVolatilityToken(address(requestManager)).requests(_requestId);\\n        if (owner != address(0) && useKeepers && block.timestamp >= targetTimestamp) {\\n            isFulfillable = true;\\n        }\\n    }\\n\\n    function fulfillRequest(uint256 _requestId) internal override returns (bool wasFulfilled) {\\n        IVolatilityToken volatilityToken = IVolatilityToken(address(requestManager));\\n\\n        (uint8 requestType,,,,,,,, uint16 maxBuyingPremiumFeePercentage) = volatilityToken.requests(_requestId);\\n\\n        if (requestType == MINT_REQUEST_TYPE) {\\n            (, bool success) = volatilityToken.fulfillMintRequest(_requestId, maxBuyingPremiumFeePercentage, true);\\n            if (success) {\\n                wasFulfilled = true;\\n            }\\n        } else if (requestType == BURN_REQUEST_TYPE) {\\n            volatilityToken.fulfillBurnRequest(_requestId, true);\\n            wasFulfilled = true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8fc40fe63ce42a1de0d3e50bc20fcd71ecc645ec5e3f0b385af9ca8719fb32\",\"license\":\"GPL-3.0-or-later\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ICVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ICVIOracle {\\n    function getCVIRoundData(uint80 roundId) external view returns (uint32 cviValue, uint256 cviTimestamp);\\n    function getCVILatestRoundData() external view returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp);\\n\\n    function setDeviationCheck(bool newDeviationCheck) external;\\n    function setMaxDeviation(uint16 newMaxDeviation) external;\\n}\\n\",\"keccak256\":\"0xf1871b2e9219f7a11e63d8e3276b7a0a46d8d726d54e385a6326dbdb2bcb1bad\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IThetaVaultInfo.sol\\\";\\n\\ninterface IFeesCalculator {\\n\\n    struct CVIValue {\\n        uint256 period;\\n        uint32 cviValue;\\n    }\\n\\n    struct SnapshotUpdate {\\n        uint256 latestSnapshot;\\n        uint256 singleUnitFundingFee;\\n        uint256 totalTime;\\n        uint256 totalRounds;\\n        uint256 cviValueTimestamp;\\n        uint80 newLatestRoundId;\\n        uint32 cviValue;\\n        bool updatedSnapshot;\\n        bool updatedLatestRoundId;\\n        bool updatedLatestTimestamp;\\n        bool updatedTurbulenceData;\\n    }\\n\\n    function updateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 lastCVIValue, uint32 currCVIValue) external;\\n\\n    function setOracle(ICVIOracle cviOracle) external;\\n    function setThetaVault(IThetaVaultInfo thetaVault) external;\\n\\n    function setStateUpdator(address newUpdator) external;\\n\\n    function setDepositFee(uint16 newDepositFeePercentage) external;\\n    function setWithdrawFee(uint16 newWithdrawFeePercentage) external;\\n    function setOpenPositionFee(uint16 newOpenPositionFeePercentage) external;\\n    function setOpenPositionLPFee(uint16 newOpenPositionLPFeePercent) external;\\n    function setClosePositionLPFee(uint16 newClosePositionLPFeePercent) external;\\n    function setClosePositionFee(uint16 newClosePositionFeePercentage) external;\\n    function setClosePositionMaxFee(uint16 newClosePositionMaxFeePercentage) external;\\n    function setClosePositionFeeDecay(uint256 newClosePositionFeeDecayPeriod) external;\\n    \\n    function setOracleHeartbeatPeriod(uint256 newOracleHeartbeatPeriod) external;\\n    function setBuyingPremiumFeeMax(uint16 newBuyingPremiumFeeMaxPercentage) external;\\n    function setBuyingPremiumThreshold(uint16 newBuyingPremiumThreshold) external;\\n    function setClosingPremiumFeeMax(uint16 newClosingPremiumFeeMaxPercentage) external;\\n    function setCollateralToBuyingPremiumMapping(uint16[] calldata newCollateralToBuyingPremiumMapping) external;\\n    function setFundingFeeConstantRate(uint16 newfundingFeeConstantRate) external;\\n    function setCollateralToExtraFundingFeeMapping(uint32[] calldata newCollateralToExtraFundingFeeMapping) external;\\n    function setTurbulenceStep(uint16 newTurbulenceStepPercentage) external;\\n    function setMaxTurbulenceFeePercentToTrim(uint16 newMaxTurbulenceFeePercentToTrim) external;\\n    function setTurbulenceDeviationThresholdPercent(uint16 newTurbulenceDeviationThresholdPercent) external;\\n    function setTurbulenceDeviationPercent(uint16 newTurbulenceDeviationPercentage) external;\\n\\n    function calculateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 _lastCVIValue, uint32 _currCVIValue) external view returns (uint16);\\n\\n    function calculateBuyingPremiumFee(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n    function calculateBuyingPremiumFeeWithAddendum(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits, uint16 _turbulenceIndicatorPercent) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n\\n    function calculateClosingPremiumFee() external view returns (uint16 combinedPremiumFeePercentage);\\n\\n    function calculateSingleUnitFundingFee(CVIValue[] memory cviValues, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 fundingFee);\\n    function calculateSingleUnitPeriodFundingFee(CVIValue memory cviValue, uint256 collateralRatio) external view returns (uint256 fundingFee, uint256 fundingFeeRatePercents);\\n    function updateSnapshots(uint256 latestTimestamp, uint256 blockTimestampSnapshot, uint256 latestTimestampSnapshot, uint80 latestOracleRoundId, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (SnapshotUpdate memory snapshotUpdate);\\n\\n    function calculateClosePositionFeePercent(uint256 creationTimestamp, bool isNoLockPositionAddress) external view returns (uint16);\\n    function calculateWithdrawFeePercent(uint256 lastDepositTimestamp) external view returns (uint16);\\n\\n    function calculateCollateralRatio(uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 collateralRatio);\\n\\n    function depositFeePercent() external view returns (uint16);\\n    function withdrawFeePercent() external view returns (uint16);\\n    function openPositionFeePercent() external view returns (uint16);\\n    function closePositionFeePercent() external view returns (uint16);\\n    function openPositionLPFeePercent() external view returns (uint16);\\n    function closePositionLPFeePercent() external view returns (uint16);\\n\\n    function openPositionFees() external view returns (uint16 openPositionFeePercentResult, uint16 buyingPremiumFeeMaxPercentResult);\\n\\n    function turbulenceIndicatorPercent() external view returns (uint16);\\n    function oracleLeverage() external view returns (uint8);\\n\\n    function getCollateralToBuyingPremiumMapping() external view returns(uint16[] memory);\\n    function getCollateralToExtraFundingFeeMapping() external view returns(uint32[] memory);\\n}\\n\",\"keccak256\":\"0xfba7d565b0a7d83dbe5d1abb0bf35897145a96d28e35b0b91864e321606c5734\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IFeesCollector {\\n    function sendProfit(uint256 amount, IERC20 token) external;\\n}\\n\",\"keccak256\":\"0xb16b7c5d985657716ccacf0f1e61de587c06fe4f6591bee6fafc0a3658229b4c\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ILiquidation.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ILiquidation {\\t\\n\\tfunction setMinLiquidationThresholdPercents(uint16[8] calldata newMinThresholdPercents) external;\\n\\tfunction setMinLiquidationRewardPercent(uint16 newMinRewardPercent) external;\\n\\tfunction setMaxLiquidationRewardPercents(uint16[8] calldata newMaxRewardPercents) external;\\n\\tfunction isLiquidationCandidate(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (bool);\\n\\tfunction getLiquidationReward(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (uint256 finderFeeAmount);\\n}\\n\",\"keccak256\":\"0x0799656b324ed8d65391313156e1dfe7d99b6dadb08e71cd6a515d19731539bd\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IPlatform.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IFeesCalculator.sol\\\";\\nimport \\\"./IRewardsCollector.sol\\\";\\nimport \\\"./IFeesCollector.sol\\\";\\nimport \\\"./ILiquidation.sol\\\";\\n\\ninterface IPlatform {\\n\\n    struct Position {\\n        uint168 positionUnitsAmount;\\n        uint8 leverage;\\n        uint32 openCVIValue;\\n        uint32 creationTimestamp;\\n        uint32 originalCreationTimestamp;\\n    }\\n\\n    event Deposit(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event Withdraw(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event OpenPosition(address indexed account, uint256 tokenAmount, uint8 leverage, uint256 feeAmount, uint256 positionUnitsAmount, uint256 cviValue);\\n    event ClosePosition(address indexed account, uint256 tokenAmount, uint256 feeAmount, uint256 positionUnitsAmount, uint8 leverage, uint256 cviValue);\\n    event LiquidatePosition(address indexed positionAddress, uint256 currentPositionBalance, bool isBalancePositive, uint256 positionUnitsAmount);\\n\\n    function deposit(uint256 tokenAmount, uint256 minLPTokenAmount) external returns (uint256 lpTokenAmount);\\n    function withdraw(uint256 tokenAmount, uint256 maxLPTokenBurnAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n    function withdrawLPTokens(uint256 lpTokenAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n\\n    function increaseSharedPool(uint256 tokenAmount) external;\\n\\n    function openPositionWithoutFee(uint168 tokenAmount, uint32 maxCVI, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function openPosition(uint168 tokenAmount, uint32 maxCVI, uint16 maxBuyingPremiumFeePercentage, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function closePositionWithoutFee(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n    function closePosition(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function liquidatePositions(address[] calldata positionOwners) external returns (uint256 finderFeeAmount);\\n\\n    function setAddressSpecificParameters(address holderAddress, bool shouldLockPosition, bool noPremiumFeeAllowed, bool increaseSharedPoolAllowed, bool isLiquidityProvider) external;\\n\\n    function setRevertLockedTransfers(bool revertLockedTransfers) external;\\n\\n    function setSubContracts(IFeesCollector newCollector, ICVIOracle newOracle, IRewardsCollector newRewards, ILiquidation newLiquidation, address _newStakingContractAddress) external;\\n    function setFeesCalculator(IFeesCalculator newCalculator) external;\\n\\n    function setLatestOracleRoundId(uint80 newOracleRoundId) external;\\n    function setMaxTimeAllowedAfterLatestRound(uint32 newMaxTimeAllowedAfterLatestRound) external;\\n\\n    function setLockupPeriods(uint256 newLPLockupPeriod, uint256 newBuyersLockupPeriod) external;\\n\\n    function setEmergencyParameters(bool newEmergencyWithdrawAllowed, bool newCanPurgeSnapshots) external;\\n\\n    function setMaxAllowedLeverage(uint8 newMaxAllowedLeverage) external;\\n\\n    function calculatePositionBalance(address positionAddress) external view returns (uint256 currentPositionBalance, bool isPositive, uint168 positionUnitsAmount, uint8 leverage, uint256 fundingFees, uint256 marginDebt);\\n    function calculatePositionPendingFees(address positionAddress, uint168 positionUnitsAmount) external view returns (uint256 pendingFees);\\n\\n    function totalBalance(bool _withAddendum) external view returns (uint256 balance);\\n\\n    function calculateLatestTurbulenceIndicatorPercent() external view returns (uint16);\\n\\n    function cviOracle() external view returns (ICVIOracle);\\n    function feesCalculator() external view returns (IFeesCalculator);\\n\\n    function PRECISION_DECIMALS() external view returns (uint256);\\n\\n    function totalPositionUnitsAmount() external view returns (uint256);\\n    function totalLeveragedTokensAmount() external view returns (uint256);\\n    function totalFundingFeesAmount() external view returns (uint256);\\n    function latestFundingFees() external view returns (uint256);\\n\\n    function positions(address positionAddress) external view returns (uint168 positionUnitsAmount, uint8 leverage, uint32 openCVIValue, uint32 creationTimestamp, uint32 originalCreationTimestamp);\\n    function buyersLockupPeriod() external view returns (uint256);\\n    function maxCVIValue() external view returns (uint32);\\n}\\n\",\"keccak256\":\"0x11f55f686514975c2dd5adf87856f8df5f85b015621f01e1528addb6b7194686\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IVolatilityToken.sol\\\";\\n\\ninterface IRequestFeesCalculator {\\n    function calculateTimePenaltyFee(IVolatilityToken.Request calldata request) external view returns (uint16 feePercentage);\\n    function calculateTimeDelayFee(uint256 timeDelay) external view returns (uint16 feePercentage);\\n    function calculateFindersFee(uint256 tokensLeftAmount) external view returns (uint256 findersFeeAmount);\\n    function calculateKeepersFee(uint256 tokensAmount) external view returns (uint256 keepersFeeAmount);\\n\\n    function isLiquidable(IVolatilityToken.Request calldata request) external view returns (bool liquidable);\\n\\n    function minWaitTime() external view returns (uint32);\\n\\n    function setTimeWindow(uint32 minTimeWindow, uint32 maxTimeWindow) external;\\n    function setTimeDelayFeesParameters(uint16 minTimeDelayFeePercent, uint16 maxTimeDelayFeePercent) external;\\n    function setMinWaitTime(uint32 newMinWaitTime) external;\\n    function setTimePenaltyFeeParameters(uint16 beforeTargetTimeMaxPenaltyFeePercent, uint32 afterTargetMidTime, uint16 afterTargetMidTimePenaltyFeePercent, uint32 afterTargetMaxTime, uint16 afterTargetMaxTimePenaltyFeePercent) external;\\n    function setFindersFee(uint16 findersFeePercent) external;\\n    function setKeepersFeePercent(uint16 keepersFeePercent) external;\\n    function setKeepersFeeMax(uint256 keepersFeeMax) external;\\n\\n    function getMaxFees() external view returns (uint16 maxFeesPercent);\\n}\\n\",\"keccak256\":\"0xb516083aa9063482c61c12f38b960f017205f2611358dcab31c1197208841611\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestFulfiller.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IRequestManager.sol\\\";\\n\\ninterface IRequestFulfiller {\\n    function setRequestManager(IRequestManager requestManager) external;\\n    function setEnableWhitelist(bool enableWhitelist) external;\\n    function setFulfillerAddress(address user, bool isAllowed) external;\\n}\\n\",\"keccak256\":\"0x59f78656c0d519bc2b84569ce097de9c1de05d7ec95e78823ef528c2a7d11eaf\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IRequestManager {\\n\\n\\tfunction nextRequestId() external view returns (uint256);\\n    function minRequestId() external view returns (uint256);\\n    function maxMinRequestIncrements() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4271e6200e0675ca19c931cd82dc9243a01d88bc20a4352effb1d66be761b94b\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRewardsCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IRewardsCollector {\\n\\tfunction reward(address account, uint256 positionUnits, uint8 leverage) external;\\n}\\n\",\"keccak256\":\"0xaae3f1399202cccfb2e7302f69868a1f9adfbc53c968668e79201692c5724ca5\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVaultInfo.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IThetaVaultInfo {\\n    function totalVaultLeveragedAmount() external view returns (uint256);\\n    function vaultPositionUnits() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8077ab6dec8937112a2e2567d9b524a10ba640b7891c4bb40729bfbb648c0c1e\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IVolatilityToken.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IPlatform.sol\\\";\\nimport \\\"./IRequestFeesCalculator.sol\\\";\\nimport \\\"./ICVIOracle.sol\\\";\\n\\ninterface IVolatilityToken {\\n\\n    struct Request {\\n        uint8 requestType; // 1 => mint, 2 => burn\\n        uint168 tokenAmount;\\n        uint16 timeDelayRequestFeesPercent;\\n        uint16 maxRequestFeesPercent;\\n        address owner;\\n        uint32 requestTimestamp;\\n        uint32 targetTimestamp;\\n        bool useKeepers;\\n        uint16 maxBuyingPremiumFeePercentage;\\n    }\\n\\n    event SubmitRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 tokenAmount, uint256 submitFeesAmount, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n    event FulfillRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 fulfillFeesAmount, bool isAborted, bool useKeepers, bool keepersCalled, address indexed fulfiller, uint32 fulfillTimestamp);\\n    event LiquidateRequest(uint256 requestId, uint8 requestType, address indexed account, address indexed liquidator, uint256 findersFeeAmount, bool useKeepers, uint32 liquidateTimestamp);\\n    event Mint(uint256 requestId, address indexed account, uint256 tokenAmount, uint256 positionedTokenAmount, uint256 mintedTokens, uint256 openPositionFee, uint256 buyingPremiumFee);\\n    event Burn(uint256 requestId, address indexed account, uint256 tokenAmountBeforeFees, uint256 tokenAmount, uint256 burnedTokens, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function rebaseCVI() external;\\n\\n    function submitMintRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersMintRequest(uint168 tokenAmount, uint32 timeDelay, uint16 maxBuyingPremiumFeePercentage) external returns (uint256 requestId);\\n    function submitBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n\\n    function fulfillMintRequest(uint256 requestId, uint16 maxBuyingPremiumFeePercentage, bool keepersCalled) external returns (uint256 tokensMinted, bool success);\\n    function fulfillBurnRequest(uint256 requestId, bool keepersCalled) external returns (uint256 tokensBurned);\\n\\n    function mintTokens(uint168 tokenAmount) external returns (uint256 mintedTokens);\\n    function burnTokens(uint168 burnAmount) external returns (uint256 tokenAmount);\\n\\n    function liquidateRequest(uint256 requestId) external returns (uint256 findersFeeAmount);\\n\\n    function setMinter(address minter) external;\\n    function setPlatform(IPlatform newPlatform) external;\\n    function setFeesCalculator(IFeesCalculator newFeesCalculator) external;\\n    function setFeesCollector(IFeesCollector newCollector) external;\\n    function setRequestFeesCalculator(IRequestFeesCalculator newRequestFeesCalculator) external;\\n    function setCVIOracle(ICVIOracle newCVIOracle) external;\\n    function setDeviationParameters(uint16 newDeviationPercentagePerSingleRebaseLag, uint16 newMinDeviationPercentage, uint16 newMaxDeviationPercentage) external;\\n    function setVerifyTotalRequestsAmount(bool verifyTotalRequestsAmount) external;\\n    function setMaxTotalRequestsAmount(uint256 maxTotalRequestsAmount) external;\\n    function setCappedRebase(bool newCappedRebase) external;\\n\\n    function setMinRequestId(uint256 newMinRequestId) external;\\n    function setMaxMinRequestIncrements(uint256 newMaxMinRequestIncrements) external;\\n\\n    function setFulfiller(address fulfiller) external;\\n\\n    function setKeepersFeeVaultAddress(address newKeepersFeeVaultAddress) external;\\n\\n    function setMinKeepersAmounts(uint256 newMinKeepersMintAmount, uint256 newMinKeepersBurnAmount) external;\\n\\n    function platform() external view returns (IPlatform);\\n    function requestFeesCalculator() external view returns (IRequestFeesCalculator);\\n    function leverage() external view returns (uint8);\\n    function initialTokenToLPTokenRate() external view returns (uint256);\\n\\n    function requests(uint256 requestId) external view returns (uint8 requestType, uint168 tokenAmount, uint16 timeDelayRequestFeesPercent, uint16 maxRequestFeesPercent,\\n        address owner, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n}\\n\",\"keccak256\":\"0x9b195f997265f6401224845c81cba2a3ac6f2e4f2bf65d8be5027ac1ee3fa5b4\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/volatility-token/VolatilityTokenRequestFulfillerContracts.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport '@coti-cvi/contracts-cvi/contracts/VolTokenRequestFulfiller.sol';\\n\\ncontract CVIUSDCVolTokenRequestFulfiller is VolTokenRequestFulfiller {\\n  constructor() VolTokenRequestFulfiller() {}\\n}\\n\\ncontract CVIUSDCVolTokenRequestFulfiller2X is VolTokenRequestFulfiller {\\n  constructor() VolTokenRequestFulfiller() {}\\n}\\n\",\"keccak256\":\"0x4719c500cd06af0097fd2653c1ae86a8b783d99238b1ed6e03a1f47b51fe69d4\",\"license\":\"GPL-3.0\"}},\"version\":1}",
      "bytecode": "",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063cdfb2b4e11610066578063cdfb2b4e146101f0578063e530413b14610204578063f2fde38b1461020c578063fd84030c1461021f57600080fd5b80638da5cb5b14610185578063ae022496146101aa578063c4d66de8146101dd57600080fd5b80636e04ff0d116100c85780636e04ff0d14610136578063715018a61461015757806378f9ccf21461015f57806380a765221461017257600080fd5b80634585e33b146100ef57806347d8ca801461010457806369477ad214610123575b600080fd5b6101026100fd366004610da9565b610232565b005b61010c600181565b60405160ff90911681526020015b60405180910390f35b610102610131366004610d55565b6103e0565b610149610144366004610da9565b610435565b60405161011a929190610f10565b61010261047c565b61010261016d366004610d8d565b6104b2565b610102610180366004610d32565b6104fa565b6033546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b6101cd6101b8366004610d32565b60666020526000908152604090205460ff1681565b604051901515815260200161011a565b6101026101eb366004610d32565b610546565b6065546101cd90600160a01b900460ff1681565b61010c600281565b61010261021a366004610d32565b6105df565b606554610192906001600160a01b031681565b606554600160a01b900460ff16158061025a57503360009081526066602052604090205460ff165b6102995760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b60006102a361067a565b9050806000815181106102c657634e487b7160e01b600052603260045260246000fd5b60200260200101516000141561031e5760405162461bcd60e51b815260206004820152601760248201527f4e6f2066756c66696c6c61626c652072657175657374730000000000000000006044820152606401610290565b6000805b825181101561038c57600083828151811061034d57634e487b7160e01b600052603260045260246000fd5b602002602001015190508060001461037957600061036a82610915565b9050801561037757600193505b505b50806103848161106a565b915050610322565b50806103da5760405162461bcd60e51b815260206004820152601a60248201527f4661696c656420746f2066756c66696c6c2072657175657374730000000000006044820152606401610290565b50505050565b6033546001600160a01b0316331461040a5760405162461bcd60e51b815260040161029090610fbb565b6001600160a01b03919091166000908152606660205260409020805460ff1916911515919091179055565b60006060600061044361067a565b90508060008151811061046657634e487b7160e01b600052603260045260246000fd5b6020026020010151600014159250509250929050565b6033546001600160a01b031633146104a65760405162461bcd60e51b815260040161029090610fbb565b6104b06000610aef565b565b6033546001600160a01b031633146104dc5760405162461bcd60e51b815260040161029090610fbb565b60658054911515600160a01b0260ff60a01b19909216919091179055565b6033546001600160a01b031633146105245760405162461bcd60e51b815260040161029090610fbb565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b60006105526001610b41565b9050801561056a576000805461ff0019166101001790555b610572610bce565b606580546001600160a01b0384166001600160a81b031990911617600160a01b17905580156105db576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6033546001600160a01b031633146106095760405162461bcd60e51b815260040161029090610fbb565b6001600160a01b03811661066e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610290565b61067781610aef565b50565b60606000606560009054906101000a90046001600160a01b03166001600160a01b0316636a84a9856040518163ffffffff1660e01b815260040160206040518083038186803b1580156106cc57600080fd5b505afa1580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190610e16565b90506000606560009054906101000a90046001600160a01b03166001600160a01b031663a5cfa15c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561075657600080fd5b505afa15801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190610e16565b90506000606560009054906101000a90046001600160a01b03166001600160a01b03166376b27f336040518163ffffffff1660e01b815260040160206040518083038186803b1580156107e057600080fd5b505afa1580156107f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108189190610e16565b90506000610826838361103b565b841061083b57610836838361103b565b61083d565b835b90506108498282611053565b61085490600161103b565b67ffffffffffffffff81111561087a57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156108a3578160200160208202803683370190505b5094506000825b8281101561090c576108bb81610bfd565b156108fa57808783815181106108e157634e487b7160e01b600052603260045260246000fd5b6020908102919091010152816108f68161106a565b9250505b806109048161106a565b9150506108aa565b50505050505090565b60655460405163103a258b60e31b8152600481018390526000916001600160a01b0316908290819083906381d12c58906024016101206040518083038186803b15801561096157600080fd5b505afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109999190610e52565b9850505050505050509150600160ff168260ff161415610a545760405163d0a9278160e01b81526004810186905261ffff82166024820152600160448201526000906001600160a01b0385169063d0a92781906064016040805180830381600087803b158015610a0857600080fd5b505af1158015610a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a409190610e2e565b9150508015610a4e57600194505b50610ae7565b60ff821660021415610ae757604051636d72775560e01b815260048101869052600160248201526001600160a01b03841690636d72775590604401602060405180830381600087803b158015610aa957600080fd5b505af1158015610abd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae19190610e16565b50600193505b505050919050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615610b88578160ff166001148015610b645750303b155b610b805760405162461bcd60e51b815260040161029090610f6d565b506000919050565b60005460ff808416911610610baf5760405162461bcd60e51b815260040161029090610f6d565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610bf55760405162461bcd60e51b815260040161029090610ff0565b6104b0610cd1565b60655460405163103a258b60e31b8152600481018390526000918291829182916001600160a01b03909116906381d12c58906024016101206040518083038186803b158015610c4b57600080fd5b505afa158015610c5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c839190610e52565b50975097505096505050505060006001600160a01b0316836001600160a01b031614158015610caf5750805b8015610cc157508163ffffffff164210155b15610ae757506001949350505050565b600054610100900460ff16610cf85760405162461bcd60e51b815260040161029090610ff0565b6104b033610aef565b8051610bc9816110b0565b805161ffff81168114610bc957600080fd5b805163ffffffff81168114610bc957600080fd5b600060208284031215610d43578081fd5b8135610d4e8161109b565b9392505050565b60008060408385031215610d67578081fd5b8235610d728161109b565b91506020830135610d82816110b0565b809150509250929050565b600060208284031215610d9e578081fd5b8135610d4e816110b0565b60008060208385031215610dbb578182fd5b823567ffffffffffffffff80821115610dd2578384fd5b818501915085601f830112610de5578384fd5b813581811115610df3578485fd5b866020828501011115610e04578485fd5b60209290920196919550909350505050565b600060208284031215610e27578081fd5b5051919050565b60008060408385031215610e40578182fd5b825191506020830151610d82816110b0565b60008060008060008060008060006101208a8c031215610e70578485fd5b895160ff81168114610e80578586fd5b60208b01519099506001600160a81b0381168114610e9c578586fd5b9750610eaa60408b01610d0c565b9650610eb860608b01610d0c565b955060808a0151610ec88161109b565b9450610ed660a08b01610d1e565b9350610ee460c08b01610d1e565b9250610ef260e08b01610d01565b9150610f016101008b01610d0c565b90509295985092959850929598565b8215158152600060206040818401528351806040850152825b81811015610f4557858101830151858201606001528201610f29565b81811115610f565783606083870101525b50601f01601f191692909201606001949350505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000821982111561104e5761104e611085565b500190565b60008282101561106557611065611085565b500390565b600060001982141561107e5761107e611085565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461067757600080fd5b801515811461067757600080fdfea264697066735822122009dd13799d5a31f2539566bc1add8a8e14cc7fe2e49a7cbe24f373ce4a1bce7564736f6c63430008040033",
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 33671,
            "contract": "contracts/volatility-token/VolatilityTokenRequestFulfillerContracts.sol:CVIUSDCVolTokenRequestFulfiller",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 33674,
            "contract": "contracts/volatility-token/VolatilityTokenRequestFulfillerContracts.sol:CVIUSDCVolTokenRequestFulfiller",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 36528,
            "contract": "contracts/volatility-token/VolatilityTokenRequestFulfillerContracts.sol:CVIUSDCVolTokenRequestFulfiller",
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 33551,
            "contract": "contracts/volatility-token/VolatilityTokenRequestFulfillerContracts.sol:CVIUSDCVolTokenRequestFulfiller",
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address"
          },
          {
            "astId": 33663,
            "contract": "contracts/volatility-token/VolatilityTokenRequestFulfillerContracts.sol:CVIUSDCVolTokenRequestFulfiller",
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 9468,
            "contract": "contracts/volatility-token/VolatilityTokenRequestFulfillerContracts.sol:CVIUSDCVolTokenRequestFulfiller",
            "label": "requestManager",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRequestManager)17839"
          },
          {
            "astId": 9470,
            "contract": "contracts/volatility-token/VolatilityTokenRequestFulfillerContracts.sol:CVIUSDCVolTokenRequestFulfiller",
            "label": "enableWhitelist",
            "offset": 20,
            "slot": "101",
            "type": "t_bool"
          },
          {
            "astId": 9474,
            "contract": "contracts/volatility-token/VolatilityTokenRequestFulfillerContracts.sol:CVIUSDCVolTokenRequestFulfiller",
            "label": "fulfillers",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRequestManager)17839": {
            "encoding": "inplace",
            "label": "contract IRequestManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "creationBlock": 38037660,
      "history": []
    },
    "CVIUSDCVolTokenRequestFulfiller_Proxy": {
      "address": "0x3ce3886cb8FE17940FBABFBF727e32f38e2b991C",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0xfa2c2a51aca9a1ed7349f3932a9f0c1127839b7cbbd81afe1e1ef02a85a8d33c",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x3ce3886cb8FE17940FBABFBF727e32f38e2b991C",
        "transactionIndex": 1,
        "gasUsed": "5182338",
        "logsBloom": "0x
        "blockHash": "0xdc47afbd13f0088bee8ffabdd0bb01c0ac2d197bbf85dec19fc7ea533ad48a43",
        "transactionHash": "0xfa2c2a51aca9a1ed7349f3932a9f0c1127839b7cbbd81afe1e1ef02a85a8d33c",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 38037677,
            "transactionHash": "0xfa2c2a51aca9a1ed7349f3932a9f0c1127839b7cbbd81afe1e1ef02a85a8d33c",
            "address": "0x3ce3886cb8FE17940FBABFBF727e32f38e2b991C",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x0000000000000000000000000ac1db24e39d9325ce240b56a150b04847175358"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0xdc47afbd13f0088bee8ffabdd0bb01c0ac2d197bbf85dec19fc7ea533ad48a43"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 38037677,
            "transactionHash": "0xfa2c2a51aca9a1ed7349f3932a9f0c1127839b7cbbd81afe1e1ef02a85a8d33c",
            "address": "0x3ce3886cb8FE17940FBABFBF727e32f38e2b991C",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 1,
            "blockHash": "0xdc47afbd13f0088bee8ffabdd0bb01c0ac2d197bbf85dec19fc7ea533ad48a43"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 38037677,
            "transactionHash": "0xfa2c2a51aca9a1ed7349f3932a9f0c1127839b7cbbd81afe1e1ef02a85a8d33c",
            "address": "0x3ce3886cb8FE17940FBABFBF727e32f38e2b991C",
            "topics": [
              "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "logIndex": 2,
            "blockHash": "0xdc47afbd13f0088bee8ffabdd0bb01c0ac2d197bbf85dec19fc7ea533ad48a43"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 38037677,
            "transactionHash": "0xfa2c2a51aca9a1ed7349f3932a9f0c1127839b7cbbd81afe1e1ef02a85a8d33c",
            "address": "0x3ce3886cb8FE17940FBABFBF727e32f38e2b991C",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
            ],
            "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d2669586e17fc93773cc637becfa983525501eb",
            "logIndex": 3,
            "blockHash": "0xdc47afbd13f0088bee8ffabdd0bb01c0ac2d197bbf85dec19fc7ea533ad48a43"
          }
        ],
        "blockNumber": 38037677,
        "cumulativeGasUsed": "5182338",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0x0ac1DB24E39d9325cE240B56A150B04847175358",
        "0x9D2669586E17fC93773cc637becfA983525501Eb",
        "0xc4d66de80000000000000000000000008096ad3107715747361acefe685943bfb427c722"
      ],
      "numDeployments": 1,
      "solcInputHash": "0e89febeebc7444140de8e67c9067d2c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x93b4e21c931252739a1ec13ea31d3d35a5c068be3163ccab83e4d70c40355f03\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view virtual returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(Address.isContract(IBeacon(newBeacon).implementation()), \\\"ERC1967: beacon implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17668652127feebed0ce8d9431ef95ccc8c4292f03e3b8cf06c6ca16af396633\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xd5d1fd16e9faff7fcb3a52e02a8d49156f42a38a03f07b5f1810c21c2149a8ab\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3777e696b62134e6177440dbe6e6601c0c156a443f57167194b67e75527439de\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
      "deployedBytecode": "0x60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033",
      "devdoc": {
        "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
        "kind": "dev",
        "methods": {
          "admin()": {
            "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
          },
          "constructor": {
            "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
          },
          "implementation()": {
            "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      },
      "creationBlock": 38037677,
      "history": []
    },
    "CVIUSDCVolatilityToken": {
      "address": "0x8096aD3107715747361acefE685943bFB427C722",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmountBeforeFees",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "burnedTokens",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "closePositionFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "closingPremiumFee",
              "type": "uint256"
            }
          ],
          "name": "Burn",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fulfillFeesAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isAborted",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "useKeepers",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "keepersCalled",
              "type": "bool"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "fulfiller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "fulfillTimestamp",
              "type": "uint32"
            }
          ],
          "name": "FulfillRequest",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "liquidator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "findersFeeAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "useKeepers",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "liquidateTimestamp",
              "type": "uint32"
            }
          ],
          "name": "LiquidateRequest",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "positionedTokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "mintedTokens",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "openPositionFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "buyingPremiumFee",
              "type": "uint256"
            }
          ],
          "name": "Mint",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "epoch",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "prevScalingFactor",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newScalingFactor",
              "type": "uint256"
            }
          ],
          "name": "Rebase",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "submitFeesAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "requestTimestamp",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "targetTimestamp",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "useKeepers",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "maxBuyingPremiumFeePercentage",
              "type": "uint16"
            }
          ],
          "name": "SubmitRequest",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "BURN_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "CVI_DECIMALS_FIX",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "DELTA_PRECISION_DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MAX_PERCENTAGE",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MINT_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "PRECISION_DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "SCALING_FACTOR_DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals_",
              "type": "uint8"
            }
          ],
          "name": "__ElasticToken_init",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "name": "balanceOfUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "burnAmount",
              "type": "uint168"
            }
          ],
          "name": "burnTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cappedRebase",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cviOracle",
          "outputs": [
            {
              "internalType": "contract ICVIOracle",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "deviationPerSingleRebaseLag",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "feesCalculator",
          "outputs": [
            {
              "internalType": "contract IFeesCalculator",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "feesCollector",
          "outputs": [
            {
              "internalType": "contract IFeesCollector",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_keepersCalled",
              "type": "bool"
            }
          ],
          "name": "fulfillBurnRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokensReceived",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "_maxBuyingPremiumFeePercentage",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "_keepersCalled",
              "type": "bool"
            }
          ],
          "name": "fulfillMintRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokensMinted",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fulfiller",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "initSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "initialTokenToLPTokenRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_lpTokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_lpTokenSymbolName",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "_leverage",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "_initialTokenToVolTokenRate",
              "type": "uint256"
            },
            {
              "internalType": "contract IPlatform",
              "name": "_platform",
              "type": "address"
            },
            {
              "internalType": "contract IFeesCollector",
              "name": "_feesCollector",
              "type": "address"
            },
            {
              "internalType": "contract IFeesCalculator",
              "name": "_feesCalculator",
              "type": "address"
            },
            {
              "internalType": "contract IRequestFeesCalculator",
              "name": "_requestFeesCalculator",
              "type": "address"
            },
            {
              "internalType": "contract ICVIOracle",
              "name": "_cviOracle",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "keepersFeeVaultAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "leverage",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            }
          ],
          "name": "liquidateRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "findersFeeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxDeviationPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxMinRequestIncrements",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxScalingFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxTotalRequestsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minDeviationPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minKeepersBurnAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minKeepersMintAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minRequestId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "tokenAmount",
              "type": "uint168"
            }
          ],
          "name": "mintTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "mintedTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "nextRequestId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "platform",
          "outputs": [
            {
              "internalType": "contract IPlatform",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rebaseCVI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rebaser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "requestFeesCalculator",
          "outputs": [
            {
              "internalType": "contract IRequestFeesCalculator",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "requests",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "internalType": "uint168",
              "name": "tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint16",
              "name": "timeDelayRequestFeesPercent",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxRequestFeesPercent",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "requestTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "targetTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "useKeepers",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "maxBuyingPremiumFeePercentage",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "scalingFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract ICVIOracle",
              "name": "_newCVIOracle",
              "type": "address"
            }
          ],
          "name": "setCVIOracle",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newCappedRebase",
              "type": "bool"
            }
          ],
          "name": "setCappedRebase",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newDeviationPercentagePerSingleRebaseLag",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_newMinDeviationPercentage",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_newMaxDeviationPercentage",
              "type": "uint16"
            }
          ],
          "name": "setDeviationParameters",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFeesCalculator",
              "name": "_newFeesCalculator",
              "type": "address"
            }
          ],
          "name": "setFeesCalculator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFeesCollector",
              "name": "_newCollector",
              "type": "address"
            }
          ],
          "name": "setFeesCollector",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_fulfiller",
              "type": "address"
            }
          ],
          "name": "setFulfiller",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newKeepersFeeVaultAddress",
              "type": "address"
            }
          ],
          "name": "setKeepersFeeVaultAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMaxMinRequestIncrements",
              "type": "uint256"
            }
          ],
          "name": "setMaxMinRequestIncrements",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxTotalRequestsAmount",
              "type": "uint256"
            }
          ],
          "name": "setMaxTotalRequestsAmount",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMinKeepersMintAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_newMinKeepersBurnAmount",
              "type": "uint256"
            }
          ],
          "name": "setMinKeepersAmounts",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMinRequestId",
              "type": "uint256"
            }
          ],
          "name": "setMinRequestId",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newMinter",
              "type": "address"
            }
          ],
          "name": "setMinter",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_newName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_newSymbol",
              "type": "string"
            }
          ],
          "name": "setNameAndSymbol",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPlatform",
              "name": "_newPlatform",
              "type": "address"
            }
          ],
          "name": "setPlatform",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rebaser",
              "type": "address"
            }
          ],
          "name": "setRebaser",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRequestFeesCalculator",
              "name": "_newRequestFeesCalculator",
              "type": "address"
            }
          ],
          "name": "setRequestFeesCalculator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_verifyTotalRequestsAmount",
              "type": "bool"
            }
          ],
          "name": "setVerifyTotalRequestsAmount",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_timeDelay",
              "type": "uint32"
            }
          ],
          "name": "submitBurnRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_timeDelay",
              "type": "uint32"
            }
          ],
          "name": "submitKeepersBurnRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_timeDelay",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "_maxBuyingPremiumFeePercentage",
              "type": "uint16"
            }
          ],
          "name": "submitKeepersMintRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_timeDelay",
              "type": "uint32"
            }
          ],
          "name": "submitMintRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalRequestsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "unerlyingValue",
              "type": "uint256"
            }
          ],
          "name": "underlyingToValue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "valueToUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "verifyTotalRequestsAmount",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x8096aD3107715747361acefE685943bFB427C722",
        "transactionIndex": 1,
        "gasUsed": "5887474",
        "logsBloom": "0x000000000000000000000000000000004000010000000000008000000000001000000000000000000000000000000204000000000000100000000000002000004000000000000000000000000000020000010000000000000000080000000000000000000200080000000000000008000000008000000000000000000000004000000000010000000000000000000000000000000000800000000000048000000200000000000000000020000006000200004000000000000000000000000000000000200000000000800000000400000000001004002000040000000000200000100000000000000008000000000000000000000000a0000000000000000000",
        "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba",
        "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 29537989,
            "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
            "address": "0x8096aD3107715747361acefE685943bFB427C722",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x000000000000000000000000c53334ecc6f3d8e6ba96041528e40c48586b6c88"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537989,
            "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
            "address": "0x8096aD3107715747361acefE685943bFB427C722",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 1,
            "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537989,
            "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
            "address": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x0000000000000000000000008096ad3107715747361acefe685943bfb427c722",
              "0x000000000000000000000000cef38d86c40522a2b58d82b658c194a9eb340091"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 2,
            "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537989,
            "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
            "address": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x0000000000000000000000008096ad3107715747361acefe685943bfb427c722",
              "0x00000000000000000000000094bc0f48a76a93077bee50641f319d5690179c50"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 3,
            "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537989,
            "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
            "address": "0x8096aD3107715747361acefE685943bFB427C722",
            "topics": [
              "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "logIndex": 4,
            "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537989,
            "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
            "address": "0x8096aD3107715747361acefE685943bFB427C722",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
            ],
            "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d2669586e17fc93773cc637becfa983525501eb",
            "logIndex": 5,
            "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba"
          }
        ],
        "blockNumber": 29537989,
        "cumulativeGasUsed": "5887474",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0xC53334eCC6f3D8E6ba96041528e40c48586B6c88",
        "0x9D2669586E17fC93773cc637becfA983525501Eb",
        "0xea357610000000000000000000000000ff970a61a04b1ca14834a43f5de4533ebddb5cc8000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000cef38d86c40522a2b58d82b658c194a9eb34009100000000000000000000000094bc0f48a76a93077bee50641f319d5690179c50000000000000000000000000e72cf93e7d6cacd66560ac9f2e5d63cdfa8b9fc600000000000000000000000044d8998fcb1f50d0c5463582d7ce9a4c27ba5671000000000000000000000000649813b6dc6111d67484badedd377d32e4505f85000000000000000000000000000000000000000000000000000000000000001743727970746f20566f6c6174696c69747920546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000443564f4c00000000000000000000000000000000000000000000000000000000"
      ],
      "numDeployments": 2,
      "solcInputHash": "0e89febeebc7444140de8e67c9067d2c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x93b4e21c931252739a1ec13ea31d3d35a5c068be3163ccab83e4d70c40355f03\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view virtual returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(Address.isContract(IBeacon(newBeacon).implementation()), \\\"ERC1967: beacon implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17668652127feebed0ce8d9431ef95ccc8c4292f03e3b8cf06c6ca16af396633\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xd5d1fd16e9faff7fcb3a52e02a8d49156f42a38a03f07b5f1810c21c2149a8ab\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3777e696b62134e6177440dbe6e6601c0c156a443f57167194b67e75527439de\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
      "deployedBytecode": "0x60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033",
      "execute": {
        "methodName": "initialize",
        "args": [
          "0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",
          "Crypto Volatility Token",
          "CVOL",
          1,
          {
            "type": "BigNumber",
            "hex": "0xe8d4a51000"
          },
          "0xCeF38D86C40522A2b58d82b658c194A9Eb340091",
          "0x94bC0F48A76A93077BEe50641F319D5690179C50",
          "0xe72Cf93E7d6CACd66560ac9F2E5D63CDFA8b9fc6",
          "0x44d8998FCB1f50d0C5463582d7ce9a4C27BA5671",
          "0x649813B6dc6111D67484BaDeDd377D32e4505F85"
        ]
      },
      "implementation": "0x6257Fb12e5aEa66eFa666dD7922744E7870dadCe",
      "devdoc": {
        "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
        "kind": "dev",
        "methods": {
          "admin()": {
            "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
          },
          "constructor": {
            "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
          },
          "implementation()": {
            "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      },
      "creationBlock": 29537989,
      "history": []
    },
    "CVIUSDCVolatilityTokenUSDCUNIV2Pair": {
      "address": "0xeDE0CE8cdc65bcF6422f3Afb9d7cDb3e59C09658",
      "abi": [
        {
          "inputs": [],
          "payable": false,
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "Burn",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            }
          ],
          "name": "Mint",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount0In",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount1In",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount0Out",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount1Out",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "Swap",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint112",
              "name": "reserve0",
              "type": "uint112"
            },
            {
              "indexed": false,
              "internalType": "uint112",
              "name": "reserve1",
              "type": "uint112"
            }
          ],
          "name": "Sync",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "MINIMUM_LIQUIDITY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "PERMIT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": false,
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "payable": false,
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": false,
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "burn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            }
          ],
          "payable": false,
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "getReserves",
          "outputs": [
            {
              "internalType": "uint112",
              "name": "_reserve0",
              "type": "uint112"
            },
            {
              "internalType": "uint112",
              "name": "_reserve1",
              "type": "uint112"
            },
            {
              "internalType": "uint32",
              "name": "_blockTimestampLast",
              "type": "uint32"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": false,
          "inputs": [
            {
              "internalType": "address",
              "name": "_token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_token1",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "payable": false,
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "kLast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": false,
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            }
          ],
          "payable": false,
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": false,
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "name": "permit",
          "outputs": [],
          "payable": false,
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "price0CumulativeLast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "price1CumulativeLast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": false,
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "skim",
          "outputs": [],
          "payable": false,
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "constant": false,
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount0Out",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount1Out",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "swap",
          "outputs": [],
          "payable": false,
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": false,
          "inputs": [],
          "name": "sync",
          "outputs": [],
          "payable": false,
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "token0",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "token1",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": true,
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        },
        {
          "constant": false,
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "payable": false,
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "constant": false,
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "payable": false,
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "transactionHash": "0x471e893519658f1b4e28c101bff500db0add4a1505a272520d1f2307136c78dc",
      "numDeployments": 1,
      "creationBlock": 29538652,
      "history": []
    },
    "CVIUSDCVolatilityToken_Implementation": {
      "address": "0x6257Fb12e5aEa66eFa666dD7922744E7870dadCe",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmountBeforeFees",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "burnedTokens",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "closePositionFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "closingPremiumFee",
              "type": "uint256"
            }
          ],
          "name": "Burn",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fulfillFeesAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isAborted",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "useKeepers",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "keepersCalled",
              "type": "bool"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "fulfiller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "fulfillTimestamp",
              "type": "uint32"
            }
          ],
          "name": "FulfillRequest",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "liquidator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "findersFeeAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "useKeepers",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "liquidateTimestamp",
              "type": "uint32"
            }
          ],
          "name": "LiquidateRequest",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "positionedTokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "mintedTokens",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "openPositionFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "buyingPremiumFee",
              "type": "uint256"
            }
          ],
          "name": "Mint",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "epoch",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "prevScalingFactor",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newScalingFactor",
              "type": "uint256"
            }
          ],
          "name": "Rebase",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "submitFeesAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "requestTimestamp",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "targetTimestamp",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "useKeepers",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "maxBuyingPremiumFeePercentage",
              "type": "uint16"
            }
          ],
          "name": "SubmitRequest",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "BURN_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "CVI_DECIMALS_FIX",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "DELTA_PRECISION_DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MAX_PERCENTAGE",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MINT_REQUEST_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "PRECISION_DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "SCALING_FACTOR_DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals_",
              "type": "uint8"
            }
          ],
          "name": "__ElasticToken_init",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "name": "balanceOfUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "burnAmount",
              "type": "uint168"
            }
          ],
          "name": "burnTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cappedRebase",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cviOracle",
          "outputs": [
            {
              "internalType": "contract ICVIOracle",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "deviationPerSingleRebaseLag",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "feesCalculator",
          "outputs": [
            {
              "internalType": "contract IFeesCalculator",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "feesCollector",
          "outputs": [
            {
              "internalType": "contract IFeesCollector",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_keepersCalled",
              "type": "bool"
            }
          ],
          "name": "fulfillBurnRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokensReceived",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "_maxBuyingPremiumFeePercentage",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "_keepersCalled",
              "type": "bool"
            }
          ],
          "name": "fulfillMintRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokensMinted",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fulfiller",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "initSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "initialTokenToLPTokenRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_lpTokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_lpTokenSymbolName",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "_leverage",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "_initialTokenToVolTokenRate",
              "type": "uint256"
            },
            {
              "internalType": "contract IPlatform",
              "name": "_platform",
              "type": "address"
            },
            {
              "internalType": "contract IFeesCollector",
              "name": "_feesCollector",
              "type": "address"
            },
            {
              "internalType": "contract IFeesCalculator",
              "name": "_feesCalculator",
              "type": "address"
            },
            {
              "internalType": "contract IRequestFeesCalculator",
              "name": "_requestFeesCalculator",
              "type": "address"
            },
            {
              "internalType": "contract ICVIOracle",
              "name": "_cviOracle",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "keepersFeeVaultAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "leverage",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            }
          ],
          "name": "liquidateRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "findersFeeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxDeviationPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxMinRequestIncrements",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxScalingFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxTotalRequestsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minDeviationPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minKeepersBurnAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minKeepersMintAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minRequestId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "tokenAmount",
              "type": "uint168"
            }
          ],
          "name": "mintTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "mintedTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "nextRequestId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "platform",
          "outputs": [
            {
              "internalType": "contract IPlatform",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rebaseCVI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rebaser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "requestFeesCalculator",
          "outputs": [
            {
              "internalType": "contract IRequestFeesCalculator",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "requests",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "requestType",
              "type": "uint8"
            },
            {
              "internalType": "uint168",
              "name": "tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint16",
              "name": "timeDelayRequestFeesPercent",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxRequestFeesPercent",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "requestTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "targetTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "useKeepers",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "maxBuyingPremiumFeePercentage",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "scalingFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract ICVIOracle",
              "name": "_newCVIOracle",
              "type": "address"
            }
          ],
          "name": "setCVIOracle",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newCappedRebase",
              "type": "bool"
            }
          ],
          "name": "setCappedRebase",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newDeviationPercentagePerSingleRebaseLag",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_newMinDeviationPercentage",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_newMaxDeviationPercentage",
              "type": "uint16"
            }
          ],
          "name": "setDeviationParameters",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFeesCalculator",
              "name": "_newFeesCalculator",
              "type": "address"
            }
          ],
          "name": "setFeesCalculator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFeesCollector",
              "name": "_newCollector",
              "type": "address"
            }
          ],
          "name": "setFeesCollector",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_fulfiller",
              "type": "address"
            }
          ],
          "name": "setFulfiller",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newKeepersFeeVaultAddress",
              "type": "address"
            }
          ],
          "name": "setKeepersFeeVaultAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMaxMinRequestIncrements",
              "type": "uint256"
            }
          ],
          "name": "setMaxMinRequestIncrements",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxTotalRequestsAmount",
              "type": "uint256"
            }
          ],
          "name": "setMaxTotalRequestsAmount",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMinKeepersMintAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_newMinKeepersBurnAmount",
              "type": "uint256"
            }
          ],
          "name": "setMinKeepersAmounts",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMinRequestId",
              "type": "uint256"
            }
          ],
          "name": "setMinRequestId",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newMinter",
              "type": "address"
            }
          ],
          "name": "setMinter",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_newName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_newSymbol",
              "type": "string"
            }
          ],
          "name": "setNameAndSymbol",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPlatform",
              "name": "_newPlatform",
              "type": "address"
            }
          ],
          "name": "setPlatform",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rebaser",
              "type": "address"
            }
          ],
          "name": "setRebaser",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRequestFeesCalculator",
              "name": "_newRequestFeesCalculator",
              "type": "address"
            }
          ],
          "name": "setRequestFeesCalculator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_verifyTotalRequestsAmount",
              "type": "bool"
            }
          ],
          "name": "setVerifyTotalRequestsAmount",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_timeDelay",
              "type": "uint32"
            }
          ],
          "name": "submitBurnRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_timeDelay",
              "type": "uint32"
            }
          ],
          "name": "submitKeepersBurnRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_timeDelay",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "_maxBuyingPremiumFeePercentage",
              "type": "uint16"
            }
          ],
          "name": "submitKeepersMintRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint168",
              "name": "_tokenAmount",
              "type": "uint168"
            },
            {
              "internalType": "uint32",
              "name": "_timeDelay",
              "type": "uint32"
            }
          ],
          "name": "submitMintRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalRequestsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "unerlyingValue",
              "type": "uint256"
            }
          ],
          "name": "underlyingToValue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "valueToUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "verifyTotalRequestsAmount",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0x1b627f8dae059abc9562bc1a6c424927e496bffd97d36186ef8d7aa6f8524691",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x6257Fb12e5aEa66eFa666dD7922744E7870dadCe",
        "transactionIndex": 1,
        "gasUsed": "25350647",
        "logsBloom": "0x
        "blockHash": "0x24b47df3a7759cca05fab6c4744c7116bea04c9a04e4fe60bce457ca8b691d94",
        "transactionHash": "0x1b627f8dae059abc9562bc1a6c424927e496bffd97d36186ef8d7aa6f8524691",
        "logs": [],
        "blockNumber": 62383618,
        "cumulativeGasUsed": "25350647",
        "status": 1,
        "byzantium": true
      },
      "args": [],
      "numDeployments": 2,
      "solcInputHash": "8eb1c0ef5b727899c736a7d3253acc1a",
      "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmountBeforeFees\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"closePositionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"closingPremiumFee\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fulfillFeesAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAborted\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useKeepers\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"keepersCalled\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fulfiller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fulfillTimestamp\",\"type\":\"uint32\"}],\"name\":\"FulfillRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"findersFeeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useKeepers\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"liquidateTimestamp\",\"type\":\"uint32\"}],\"name\":\"LiquidateRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionedTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintedTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"openPositionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyingPremiumFee\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevScalingFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newScalingFactor\",\"type\":\"uint256\"}],\"name\":\"Rebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"submitFeesAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"requestTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"targetTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useKeepers\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxBuyingPremiumFeePercentage\",\"type\":\"uint16\"}],\"name\":\"SubmitRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN_REQUEST_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CVI_DECIMALS_FIX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELTA_PRECISION_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_REQUEST_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SCALING_FACTOR_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"__ElasticToken_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"burnAmount\",\"type\":\"uint168\"}],\"name\":\"burnTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cappedRebase\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cviOracle\",\"outputs\":[{\"internalType\":\"contract ICVIOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deviationPerSingleRebaseLag\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesCalculator\",\"outputs\":[{\"internalType\":\"contract IFeesCalculator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesCollector\",\"outputs\":[{\"internalType\":\"contract IFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_keepersCalled\",\"type\":\"bool\"}],\"name\":\"fulfillBurnRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensReceived\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_maxBuyingPremiumFeePercentage\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"_keepersCalled\",\"type\":\"bool\"}],\"name\":\"fulfillMintRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensMinted\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fulfiller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialTokenToLPTokenRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_lpTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_lpTokenSymbolName\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_leverage\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_initialTokenToVolTokenRate\",\"type\":\"uint256\"},{\"internalType\":\"contract IPlatform\",\"name\":\"_platform\",\"type\":\"address\"},{\"internalType\":\"contract IFeesCollector\",\"name\":\"_feesCollector\",\"type\":\"address\"},{\"internalType\":\"contract IFeesCalculator\",\"name\":\"_feesCalculator\",\"type\":\"address\"},{\"internalType\":\"contract IRequestFeesCalculator\",\"name\":\"_requestFeesCalculator\",\"type\":\"address\"},{\"internalType\":\"contract ICVIOracle\",\"name\":\"_cviOracle\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keepersFeeVaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leverage\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"liquidateRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"findersFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDeviationPercentage\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMinRequestIncrements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxScalingFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalRequestsAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDeviationPercentage\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minKeepersBurnAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minKeepersMintAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"tokenAmount\",\"type\":\"uint168\"}],\"name\":\"mintTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintedTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platform\",\"outputs\":[{\"internalType\":\"contract IPlatform\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaseCVI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestFeesCalculator\",\"outputs\":[{\"internalType\":\"contract IRequestFeesCalculator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"internalType\":\"uint168\",\"name\":\"tokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint16\",\"name\":\"timeDelayRequestFeesPercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxRequestFeesPercent\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"requestTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"targetTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"useKeepers\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"maxBuyingPremiumFeePercentage\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scalingFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICVIOracle\",\"name\":\"_newCVIOracle\",\"type\":\"address\"}],\"name\":\"setCVIOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_newCappedRebase\",\"type\":\"bool\"}],\"name\":\"setCappedRebase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newDeviationPercentagePerSingleRebaseLag\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_newMinDeviationPercentage\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_newMaxDeviationPercentage\",\"type\":\"uint16\"}],\"name\":\"setDeviationParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFeesCalculator\",\"name\":\"_newFeesCalculator\",\"type\":\"address\"}],\"name\":\"setFeesCalculator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFeesCollector\",\"name\":\"_newCollector\",\"type\":\"address\"}],\"name\":\"setFeesCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fulfiller\",\"type\":\"address\"}],\"name\":\"setFulfiller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newKeepersFeeVaultAddress\",\"type\":\"address\"}],\"name\":\"setKeepersFeeVaultAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMaxMinRequestIncrements\",\"type\":\"uint256\"}],\"name\":\"setMaxMinRequestIncrements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTotalRequestsAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalRequestsAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMinKeepersMintAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newMinKeepersBurnAmount\",\"type\":\"uint256\"}],\"name\":\"setMinKeepersAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMinRequestId\",\"type\":\"uint256\"}],\"name\":\"setMinRequestId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMinter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newSymbol\",\"type\":\"string\"}],\"name\":\"setNameAndSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPlatform\",\"name\":\"_newPlatform\",\"type\":\"address\"}],\"name\":\"setPlatform\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebaser\",\"type\":\"address\"}],\"name\":\"setRebaser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRequestFeesCalculator\",\"name\":\"_newRequestFeesCalculator\",\"type\":\"address\"}],\"name\":\"setRequestFeesCalculator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_verifyTotalRequestsAmount\",\"type\":\"bool\"}],\"name\":\"setVerifyTotalRequestsAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"_tokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint32\",\"name\":\"_timeDelay\",\"type\":\"uint32\"}],\"name\":\"submitBurnRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"_tokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint32\",\"name\":\"_timeDelay\",\"type\":\"uint32\"}],\"name\":\"submitKeepersBurnRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"_tokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint32\",\"name\":\"_timeDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_maxBuyingPremiumFeePercentage\",\"type\":\"uint16\"}],\"name\":\"submitKeepersMintRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint168\",\"name\":\"_tokenAmount\",\"type\":\"uint168\"},{\"internalType\":\"uint32\",\"name\":\"_timeDelay\",\"type\":\"uint32\"}],\"name\":\"submitMintRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRequestsAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"unerlyingValue\",\"type\":\"uint256\"}],\"name\":\"underlyingToValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"valueToUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyTotalRequestsAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/volatility-token/VolatilityTokenContracts.sol\":\"CVIUSDCVolatilityToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@coti-cvi/contracts-cvi/contracts/ElasticToken.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\nimport \\\"./interfaces/IElasticToken.sol\\\";\\n\\ncontract ElasticToken is IElasticToken, OwnableUpgradeable {\\n\\n    uint256 public constant SCALING_FACTOR_DECIMALS = 10**24;\\n    uint256 public constant DELTA_PRECISION_DECIMALS = 10**18;\\n\\n    string public name;\\n    string public symbol;\\n    uint8 public decimals;\\n    uint256 public totalSupply;\\n\\n    uint256 public scalingFactor;\\n    uint256 public initSupply;\\n    address public rebaser;\\n\\n    mapping(address => uint256) internal _underlyingBalances;\\n    mapping(address => mapping(address => uint256)) internal _allowedFragments;\\n\\n    modifier onlyRebaser() {\\n        require(msg.sender == rebaser, \\\"Not allowed\\\");\\n        _;\\n    }\\n\\n    modifier validRecipient(address to) {\\n        require(to != address(0x0), \\\"Zero address\\\");\\n        _;\\n    }\\n\\n    function __ElasticToken_init(string memory name_, string memory symbol_, uint8 decimals_) public onlyInitializing {\\n        OwnableUpgradeable.__Ownable_init();\\n\\n        name = name_;\\n        symbol = symbol_;\\n        decimals = decimals_;\\n\\n        scalingFactor = SCALING_FACTOR_DECIMALS;\\n    }\\n\\n    function maxScalingFactor() public view override returns (uint256) {\\n        // Scaling factor can only go up to 2**256-1 = initSupply * scalingFactor\\n        return type(uint256).max / initSupply;\\n    }\\n\\n    function _mint(address to, uint256 amount) internal validRecipient(to) {\\n        _beforeTokenTransfer(address(0), to, amount);\\n\\n        totalSupply = totalSupply + amount;\\n        uint256 underlyingValue = valueToUnderlying(amount);\\n        initSupply = initSupply + underlyingValue;\\n\\n        // Make sure init suuply increase keeps scaling factor below max\\n        require(scalingFactor <= maxScalingFactor(), \\\"Max scaling factor too low\\\");\\n\\n        _underlyingBalances[to] = _underlyingBalances[to] + underlyingValue;\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address to, uint256 amount) internal validRecipient(to) {\\n        _beforeTokenTransfer(to, address(0), amount);\\n\\n        totalSupply = totalSupply - amount;\\n        uint256 underlyingValue = valueToUnderlying(amount);\\n\\n        // Note: as initSupply decreases, max sacling factor increases, so no need to test scaling factor against it\\n        initSupply = initSupply - underlyingValue;\\n\\n        _underlyingBalances[to] = _underlyingBalances[to] - underlyingValue;\\n\\n        emit Transfer(to, address(0), amount);\\n    }\\n\\n    function transfer(address to, uint256 value) external override validRecipient(to) returns (bool) {\\n        // Note: As scaling factor grows, dust will be untransferrable\\n        // Minimum transfer value == scalingFactor / 1e24;\\n\\n        _beforeTokenTransfer(msg.sender, to, value);\\n\\n        uint256 underlyingValue = valueToUnderlying(value);\\n        _underlyingBalances[msg.sender] = _underlyingBalances[msg.sender] - underlyingValue;\\n        _underlyingBalances[to] = _underlyingBalances[to] + underlyingValue;\\n        emit Transfer(msg.sender, to, value);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(address from, address to, uint256 value) external override validRecipient(from) validRecipient(to) returns (bool) {\\n        _beforeTokenTransfer(from, to, value);\\n\\n        _allowedFragments[from][msg.sender] = _allowedFragments[from][msg.sender] - value;\\n\\n        uint256 underlyingValue = valueToUnderlying(value);\\n        _underlyingBalances[from] = _underlyingBalances[from] - underlyingValue;\\n        _underlyingBalances[to] = _underlyingBalances[to] + underlyingValue;\\n        emit Transfer(from, to, value);\\n\\n        return true;\\n    }\\n\\n    function balanceOf(address who) public view override returns (uint256) {\\n      return underlyingToValue(_underlyingBalances[who]);\\n    }\\n\\n    function balanceOfUnderlying(address who) external view override returns (uint256) {\\n      return _underlyingBalances[who];\\n    }\\n\\n    function allowance(address owner_, address spender) external view override returns (uint256) {\\n        return _allowedFragments[owner_][spender];\\n    }\\n\\n    function approve(address spender, uint256 value) external override returns (bool) {\\n        _allowedFragments[msg.sender][spender] = value;\\n        emit Approval(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    function increaseAllowance(address spender, uint256 addedValue) external override returns (bool) {\\n        _allowedFragments[msg.sender][spender] = _allowedFragments[msg.sender][spender] + addedValue;\\n        emit Approval(msg.sender, spender, _allowedFragments[msg.sender][spender]);\\n        return true;\\n    }\\n\\n    function decreaseAllowance(address spender, uint256 subtractedValue) external override returns (bool) {\\n        uint256 oldValue = _allowedFragments[msg.sender][spender];\\n        if (subtractedValue >= oldValue) {\\n            _allowedFragments[msg.sender][spender] = 0;\\n        } else {\\n            _allowedFragments[msg.sender][spender] = oldValue - subtractedValue;\\n        }\\n        emit Approval(msg.sender, spender, _allowedFragments[msg.sender][spender]);\\n        return true;\\n    }\\n\\n    function setRebaser(address _rebaser) external override onlyOwner {\\n        rebaser = _rebaser;\\n    }\\n\\n    /**\\n    * @dev The supply adjustment equals (totalSupply * DeviationFromTargetRate) / rebaseLag\\n    *      Where DeviationFromTargetRate is (MarketOracleRate - targetRate) / targetRate\\n    *      and targetRate is CpiOracleRate / baseCpi\\n    */\\n    function rebase(uint256 indexDelta, bool positive) internal onlyRebaser returns (uint256) {        \\n        if (indexDelta == 0) {\\n          emit Rebase(block.timestamp, scalingFactor, scalingFactor);\\n          return totalSupply;\\n        }\\n\\n        uint256 prevScalingFactor = scalingFactor;\\n\\n        if (!positive) {\\n            // Negative rebase, decrease scaling factor\\n            scalingFactor = scalingFactor * (DELTA_PRECISION_DECIMALS - indexDelta) / DELTA_PRECISION_DECIMALS;\\n        } else {\\n            // Positive reabse, increase scaling factor\\n            uint256 newScalingFactor = scalingFactor * (DELTA_PRECISION_DECIMALS + indexDelta) / DELTA_PRECISION_DECIMALS;\\n            if (newScalingFactor < maxScalingFactor()) {\\n                scalingFactor = newScalingFactor;\\n            } else {\\n                scalingFactor = maxScalingFactor();\\n            }\\n        }\\n\\n        totalSupply = underlyingToValue(initSupply);\\n\\n        emit Rebase(block.timestamp, prevScalingFactor, scalingFactor);\\n        return totalSupply;\\n    }\\n\\n    function underlyingToValue(uint256 unerlyingValue) public override view returns (uint256) {\\n        return unerlyingValue * scalingFactor / SCALING_FACTOR_DECIMALS;\\n    }\\n\\n    function valueToUnderlying(uint256 value) public override view returns (uint256) {\\n        return value * SCALING_FACTOR_DECIMALS / scalingFactor;\\n    }\\n\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0x662a134bb3baf9b4fa2bad695b1d0b9d6557617ccf67d79845fd0eea6b22e765\",\"license\":\"GPL-3.0-or-later\"},\"@coti-cvi/contracts-cvi/contracts/VolatilityToken.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\nimport \\\"./interfaces/IVolatilityToken.sol\\\";\\nimport \\\"./interfaces/IRequestManager.sol\\\";\\nimport \\\"./ElasticToken.sol\\\";\\n\\ncontract VolatilityToken is Initializable, IVolatilityToken, IRequestManager, ReentrancyGuardUpgradeable, ElasticToken {\\n\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    uint8 public constant MINT_REQUEST_TYPE = 1;\\n    uint8 public constant BURN_REQUEST_TYPE = 2;\\n\\n    uint16 public constant MAX_PERCENTAGE = 10000;\\n\\n    uint8 public override leverage; // Obsolete\\n    uint8 private rebaseLag; // Obsolete\\n\\n    uint16 public minDeviationPercentage;\\n\\n    uint256 public override initialTokenToLPTokenRate;\\n\\n    IERC20Upgradeable public token;\\n    IPlatform public override platform;\\n    IFeesCollector public feesCollector;\\n    IFeesCalculator public feesCalculator;\\n    IRequestFeesCalculator public override requestFeesCalculator;\\n    ICVIOracle public cviOracle;\\n\\n    uint256 public override nextRequestId;\\n\\n    mapping(uint256 => Request) public override requests;\\n\\n    uint256 public totalRequestsAmount;\\n    uint256 public maxTotalRequestsAmount;\\n    bool public verifyTotalRequestsAmount;\\n\\n    uint16 public deviationPerSingleRebaseLag;\\n    uint16 public maxDeviationPercentage;\\n\\n    bool public cappedRebase;\\n\\n    uint256 public constant PRECISION_DECIMALS = 1e10;\\n    uint256 public constant CVI_DECIMALS_FIX = 100;\\n\\n    uint256 public override minRequestId;\\n    uint256 public override maxMinRequestIncrements;\\n\\n    address public fulfiller;\\n\\n    address public keepersFeeVaultAddress;\\n\\n    uint256 public minKeepersMintAmount;\\n    uint256 public minKeepersBurnAmount;\\n    \\n    address public minter;\\n\\n    function initialize(IERC20Upgradeable _token, string memory _lpTokenName, string memory _lpTokenSymbolName, uint8 _leverage, uint256 _initialTokenToVolTokenRate, \\n            IPlatform _platform, IFeesCollector _feesCollector, IFeesCalculator _feesCalculator, IRequestFeesCalculator _requestFeesCalculator, ICVIOracle _cviOracle) public initializer {\\n        minDeviationPercentage = 100;\\n        deviationPerSingleRebaseLag = 1000;\\n        maxDeviationPercentage = 5000;\\n        cappedRebase = true;\\n\\n        nextRequestId = 1;\\n        minRequestId = 1;\\n\\n        maxMinRequestIncrements = 30;\\n\\n        ElasticToken.__ElasticToken_init(_lpTokenName, _lpTokenSymbolName, 18);\\n        ReentrancyGuardUpgradeable.__ReentrancyGuard_init();\\n\\n        token = _token;\\n        platform = _platform;\\n        feesCollector = _feesCollector;\\n        feesCalculator = _feesCalculator;\\n        requestFeesCalculator = _requestFeesCalculator;\\n        cviOracle = _cviOracle;\\n        initialTokenToLPTokenRate = _initialTokenToVolTokenRate;\\n        leverage = _leverage;\\n\\n        totalRequestsAmount = 0;\\n        maxTotalRequestsAmount = 1e11;\\n        verifyTotalRequestsAmount = true;\\n\\n        if (address(token) != address(0)) {\\n            token.safeApprove(address(_platform), type(uint256).max);\\n            token.safeApprove(address(_feesCollector), type(uint256).max);\\n        }\\n    }\\n\\n    // If not rebaser, the rebase underlying method will revert\\n    function rebaseCVI() external override {\\n        (uint256 balance, bool isBalancePositive,,,,) = platform.calculatePositionBalance(address(this));\\n        require(isBalancePositive, \\\"Negative balance\\\");\\n\\n        // Note: the price is measured by token units, so we want its decimals on the position value as well, as precision decimals\\n        // We use the rate multiplication to have balance / totalSupply be done with matching decimals\\n        uint256 positionValue = balance * initialTokenToLPTokenRate * PRECISION_DECIMALS / totalSupply;\\n\\n        (uint256 cviValueOracle,,) = cviOracle.getCVILatestRoundData();\\n        uint256 cviValue = cviValueOracle * PRECISION_DECIMALS / CVI_DECIMALS_FIX;\\n\\n        require(cviValue > positionValue, \\\"Positive rebase disallowed\\\");\\n        uint256 deviation = cviValue - positionValue;\\n\\n        require(!cappedRebase || deviation >= cviValue * minDeviationPercentage / MAX_PERCENTAGE, \\\"Not enough deviation\\\");\\n        require(!cappedRebase || deviation <= cviValue * maxDeviationPercentage / MAX_PERCENTAGE, \\\"Deviation too big\\\");\\n\\n        // Note: rounding up (ceiling) the rebase lag so it is >= 1 and bumps by 1 for every deviationPerSingleRebaseLag percentage\\n        uint256 rebaseLagNew = cappedRebase ? (deviation * MAX_PERCENTAGE - 1) / (cviValue * deviationPerSingleRebaseLag) + 1 : 1;\\n\\n        if (rebaseLagNew > 1) {\\n            deviation = deviation / rebaseLagNew;\\n            cviValue = positionValue + deviation;\\n        }\\n\\n        uint256 delta = DELTA_PRECISION_DECIMALS * deviation / cviValue;\\n\\n        rebase(delta, false);\\n    }\\n\\n    function setNameAndSymbol(string memory _newName, string memory _newSymbol) external onlyOwner {\\n        name = _newName;\\n        symbol = _newSymbol;\\n    }\\n\\n    function submitMintRequest(uint168 _tokenAmount, uint32 _timeDelay) external virtual override returns (uint256 requestId) {\\n        requireTotalRequestsAmount(_tokenAmount);\\n        return submitRequest(MINT_REQUEST_TYPE, _tokenAmount, _timeDelay, false, 0);\\n    }\\n\\n    function submitKeepersMintRequest(uint168 _tokenAmount, uint32 _timeDelay, uint16 _maxBuyingPremiumFeePercentage) external override returns (uint256 requestId) {\\n        requireTotalRequestsAmount(_tokenAmount);\\n        require(_tokenAmount >= minKeepersMintAmount, \\\"Not enough tokens\\\");\\n        return submitRequest(MINT_REQUEST_TYPE, _tokenAmount, _timeDelay, true, _maxBuyingPremiumFeePercentage);\\n    }\\n\\n    function submitBurnRequest(uint168 _tokenAmount, uint32 _timeDelay) external override returns (uint256 requestId) {\\n        return submitRequest(BURN_REQUEST_TYPE, _tokenAmount, _timeDelay, false, 0);\\n    }\\n\\n    function submitKeepersBurnRequest(uint168 _tokenAmount, uint32 _timeDelay) external override returns (uint256 requestId) {\\n        require(_tokenAmount >= minKeepersBurnAmount, \\\"Not enough tokens\\\");\\n        return submitRequest(BURN_REQUEST_TYPE, _tokenAmount, _timeDelay, true, 0);\\n    }\\n\\n    function fulfillMintRequest(uint256 _requestId, uint16 _maxBuyingPremiumFeePercentage, bool _keepersCalled) public virtual override returns (uint256 tokensMinted, bool success) {\\n        require(!_keepersCalled || msg.sender == fulfiller); // Not allowed\\n        Request memory request = requests[_requestId];\\n        return _fulfillMintRequest(_requestId, request, _maxBuyingPremiumFeePercentage, _keepersCalled);\\n    }\\n\\n    function fulfillBurnRequest(uint256 _requestId,  bool _keepersCalled) external override returns (uint256 tokensReceived) {\\n        require(!_keepersCalled || msg.sender == fulfiller); // Not allowed\\n        Request memory request = requests[_requestId];\\n        return _fulfillBurnRequest(_requestId, request, _keepersCalled);\\n    }\\n\\n    function mintTokens(uint168 tokenAmount) external override returns (uint256 mintedTokens) {\\n        require(msg.sender == minter);\\n        token.safeTransferFrom(msg.sender, address(this), tokenAmount);\\n        (mintedTokens,) = mintTokens(0, msg.sender, tokenAmount, MAX_PERCENTAGE, false, false);\\n    }\\n\\n    function burnTokens(uint168 burnAmount) external override returns (uint256 tokenAmount) {\\n        require(msg.sender == minter);\\n        IERC20Upgradeable(address(this)).safeTransferFrom(msg.sender, address(this), underlyingToValue(valueToUnderlying(uint256(burnAmount))));\\n        (tokenAmount,) = burnTokens(0, msg.sender, burnAmount, 0, 0, false, false);\\n    }\\n\\n    function liquidateRequest(uint256 _requestId) external override nonReentrant returns (uint256 findersFeeAmount) {\\n        Request memory request = requests[_requestId];\\n        require(request.requestType != 0, \\\"Request id not found\\\");\\n        require(requestFeesCalculator.isLiquidable(request), \\\"Not liquidable\\\");\\n        findersFeeAmount = _liquidateRequest(_requestId, request);\\n    }\\n\\n    function setMinter(address _newMinter) external override onlyOwner {\\n        minter = _newMinter;\\n    }\\n\\n    function setPlatform(IPlatform _newPlatform) external override onlyOwner {\\n        if (address(platform) != address(0) && address(token) != address(0)) {\\n            token.safeApprove(address(platform), type(uint256).max);\\n        }\\n\\n        platform = _newPlatform;\\n\\n        if (address(_newPlatform) != address(0) && address(token) != address(0)) {\\n            token.safeApprove(address(_newPlatform), type(uint256).max);\\n        }\\n    }\\n\\n    function setFeesCalculator(IFeesCalculator _newFeesCalculator) external override onlyOwner {\\n        feesCalculator = _newFeesCalculator;\\n    }\\n\\n    function setFeesCollector(IFeesCollector _newCollector) external override onlyOwner {\\n        if (address(feesCollector) != address(0) && address(token) != address(0)) {\\n            token.safeApprove(address(feesCollector), 0);\\n        }\\n\\n        feesCollector = _newCollector;\\n\\n        if (address(_newCollector) != address(0) && address(token) != address(0)) {\\n            token.safeApprove(address(_newCollector), type(uint256).max);\\n        }\\n    }\\n\\n    function setRequestFeesCalculator(IRequestFeesCalculator _newRequestFeesCalculator) external override onlyOwner {\\n        requestFeesCalculator = _newRequestFeesCalculator;\\n    }\\n\\n    function setCVIOracle(ICVIOracle _newCVIOracle) external override onlyOwner {\\n        cviOracle = _newCVIOracle;\\n    }\\n\\n    function setDeviationParameters(uint16 _newDeviationPercentagePerSingleRebaseLag, uint16 _newMinDeviationPercentage, uint16 _newMaxDeviationPercentage) external override onlyOwner {\\n        deviationPerSingleRebaseLag = _newDeviationPercentagePerSingleRebaseLag;\\n        minDeviationPercentage = _newMinDeviationPercentage;\\n        maxDeviationPercentage = _newMaxDeviationPercentage;\\n    }\\n\\n    function setVerifyTotalRequestsAmount(bool _verifyTotalRequestsAmount) external override onlyOwner {\\n        verifyTotalRequestsAmount = _verifyTotalRequestsAmount;\\n    }\\n\\n    function setMaxTotalRequestsAmount(uint256 _maxTotalRequestsAmount) external override onlyOwner {\\n        maxTotalRequestsAmount = _maxTotalRequestsAmount;\\n    }\\n\\n    function setCappedRebase(bool _newCappedRebase) external override onlyOwner {\\n        cappedRebase = _newCappedRebase;\\n    }\\n\\n    function setMinRequestId(uint256 _newMinRequestId) external override onlyOwner {\\n        minRequestId = _newMinRequestId;\\n    }\\n\\n    function setMaxMinRequestIncrements(uint256 _newMaxMinRequestIncrements) external override onlyOwner {\\n        maxMinRequestIncrements = _newMaxMinRequestIncrements;\\n    }\\n\\n    function setFulfiller(address _fulfiller) external override onlyOwner {\\n        fulfiller = _fulfiller;\\n    }\\n\\n    function setKeepersFeeVaultAddress(address _newKeepersFeeVaultAddress) external override onlyOwner {\\n        keepersFeeVaultAddress = _newKeepersFeeVaultAddress;\\n    }\\n\\n    function setMinKeepersAmounts(uint256 _newMinKeepersMintAmount, uint256 _newMinKeepersBurnAmount) external override onlyOwner {\\n        minKeepersMintAmount = _newMinKeepersMintAmount;\\n        minKeepersBurnAmount = _newMinKeepersBurnAmount;\\n    }\\n\\n    struct SubmitRequestLocals {\\n        uint168 updatedTokenAmount;\\n        uint16 timeDelayFeePercent;\\n        uint16 maxFeesPercent;\\n        uint256 timeDelayFeeAmount;\\n        uint256 maxFeesAmount;\\n    }\\n\\n    function submitRequest(uint8 _type, uint168 _tokenAmount, uint32 _timeDelay, bool _useKeepers, uint16 _maxBuyingPremiumFeePercentage) private nonReentrant returns (uint requestId) {\\n        require(_tokenAmount > 0);\\n\\n        SubmitRequestLocals memory locals;\\n\\n        // Converting to underlying value in case of burn request, to support rebasing until fulfill\\n        locals.updatedTokenAmount = _tokenAmount;\\n        if (_type == BURN_REQUEST_TYPE) {\\n            uint256 __updatedTokenAmount = valueToUnderlying(_tokenAmount);\\n            require(uint168(__updatedTokenAmount) == __updatedTokenAmount);\\n            locals.updatedTokenAmount = uint168(__updatedTokenAmount);\\n        }\\n\\n        locals.timeDelayFeePercent = requestFeesCalculator.calculateTimeDelayFee(_timeDelay);\\n        locals.maxFeesPercent = requestFeesCalculator.getMaxFees();\\n\\n        locals.timeDelayFeeAmount = locals.updatedTokenAmount * locals.timeDelayFeePercent / MAX_PERCENTAGE;\\n        locals.maxFeesAmount = locals.updatedTokenAmount * locals.maxFeesPercent / MAX_PERCENTAGE;\\n\\n        requestId = nextRequestId;\\n        nextRequestId = nextRequestId + 1; // Overflow allowed to keep id cycling\\n\\n        uint32 targetTimestamp = uint32(block.timestamp + _timeDelay);\\n\\n        requests[requestId] = Request(_type, locals.updatedTokenAmount, locals.timeDelayFeePercent, locals.maxFeesPercent, msg.sender, uint32(block.timestamp), targetTimestamp, _useKeepers, _maxBuyingPremiumFeePercentage);\\n\\n        if (_type != BURN_REQUEST_TYPE) {\\n            totalRequestsAmount = totalRequestsAmount + _tokenAmount;\\n        }\\n\\n        collectRelevantTokens(_type, _useKeepers ? _tokenAmount : (_type == BURN_REQUEST_TYPE ? underlyingToValue(locals.timeDelayFeeAmount + locals.maxFeesAmount) : locals.timeDelayFeeAmount + locals.maxFeesAmount));\\n\\n        emit SubmitRequest(requestId, _type, msg.sender, _tokenAmount, _type == BURN_REQUEST_TYPE ? underlyingToValue(locals.timeDelayFeeAmount) : locals.timeDelayFeeAmount, uint32(block.timestamp), targetTimestamp, _useKeepers, _maxBuyingPremiumFeePercentage);\\n    }\\n\\n    struct PreFulfillResults {\\n        uint168 amountToFulfill;\\n        uint168 fulfillFees;\\n        uint168 timeDelayFees;\\n        uint16 fulfillFeesPercentage;\\n        bool wasLiquidated;\\n        uint168 depositAmount;\\n        uint168 mintAmount;\\n        bool shouldAbort;\\n        uint168 keepersFee;\\n    }\\n\\n    function preFulfillRequest(uint256 _requestId, Request memory _request, uint8 _expectedType, bool _keepersCalled) private returns (PreFulfillResults memory results) {\\n        require((_keepersCalled && _request.useKeepers) || _request.owner == msg.sender); // Not allowed\\n        require(_request.requestType == _expectedType, \\\"Wrong request type\\\");\\n\\n        if (requestFeesCalculator.isLiquidable(_request)) {\\n            _liquidateRequest(_requestId, _request);\\n            results.wasLiquidated = true;\\n        } else {\\n            require(!_keepersCalled || block.timestamp >= _request.targetTimestamp, \\\"Target time not reached\\\");\\n            results.fulfillFeesPercentage = _request.useKeepers && block.timestamp >= _request.targetTimestamp ? 0 : requestFeesCalculator.calculateTimePenaltyFee(_request);\\n\\n            results.timeDelayFees = _request.tokenAmount * _request.timeDelayRequestFeesPercent / MAX_PERCENTAGE;\\n\\n            if (_request.requestType == MINT_REQUEST_TYPE) {\\n                if (_request.useKeepers && _keepersCalled) {\\n                    // Note: Cast is safe as keepers fee is always less than amount\\n                    results.keepersFee = uint168(requestFeesCalculator.calculateKeepersFee(_request.tokenAmount));\\n                }\\n\\n                results.fulfillFees = _request.tokenAmount * results.fulfillFeesPercentage / MAX_PERCENTAGE;\\n                results.amountToFulfill = _request.tokenAmount - results.timeDelayFees - results.fulfillFees - results.keepersFee;\\n            }\\n\\n            if (!_request.useKeepers) {\\n                uint256 tokensLeftToTransfer = getUpdatedTokenAmount(_request.requestType, _request.tokenAmount - results.timeDelayFees - (_request.tokenAmount * _request.maxRequestFeesPercent / MAX_PERCENTAGE));\\n                collectRelevantTokens(_request.requestType, tokensLeftToTransfer);\\n            }\\n\\n            if (_request.requestType == BURN_REQUEST_TYPE) {\\n                results.amountToFulfill = getUpdatedTokenAmount(_request.requestType, _request.tokenAmount);\\n            }\\n        }\\n    }\\n\\n    function requireTotalRequestsAmount(uint168 _newTokenAmount) private view {\\n        require(!verifyTotalRequestsAmount || _newTokenAmount + totalRequestsAmount <= maxTotalRequestsAmount, \\\"Total requests amount exceeded\\\");\\n    }\\n\\n    function _fulfillMintRequest(uint256 _requestId, Request memory _request, uint16 _maxBuyingPremiumFeePercentage, bool _keepersCalled) private returns (uint256 tokensMinted, bool success) {\\n        PreFulfillResults memory results = preFulfillRequest(_requestId, _request, MINT_REQUEST_TYPE, _keepersCalled);\\n\\n        if (results.wasLiquidated) {\\n            success = true;\\n        } else {\\n            (tokensMinted, success) = mintTokens(_requestId, _request.owner, results.amountToFulfill, _maxBuyingPremiumFeePercentage, _request.useKeepers && _keepersCalled, true);\\n\\n            if (success) {\\n                subtractTotalRequestAmount(_request.tokenAmount);\\n                deleteRequest(_requestId);\\n\\n                feesCollector.sendProfit(results.timeDelayFees + results.fulfillFees, IERC20(address(token)));\\n\\n                if (results.keepersFee > 0) {\\n                    token.safeTransfer(keepersFeeVaultAddress, results.keepersFee);\\n                }\\n\\n                emit FulfillRequest(_requestId, _request.requestType, _request.owner, results.fulfillFees + results.keepersFee, false, _request.useKeepers, _keepersCalled, msg.sender, uint32(block.timestamp));\\n            }\\n        }\\n    }\\n\\n    function _fulfillBurnRequest(uint256 _requestId, Request memory _request, bool _keepersCalled) private nonReentrant returns (uint256 tokensReceived) {\\n        PreFulfillResults memory results = preFulfillRequest(_requestId, _request, BURN_REQUEST_TYPE, _keepersCalled);\\n\\n        if (!results.wasLiquidated) {\\n            deleteRequest(_requestId);\\n\\n            uint256 fulfillFees;\\n            (tokensReceived, fulfillFees) = burnTokens(_requestId, _request.owner, results.amountToFulfill, _request.timeDelayRequestFeesPercent, results.fulfillFeesPercentage, _keepersCalled && _request.useKeepers, true);\\n\\n            emit FulfillRequest(_requestId, _request.requestType, _request.owner, fulfillFees, false, _request.useKeepers, _keepersCalled, msg.sender, uint32(block.timestamp));\\n        }\\n    }\\n\\n    function mintTokens(uint256 _requestId, address _owner, uint168 _tokenAmount, uint16 _maxBuyingPremiumFeePercentage, bool _catchRevert, bool _chargeOpenFee) private returns (uint256 tokensMinted, bool success) {\\n        uint256 balance = 0;\\n\\n        {\\n            bool isPositive = true;\\n\\n            (uint256 currPositionUnits,,,,) = platform.positions(address(this));\\n            if (currPositionUnits != 0) {\\n                (balance, isPositive,,,,) = platform.calculatePositionBalance(address(this));\\n            }\\n            require(isPositive, \\\"Negative balance\\\");\\n        }\\n\\n        uint256 supply = totalSupply;\\n\\n        (, uint256 positionedTokenAmount, uint256 openPositionFee, uint256 buyingPremiumFee, bool transactionSuccess) = openPosition(_tokenAmount, _maxBuyingPremiumFeePercentage, _catchRevert, _chargeOpenFee);\\n\\n        if (transactionSuccess) {   \\n            if (supply > 0 && balance > 0) {\\n                tokensMinted = positionedTokenAmount * supply / balance;\\n            } else {\\n                tokensMinted = positionedTokenAmount * initialTokenToLPTokenRate;\\n            }\\n\\n            emit Mint(_requestId, _owner, _tokenAmount, positionedTokenAmount, tokensMinted, openPositionFee, buyingPremiumFee);\\n\\n            require(tokensMinted > 0, \\\"Too few tokens\\\");\\n\\n            _mint(_owner, tokensMinted);\\n            success = true;\\n        }\\n    }\\n\\n    function burnTokens(uint256 _requestId, address _owner, uint168 _tokenAmount, uint16 _timeDelayFeesPercentage, uint16 _fulfillFeesPercentage, bool _hasKeepersFee, bool _chargeCloseFee) private returns (uint256 tokensReceived, uint256 fulfillFees) {\\n        (uint256 tokensBeforeFees, uint256 closePositionFee, uint256 closingPremiumFee) = _burnTokens(_tokenAmount, _chargeCloseFee);\\n\\n        {\\n            uint256 timeDelayFee = tokensBeforeFees * _timeDelayFeesPercentage / MAX_PERCENTAGE;\\n            fulfillFees = tokensBeforeFees * _fulfillFeesPercentage / MAX_PERCENTAGE;\\n\\n            uint256 keepersFee = 0;\\n            if (_hasKeepersFee) {\\n                keepersFee = requestFeesCalculator.calculateKeepersFee(tokensBeforeFees);\\n            }\\n\\n            tokensReceived = tokensBeforeFees - fulfillFees - timeDelayFee - keepersFee;\\n\\n            if (fulfillFees + timeDelayFee > 0) {\\n                feesCollector.sendProfit(fulfillFees + timeDelayFee, IERC20(address(token)));\\n            }\\n            \\n            if (keepersFee > 0) {\\n                token.safeTransfer(keepersFeeVaultAddress, keepersFee);\\n                fulfillFees += keepersFee;\\n            }\\n        }\\n\\n        token.safeTransfer(_owner, tokensReceived);\\n\\n        emit Burn(_requestId, _owner, tokensBeforeFees, tokensReceived, _tokenAmount, closePositionFee, closingPremiumFee);\\n    }\\n\\n    function _burnTokens(uint256 _tokenAmount, bool _chargeCloseFee) private returns (uint256 tokensReceived, uint256 closePositionFee, uint256 closingPremiumFee) {\\n        (, bool isPositive, uint168 totalPositionUnits,,,) = platform.calculatePositionBalance(address(this));\\n        require(isPositive, \\\"Negative balance\\\");\\n\\n        uint256 positionUnits = totalPositionUnits * _tokenAmount / totalSupply;\\n        require(positionUnits == uint168(positionUnits), \\\"Too much position units\\\");\\n\\n        if (positionUnits > 0) {\\n            (tokensReceived, closePositionFee, closingPremiumFee) = _chargeCloseFee ? \\n                platform.closePosition(uint168(positionUnits), 1) :\\n                platform.closePositionWithoutFee(uint168(positionUnits), 1);\\n        }\\n\\n        // Note: Moving to underlying and back in case rebase occured, and trying to burn too much because of rounding\\n        _burn(address(this), underlyingToValue(valueToUnderlying(_tokenAmount)));\\n    }\\n\\n    function _liquidateRequest(uint256 _requestId, Request memory _request) private returns (uint256 findersFeeAmount) {\\n        uint168 updatedTokenAmount = getUpdatedTokenAmount(_request.requestType, _request.tokenAmount);\\n        uint256 leftAmount = updatedTokenAmount;\\n\\n        if (!_request.useKeepers) {\\n            uint168 timeDelayFeeAmount = updatedTokenAmount * _request.timeDelayRequestFeesPercent / MAX_PERCENTAGE;\\n            uint168 maxFeesAmount = updatedTokenAmount * _request.maxRequestFeesPercent / MAX_PERCENTAGE;\\n            leftAmount = timeDelayFeeAmount + maxFeesAmount;   \\n        }\\n\\n        if (_request.requestType == BURN_REQUEST_TYPE) {\\n            (leftAmount,,) = _burnTokens(leftAmount, true);\\n        } else {\\n            subtractTotalRequestAmount(updatedTokenAmount);\\n        }\\n\\n        findersFeeAmount = _request.useKeepers ? requestFeesCalculator.calculateKeepersFee(leftAmount) : requestFeesCalculator.calculateFindersFee(leftAmount);\\n\\n        deleteRequest(_requestId);\\n\\n        if (_request.useKeepers) {\\n            token.safeTransfer(_request.owner, leftAmount - findersFeeAmount);\\n        } else {\\n            feesCollector.sendProfit(leftAmount - findersFeeAmount, IERC20(address(token)));\\n        }\\n\\n        token.safeTransfer(msg.sender, findersFeeAmount);\\n\\n        emit LiquidateRequest(_requestId, _request.requestType, _request.owner, msg.sender, findersFeeAmount, _request.useKeepers, uint32(block.timestamp));\\n    }\\n\\n    function deleteRequest(uint256 _requestId) private {\\n        delete requests[_requestId];\\n\\n        uint256 currMinRequestId = minRequestId;\\n        uint256 increments = 0;\\n        bool didIncrement = false;\\n\\n        // Skip over non-keepers request ids as well as fulfilled ones, \\n        // as minRequestId is used only to allow keepers to test which requests are waiting to be fulfilled\\n        while (currMinRequestId < nextRequestId && increments < maxMinRequestIncrements && (requests[currMinRequestId].owner == address(0) || requests[currMinRequestId].useKeepers == false)) {\\n            increments++;\\n            currMinRequestId++;\\n            didIncrement = true;\\n        }\\n\\n        if (didIncrement) {\\n            minRequestId = currMinRequestId;\\n        }\\n    }\\n\\n    function subtractTotalRequestAmount(uint256 _amount) private {\\n        if (_amount > totalRequestsAmount) {\\n            totalRequestsAmount = 0;\\n        } else {\\n            totalRequestsAmount = totalRequestsAmount - _amount;\\n        }\\n    }\\n\\n    function collectRelevantTokens(uint8 _requestType, uint256 _tokenAmount) private {\\n        if (_requestType == BURN_REQUEST_TYPE) {\\n            require(balanceOf(msg.sender) >= _tokenAmount, \\\"Not enough tokens\\\");\\n            IERC20Upgradeable(address(this)).safeTransferFrom(msg.sender, address(this), _tokenAmount);\\n        } else {\\n            token.safeTransferFrom(msg.sender, address(this), _tokenAmount);\\n        }\\n    }\\n\\n    function openPosition(uint168 _amount, uint16 _maxBuyingPremiumFeePercentage, bool _catchRevert, bool _chargeOpenFee) private returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee, bool transactionSuccess) {\\n        transactionSuccess = true;\\n\\n        if (_catchRevert) {\\n            (bool success, bytes memory returnData) = \\n                address(platform).call(abi.encodePacked(platform.openPosition.selector, abi.encode(_amount, platform.maxCVIValue(), _maxBuyingPremiumFeePercentage, 1)));\\n\\n            if (success) {\\n                (positionUnitsAmount, positionedTokenAmount, openPositionFee, buyingPremiumFee) = abi.decode(returnData, (uint168, uint168, uint168, uint168));\\n            } else {\\n                transactionSuccess = false;\\n            }\\n        } else {\\n            (positionUnitsAmount, positionedTokenAmount, openPositionFee, buyingPremiumFee) = !_chargeOpenFee ? \\n                platform.openPositionWithoutFee(_amount, platform.maxCVIValue(), 1) : \\n                platform.openPosition(_amount, platform.maxCVIValue(), _maxBuyingPremiumFeePercentage, 1);\\n        }\\n    }\\n\\n    function getUpdatedTokenAmount(uint8 _requestType, uint168 _requestAmount) private view returns (uint168 updatedTokenAmount) {\\n        if (_requestType != BURN_REQUEST_TYPE) {\\n            return _requestAmount;\\n        }\\n\\n        uint256 __updatedTokenAmount = underlyingToValue(_requestAmount);\\n        require(uint168(__updatedTokenAmount) == __updatedTokenAmount);\\n        updatedTokenAmount = uint168(__updatedTokenAmount);\\n    }\\n}\\n\",\"keccak256\":\"0xba63e445ba60013d7ba7ac1e827aabeb127a2f22f104f563a6b0f5fcfffaf1ee\",\"license\":\"BUSL-1.1\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ICVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ICVIOracle {\\n    function getCVIRoundData(uint80 roundId) external view returns (uint32 cviValue, uint256 cviTimestamp);\\n    function getCVILatestRoundData() external view returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp);\\n\\n    function setDeviationCheck(bool newDeviationCheck) external;\\n    function setMaxDeviation(uint16 newMaxDeviation) external;\\n}\\n\",\"keccak256\":\"0xf1871b2e9219f7a11e63d8e3276b7a0a46d8d726d54e385a6326dbdb2bcb1bad\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IElasticToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8;\\n\\ninterface IElasticToken {\\n\\n    event Rebase(uint256 epoch, uint256 prevScalingFactor, uint256 newScalingFactor);\\n\\n    event Transfer(address indexed from, address indexed to, uint amount);\\n    event Approval(address indexed owner, address indexed spender, uint amount);\\n\\n    function transfer(address to, uint256 value) external returns(bool);\\n    function transferFrom(address from, address to, uint256 value) external returns(bool);\\n    function balanceOf(address who) external view returns(uint256);\\n    function allowance(address owner, address spender) external view returns(uint256);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\\n    function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\\n\\n    function balanceOfUnderlying(address who) external view returns(uint256);\\n    function maxScalingFactor() external view returns (uint256);\\n    function underlyingToValue(uint256 unerlyingValue) external view returns (uint256);\\n    function valueToUnderlying(uint256 value) external view returns (uint256);\\n\\n    function setRebaser(address rebaser) external;\\n}\\n\",\"keccak256\":\"0x2f1aa8bd13bef092a1e06d2208e9d5ddfb2edb7f5a71b1d4d14ff8a234540645\",\"license\":\"MIT\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IThetaVaultInfo.sol\\\";\\n\\ninterface IFeesCalculator {\\n\\n    struct CVIValue {\\n        uint256 period;\\n        uint32 cviValue;\\n    }\\n\\n    struct SnapshotUpdate {\\n        uint256 latestSnapshot;\\n        uint256 singleUnitFundingFee;\\n        uint256 totalTime;\\n        uint256 totalRounds;\\n        uint256 cviValueTimestamp;\\n        uint80 newLatestRoundId;\\n        uint32 cviValue;\\n        bool updatedSnapshot;\\n        bool updatedLatestRoundId;\\n        bool updatedLatestTimestamp;\\n        bool updatedTurbulenceData;\\n    }\\n\\n    function updateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 lastCVIValue, uint32 currCVIValue) external;\\n\\n    function setOracle(ICVIOracle cviOracle) external;\\n    function setThetaVault(IThetaVaultInfo thetaVault) external;\\n\\n    function setStateUpdator(address newUpdator) external;\\n\\n    function setFundingFeeMinRate(uint32 newFundingFeeMinRate) external;\\n    function setFundingFeeMaxRate(uint32 newFundingFeeMaxRate) external;\\n    function setMinFundingFeeCviThreshold(uint32 newMinFundingFeeCviThreshold) external;\\n    function setMaxFundingFeeCviThreshold(uint32 newMaxFundingFeeCviThreshold) external;\\n    function setFundingFeeDivisionFactor(uint32 newFundingFeeDivisionFactor) external;\\n    function setFundingFeeCoefficients(uint32[] calldata newFundingFeeCoefficients) external;\\n\\n    function setDepositFee(uint16 newDepositFeePercentage) external;\\n    function setWithdrawFee(uint16 newWithdrawFeePercentage) external;\\n    function setOpenPositionFee(uint16 newOpenPositionFeePercentage) external;\\n    function setOpenPositionLPFee(uint16 newOpenPositionLPFeePercent) external;\\n    function setClosePositionLPFee(uint16 newClosePositionLPFeePercent) external;\\n    function setClosePositionFee(uint16 newClosePositionFeePercentage) external;\\n    function setClosePositionMaxFee(uint16 newClosePositionMaxFeePercentage) external;\\n    function setClosePositionFeeDecay(uint256 newClosePositionFeeDecayPeriod) external;\\n    \\n    function setOracleHeartbeatPeriod(uint256 newOracleHeartbeatPeriod) external;\\n    function setBuyingPremiumFeeMax(uint16 newBuyingPremiumFeeMaxPercentage) external;\\n    function setBuyingPremiumThreshold(uint16 newBuyingPremiumThreshold) external;\\n    function setClosingPremiumFeeMax(uint16 newClosingPremiumFeeMaxPercentage) external;\\n    function setCollateralToBuyingPremiumMapping(uint16[] calldata newCollateralToBuyingPremiumMapping) external;\\n    function setFundingFeeConstantRate(uint16 newfundingFeeConstantRate) external;\\n    function setCollateralToExtraFundingFeeMapping(uint32[] calldata newCollateralToExtraFundingFeeMapping) external;\\n    function setTurbulenceStep(uint16 newTurbulenceStepPercentage) external;\\n    function setMaxTurbulenceFeePercentToTrim(uint16 newMaxTurbulenceFeePercentToTrim) external;\\n    function setTurbulenceDeviationThresholdPercent(uint16 newTurbulenceDeviationThresholdPercent) external;\\n    function setTurbulenceDeviationPercent(uint16 newTurbulenceDeviationPercentage) external;\\n\\n    function calculateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 _lastCVIValue, uint32 _currCVIValue) external view returns (uint16);\\n\\n    function calculateBuyingPremiumFee(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n    function calculateBuyingPremiumFeeWithAddendum(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits, uint16 _turbulenceIndicatorPercent) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n\\n    function calculateClosingPremiumFee() external view returns (uint16 combinedPremiumFeePercentage);\\n\\n    function calculateSingleUnitFundingFee(CVIValue[] memory cviValues, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 fundingFee);\\n    function calculateSingleUnitPeriodFundingFee(CVIValue memory cviValue, uint256 collateralRatio) external view returns (uint256 fundingFee, uint256 fundingFeeRatePercents);\\n    function updateSnapshots(uint256 latestTimestamp, uint256 blockTimestampSnapshot, uint256 latestTimestampSnapshot, uint80 latestOracleRoundId, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (SnapshotUpdate memory snapshotUpdate);\\n\\n    function calculateClosePositionFeePercent(uint256 creationTimestamp, bool isNoLockPositionAddress) external view returns (uint16);\\n    function calculateWithdrawFeePercent(uint256 lastDepositTimestamp) external view returns (uint16);\\n\\n    function calculateCollateralRatio(uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 collateralRatio);\\n\\n    function depositFeePercent() external view returns (uint16);\\n    function withdrawFeePercent() external view returns (uint16);\\n    function openPositionFeePercent() external view returns (uint16);\\n    function closePositionFeePercent() external view returns (uint16);\\n    function openPositionLPFeePercent() external view returns (uint16);\\n    function closePositionLPFeePercent() external view returns (uint16);\\n\\n    function openPositionFees() external view returns (uint16 openPositionFeePercentResult, uint16 buyingPremiumFeeMaxPercentResult);\\n\\n    function turbulenceIndicatorPercent() external view returns (uint16);\\n    function oracleLeverage() external view returns (uint8);\\n\\n    function getCollateralToBuyingPremiumMapping() external view returns(uint16[] memory);\\n    function getCollateralToExtraFundingFeeMapping() external view returns(uint32[] memory);\\n    function getFundingFeeCoefficients() external view returns(uint32[] memory);\\n}\\n\",\"keccak256\":\"0x4a28b87395a2a35ac1152b83f96630ad4fa1b844b5abca4270486c9c08f388ea\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IFeesCollector {\\n    function sendProfit(uint256 amount, IERC20 token) external;\\n}\\n\",\"keccak256\":\"0xb16b7c5d985657716ccacf0f1e61de587c06fe4f6591bee6fafc0a3658229b4c\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ILiquidation.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ILiquidation {\\t\\n\\tfunction setMinLiquidationThresholdPercents(uint16[8] calldata newMinThresholdPercents) external;\\n\\tfunction setMinLiquidationRewardPercent(uint16 newMinRewardPercent) external;\\n\\tfunction setMaxLiquidationRewardPercents(uint16[8] calldata newMaxRewardPercents) external;\\n\\tfunction isLiquidationCandidate(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (bool);\\n\\tfunction getLiquidationReward(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (uint256 finderFeeAmount);\\n}\\n\",\"keccak256\":\"0x0799656b324ed8d65391313156e1dfe7d99b6dadb08e71cd6a515d19731539bd\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IPlatform.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IFeesCalculator.sol\\\";\\nimport \\\"./IRewardsCollector.sol\\\";\\nimport \\\"./IFeesCollector.sol\\\";\\nimport \\\"./ILiquidation.sol\\\";\\n\\ninterface IPlatform {\\n\\n    struct Position {\\n        uint168 positionUnitsAmount;\\n        uint8 leverage;\\n        uint32 openCVIValue;\\n        uint32 creationTimestamp;\\n        uint32 originalCreationTimestamp;\\n    }\\n\\n    event Deposit(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event Withdraw(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event OpenPosition(address indexed account, uint256 tokenAmount, uint8 leverage, uint256 feeAmount, uint256 positionUnitsAmount, uint256 cviValue);\\n    event ClosePosition(address indexed account, uint256 tokenAmount, uint256 feeAmount, uint256 positionUnitsAmount, uint8 leverage, uint256 cviValue);\\n    event LiquidatePosition(address indexed positionAddress, uint256 currentPositionBalance, bool isBalancePositive, uint256 positionUnitsAmount);\\n\\n    function deposit(uint256 tokenAmount, uint256 minLPTokenAmount) external returns (uint256 lpTokenAmount);\\n    function withdraw(uint256 tokenAmount, uint256 maxLPTokenBurnAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n    function withdrawLPTokens(uint256 lpTokenAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n\\n    function increaseSharedPool(uint256 tokenAmount) external;\\n\\n    function openPositionWithoutFee(uint168 tokenAmount, uint32 maxCVI, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function openPosition(uint168 tokenAmount, uint32 maxCVI, uint16 maxBuyingPremiumFeePercentage, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function closePositionWithoutFee(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n    function closePosition(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function liquidatePositions(address[] calldata positionOwners) external returns (uint256 finderFeeAmount);\\n\\n    function setAddressSpecificParameters(address holderAddress, bool shouldLockPosition, bool noPremiumFeeAllowed, bool increaseSharedPoolAllowed, bool isLiquidityProvider) external;\\n\\n    function setRevertLockedTransfers(bool revertLockedTransfers) external;\\n\\n    function setSubContracts(IFeesCollector newCollector, ICVIOracle newOracle, IRewardsCollector newRewards, ILiquidation newLiquidation, address _newStakingContractAddress) external;\\n    function setFeesCalculator(IFeesCalculator newCalculator) external;\\n\\n    function setLatestOracleRoundId(uint80 newOracleRoundId) external;\\n    function setMaxTimeAllowedAfterLatestRound(uint32 newMaxTimeAllowedAfterLatestRound) external;\\n\\n    function setLockupPeriods(uint256 newLPLockupPeriod, uint256 newBuyersLockupPeriod) external;\\n\\n    function setEmergencyParameters(bool newEmergencyWithdrawAllowed, bool newCanPurgeSnapshots) external;\\n\\n    function setMaxAllowedLeverage(uint8 newMaxAllowedLeverage) external;\\n\\n    function calculatePositionBalance(address positionAddress) external view returns (uint256 currentPositionBalance, bool isPositive, uint168 positionUnitsAmount, uint8 leverage, uint256 fundingFees, uint256 marginDebt);\\n    function calculatePositionPendingFees(address positionAddress, uint168 positionUnitsAmount) external view returns (uint256 pendingFees);\\n\\n    function totalBalance(bool _withAddendum) external view returns (uint256 balance);\\n\\n    function calculateLatestTurbulenceIndicatorPercent() external view returns (uint16);\\n\\n    function cviOracle() external view returns (ICVIOracle);\\n    function feesCalculator() external view returns (IFeesCalculator);\\n\\n    function PRECISION_DECIMALS() external view returns (uint256);\\n\\n    function totalPositionUnitsAmount() external view returns (uint256);\\n    function totalLeveragedTokensAmount() external view returns (uint256);\\n    function totalFundingFeesAmount() external view returns (uint256);\\n    function latestFundingFees() external view returns (uint256);\\n\\n    function positions(address positionAddress) external view returns (uint168 positionUnitsAmount, uint8 leverage, uint32 openCVIValue, uint32 creationTimestamp, uint32 originalCreationTimestamp);\\n    function buyersLockupPeriod() external view returns (uint256);\\n    function maxCVIValue() external view returns (uint32);\\n}\\n\",\"keccak256\":\"0x11f55f686514975c2dd5adf87856f8df5f85b015621f01e1528addb6b7194686\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IVolatilityToken.sol\\\";\\n\\ninterface IRequestFeesCalculator {\\n    function calculateTimePenaltyFee(IVolatilityToken.Request calldata request) external view returns (uint16 feePercentage);\\n    function calculateTimeDelayFee(uint256 timeDelay) external view returns (uint16 feePercentage);\\n    function calculateFindersFee(uint256 tokensLeftAmount) external view returns (uint256 findersFeeAmount);\\n    function calculateKeepersFee(uint256 tokensAmount) external view returns (uint256 keepersFeeAmount);\\n\\n    function isLiquidable(IVolatilityToken.Request calldata request) external view returns (bool liquidable);\\n\\n    function minWaitTime() external view returns (uint32);\\n\\n    function setTimeWindow(uint32 minTimeWindow, uint32 maxTimeWindow) external;\\n    function setTimeDelayFeesParameters(uint16 minTimeDelayFeePercent, uint16 maxTimeDelayFeePercent) external;\\n    function setMinWaitTime(uint32 newMinWaitTime) external;\\n    function setTimePenaltyFeeParameters(uint16 beforeTargetTimeMaxPenaltyFeePercent, uint32 afterTargetMidTime, uint16 afterTargetMidTimePenaltyFeePercent, uint32 afterTargetMaxTime, uint16 afterTargetMaxTimePenaltyFeePercent) external;\\n    function setFindersFee(uint16 findersFeePercent) external;\\n    function setKeepersFeePercent(uint16 keepersFeePercent) external;\\n    function setKeepersFeeMax(uint256 keepersFeeMax) external;\\n\\n    function getMaxFees() external view returns (uint16 maxFeesPercent);\\n}\\n\",\"keccak256\":\"0xb516083aa9063482c61c12f38b960f017205f2611358dcab31c1197208841611\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IRequestManager {\\n\\n\\tfunction nextRequestId() external view returns (uint256);\\n    function minRequestId() external view returns (uint256);\\n    function maxMinRequestIncrements() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4271e6200e0675ca19c931cd82dc9243a01d88bc20a4352effb1d66be761b94b\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRewardsCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IRewardsCollector {\\n\\tfunction reward(address account, uint256 positionUnits, uint8 leverage) external;\\n}\\n\",\"keccak256\":\"0xaae3f1399202cccfb2e7302f69868a1f9adfbc53c968668e79201692c5724ca5\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVaultInfo.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IThetaVaultInfo {\\n    function totalVaultLeveragedAmount() external view returns (uint256);\\n    function vaultPositionUnits() external view returns (uint256);\\n    function extraLiqidityPercentage() external view returns (uint16);\\n    function minDexPercentageAllowed() external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xce2b14eb4cfcf69d7fe194658560dd77ee0f37c913eefa8d60a2d09bdd7683f6\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IVolatilityToken.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IPlatform.sol\\\";\\nimport \\\"./IRequestFeesCalculator.sol\\\";\\nimport \\\"./ICVIOracle.sol\\\";\\n\\ninterface IVolatilityToken {\\n\\n    struct Request {\\n        uint8 requestType; // 1 => mint, 2 => burn\\n        uint168 tokenAmount;\\n        uint16 timeDelayRequestFeesPercent;\\n        uint16 maxRequestFeesPercent;\\n        address owner;\\n        uint32 requestTimestamp;\\n        uint32 targetTimestamp;\\n        bool useKeepers;\\n        uint16 maxBuyingPremiumFeePercentage;\\n    }\\n\\n    event SubmitRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 tokenAmount, uint256 submitFeesAmount, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n    event FulfillRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 fulfillFeesAmount, bool isAborted, bool useKeepers, bool keepersCalled, address indexed fulfiller, uint32 fulfillTimestamp);\\n    event LiquidateRequest(uint256 requestId, uint8 requestType, address indexed account, address indexed liquidator, uint256 findersFeeAmount, bool useKeepers, uint32 liquidateTimestamp);\\n    event Mint(uint256 requestId, address indexed account, uint256 tokenAmount, uint256 positionedTokenAmount, uint256 mintedTokens, uint256 openPositionFee, uint256 buyingPremiumFee);\\n    event Burn(uint256 requestId, address indexed account, uint256 tokenAmountBeforeFees, uint256 tokenAmount, uint256 burnedTokens, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function rebaseCVI() external;\\n\\n    function submitMintRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersMintRequest(uint168 tokenAmount, uint32 timeDelay, uint16 maxBuyingPremiumFeePercentage) external returns (uint256 requestId);\\n    function submitBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n\\n    function fulfillMintRequest(uint256 requestId, uint16 maxBuyingPremiumFeePercentage, bool keepersCalled) external returns (uint256 tokensMinted, bool success);\\n    function fulfillBurnRequest(uint256 requestId, bool keepersCalled) external returns (uint256 tokensBurned);\\n\\n    function mintTokens(uint168 tokenAmount) external returns (uint256 mintedTokens);\\n    function burnTokens(uint168 burnAmount) external returns (uint256 tokenAmount);\\n\\n    function liquidateRequest(uint256 requestId) external returns (uint256 findersFeeAmount);\\n\\n    function setMinter(address minter) external;\\n    function setPlatform(IPlatform newPlatform) external;\\n    function setFeesCalculator(IFeesCalculator newFeesCalculator) external;\\n    function setFeesCollector(IFeesCollector newCollector) external;\\n    function setRequestFeesCalculator(IRequestFeesCalculator newRequestFeesCalculator) external;\\n    function setCVIOracle(ICVIOracle newCVIOracle) external;\\n    function setDeviationParameters(uint16 newDeviationPercentagePerSingleRebaseLag, uint16 newMinDeviationPercentage, uint16 newMaxDeviationPercentage) external;\\n    function setVerifyTotalRequestsAmount(bool verifyTotalRequestsAmount) external;\\n    function setMaxTotalRequestsAmount(uint256 maxTotalRequestsAmount) external;\\n    function setCappedRebase(bool newCappedRebase) external;\\n\\n    function setMinRequestId(uint256 newMinRequestId) external;\\n    function setMaxMinRequestIncrements(uint256 newMaxMinRequestIncrements) external;\\n\\n    function setFulfiller(address fulfiller) external;\\n\\n    function setKeepersFeeVaultAddress(address newKeepersFeeVaultAddress) external;\\n\\n    function setMinKeepersAmounts(uint256 newMinKeepersMintAmount, uint256 newMinKeepersBurnAmount) external;\\n\\n    function platform() external view returns (IPlatform);\\n    function requestFeesCalculator() external view returns (IRequestFeesCalculator);\\n    function leverage() external view returns (uint8);\\n    function initialTokenToLPTokenRate() external view returns (uint256);\\n\\n    function requests(uint256 requestId) external view returns (uint8 requestType, uint168 tokenAmount, uint16 timeDelayRequestFeesPercent, uint16 maxRequestFeesPercent,\\n        address owner, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n}\\n\",\"keccak256\":\"0x9b195f997265f6401224845c81cba2a3ac6f2e4f2bf65d8be5027ac1ee3fa5b4\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xb71b875e7f1b8ad082eb6ff83bca4bfa7d050476cc98fd39295826b654edfb46\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/volatility-token/VolatilityTokenContracts.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport '@coti-cvi/contracts-cvi/contracts/VolatilityToken.sol';\\n\\ncontract CVIUSDCVolatilityToken is VolatilityToken {\\n  constructor() VolatilityToken() {}\\n}\\n\\ncontract CVIUSDCVolatilityToken2X is VolatilityToken {\\n  constructor() VolatilityToken() {}\\n}\\n\",\"keccak256\":\"0x921d9d98a4056429bada69f23158227b4798bb7ebd6dafd17f983acf086ffa5d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
      "bytecode": "0x608060405234801561001057600080fd5b5061545f806100206000396000f3fe608060405234801561001057600080fd5b506004361061048b5760003560e01c806376b27f3311610262578063b87f187e11610151578063e57a67ac116100ce578063f4b8602311610092578063f4b8602314610acf578063f780d9bc14610ae2578063f7b3af7414610af7578063fc0c546a14610b0a578063fca3b5aa14610b1d578063fe4fbe1914610b3057600080fd5b8063e57a67ac14610a7a578063ea35761014610a8d578063ec27050714610aa0578063ed3437f814610ab3578063f2fde38b14610abc57600080fd5b8063d0a9278111610115578063d0a92781146109eb578063d4a56af114610a13578063dd62ed3e14610a26578063e46adf6214610a5f578063e530413b14610a7257600080fd5b8063b87f187e14610997578063bef7b1d0146109aa578063c43a51b6146109bd578063c98ece90146109d0578063cf6caff3146109e357600080fd5b806397f79e92116101df578063a5cfa15c116101a3578063a5cfa15c1461094d578063a9059cbb14610956578063a9ae12b214610969578063b334ef631461097c578063b6f738d51461098f57600080fd5b806397f79e92146108f25780639c5bb73a146109055780639cf160f6146109185780639d7a32bb1461092b578063a457c2d71461093a57600080fd5b80638da5cb5b116102265780638da5cb5b146108b45780638eb50a38146108c55780638f16d787146108ce57806395d89b41146108e157806397d63f93146108e957600080fd5b806376b27f331461078c5780638094d8831461079557806380b4ec9f1461079e57806381d12c58146107b1578063832d19d8146108a157600080fd5b80633af9e6691161037e57806361944abf116102fb5780636c715641116102bf5780636c715641146107385780636d7277551461074b5780636f7d78281461075e57806370a0823114610771578063715018a61461078457600080fd5b806361944abf146106e25780636945c5ea146106f55780636a84a985146107085780636a9d1119146107115780636c39f4eb1461072457600080fd5b80634c255c97116103425780634c255c971461068a578063526ec4c4146106a65780635a446215146106ba57806360acfdcb146106cd57806360ebfee6146106d657600080fd5b80633af9e66914610630578063419dc5611461065957806341be99741461066257806347d8ca801461066f5780634bde38c81461067757600080fd5b80632900eed21161040c57806335a03bfa116103d057806335a03bfa146105d357806335b86d96146105e6578063373071f2146105f75780633839bdd01461060a578063395093511461061d57600080fd5b80632900eed2146105785780632a093cfc1461058b5780632c86d98e1461059e578063313ce567146105bd578063340e4fd5146105ca57600080fd5b806311fd8a831161045357806311fd8a831461052157806318160ddd146105345780631a8dd8f71461053d5780631c70ca291461055257806323b872dd1461056557600080fd5b806303b70a161461049057806306fdde03146104b657806307546172146104cb578063095ea7b3146104f657806311d3e6c414610519575b600080fd5b6104a361049e366004614c6a565b610b43565b6040519081526020015b60405180910390f35b6104be610b9b565b6040516104ad9190614f61565b60b3546104de906001600160a01b031681565b6040516001600160a01b0390911681526020016104ad565b6105096105043660046149a9565b610c29565b60405190151581526020016104ad565b6104a3610c96565b609d546104de906001600160a01b031681565b6104a3609a5481565b61055061054b366004614915565b610cad565b005b6104a3610560366004614d68565b610cf9565b610509610573366004614969565b610d1e565b610550610586366004614b4e565b610e7b565b610550610599366004614d68565b610ef8565b60a0546105ab9060ff1681565b60405160ff90911681526020016104ad565b6099546105ab9060ff1681565b6104a360aa5481565b60a5546104de906001600160a01b031681565b6104a369d3c21bcecceda100000081565b610550610605366004614915565b610f27565b60b0546104de906001600160a01b031681565b61050961062b3660046149a9565b610fef565b6104a361063e366004614915565b6001600160a01b03166000908152609e602052604090205490565b6104a360b25481565b60ac546105099060ff1681565b6105ab600181565b60a3546104de906001600160a01b031681565b61069361271081565b60405161ffff90911681526020016104ad565b60a0546106939062010000900461ffff1681565b6105506106c8366004614aed565b611075565b6104a360b15481565b6104a36402540be40081565b6105506106f03660046149d4565b6110cb565b610550610703366004614915565b611108565b6104a360a85481565b60a6546104de906001600160a01b031681565b60ac5461050990600160281b900460ff1681565b610550610746366004614915565b6111cb565b6104a3610759366004614d98565b611217565b60a7546104de906001600160a01b031681565b6104a361077f366004614915565b6112fe565b610550611320565b6104a360ad5481565b6104a360ab5481565b6104a36107ac366004614d68565b611356565b6108376107bf366004614d68565b60a9602052600090815260409020805460019091015460ff808316926001600160a81b036101008204169261ffff600160b01b8304811693600160c01b938490048216936001600160a01b0384169363ffffffff600160a01b82048116949282041692600160e01b82041691600160e81b9091041689565b6040805160ff909a168a526001600160a81b0390981660208a015261ffff9687169789019790975293851660608801526001600160a01b03909216608087015263ffffffff90811660a08701521660c0850152151560e084015216610100820152610120016104ad565b6105506108af366004614d68565b611549565b6065546001600160a01b03166104de565b6104a360a15481565b6105506108dc366004614d68565b611578565b6104be6115a7565b6104a3609c5481565b6104a3610900366004614c3d565b6115b4565b6104a3610913366004614c3d565b6115c5565b60a4546104de906001600160a01b031681565b6104a3670de0b6b3a764000081565b6105096109483660046149a9565b6115df565b6104a360ae5481565b6105096109643660046149a9565b6116c6565b610550610977366004614d39565b611797565b61055061098a366004614915565b61180b565b6104a3606481565b6105506109a53660046149d4565b611857565b6104a36109b8366004614c3d565b6118a1565b6104a36109cb366004614d68565b6118de565b6105506109de366004614915565b6118f8565b610550611944565b6109fe6109f9366004614e24565b611cde565b604080519283529015156020830152016104ad565b6104a3610a21366004614bc3565b611dcc565b6104a3610a34366004614931565b6001600160a01b039182166000908152609f6020908152604080832093909416825291909152205490565b610550610a6d366004614915565b611e20565b6105ab600281565b610550610a88366004614915565b611e6c565b610550610a9b366004614a0c565b611eb8565b6104a3610aae366004614bc3565b612044565b6104a3609b5481565b610550610aca366004614915565b612093565b60af546104de906001600160a01b031681565b60ac54610693906301000000900461ffff1681565b610550610b05366004614e5a565b61212b565b60a2546104de906001600160a01b031681565b610550610b2b366004614915565b612160565b60ac5461069390610100900461ffff1681565b6000610b4e846121ac565b60b154846001600160a81b03161015610b825760405162461bcd60e51b8152600401610b79906150b2565b60405180910390fd5b610b9160018585600186612221565b90505b9392505050565b60978054610ba890615308565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd490615308565b8015610c215780601f10610bf657610100808354040283529160200191610c21565b820191906000526020600020905b815481529060010190602001808311610c0457829003601f168201915b505050505081565b336000818152609f602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610c849086815260200190565b60405180910390a35060015b92915050565b6000609c54600019610ca8919061523b565b905090565b6065546001600160a01b03163314610cd75760405162461bcd60e51b8152600401610b7990615032565b60a780546001600160a01b0319166001600160a01b0392909216919091179055565b600069d3c21bcecceda1000000609b5483610d14919061527e565b610c90919061523b565b6000836001600160a01b038116610d475760405162461bcd60e51b8152600401610b7990614fbe565b836001600160a01b038116610d6e5760405162461bcd60e51b8152600401610b7990614fbe565b6001600160a01b0386166000908152609f60209081526040808320338452909152902054610d9d9085906152c5565b6001600160a01b0387166000908152609f60209081526040808320338452909152812091909155610dcd856118de565b6001600160a01b0388166000908152609e6020526040902054909150610df49082906152c5565b6001600160a01b038089166000908152609e60205260408082209390935590881681522054610e249082906151fd565b6001600160a01b038088166000818152609e6020526040908190209390935591519089169060008051602061540a83398151915290610e669089815260200190565b60405180910390a35060019695505050505050565b600054610100900460ff16610ea25760405162461bcd60e51b8152600401610b7990615067565b610eaa61277c565b8251610ebd9060979060208601906147df565b508151610ed19060989060208501906147df565b506099805460ff191660ff92909216919091179055505069d3c21bcecceda1000000609b55565b6065546001600160a01b03163314610f225760405162461bcd60e51b8152600401610b7990615032565b60ab55565b6065546001600160a01b03163314610f515760405162461bcd60e51b8152600401610b7990615032565b60a4546001600160a01b031615801590610f75575060a2546001600160a01b031615155b15610f985760a45460a254610f98916001600160a01b03918216911660006127ab565b60a480546001600160a01b0319166001600160a01b03831690811790915515801590610fce575060a2546001600160a01b031615155b15610fec5760a254610fec906001600160a01b0316826000196127ab565b50565b336000908152609f602090815260408083206001600160a01b038616845290915281205461101e9083906151fd565b336000818152609f602090815260408083206001600160a01b038916808552908352928190208590555193845290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259101610c84565b6065546001600160a01b0316331461109f5760405162461bcd60e51b8152600401610b7990615032565b81516110b29060979060208501906147df565b5080516110c69060989060208401906147df565b505050565b6065546001600160a01b031633146110f55760405162461bcd60e51b8152600401610b7990615032565b60ac805460ff1916911515919091179055565b6065546001600160a01b031633146111325760405162461bcd60e51b8152600401610b7990615032565b60a3546001600160a01b031615801590611156575060a2546001600160a01b031615155b1561117a5760a35460a25461117a916001600160a01b0391821691166000196127ab565b60a380546001600160a01b0319166001600160a01b03831690811790915515801590610fce575060a2546001600160a01b031615610fec5760a254610fec906001600160a01b0316826000196127ab565b6065546001600160a01b031633146111f55760405162461bcd60e51b8152600401610b7990615032565b60a580546001600160a01b0319166001600160a01b0392909216919091179055565b6000811580611230575060af546001600160a01b031633145b61123957600080fd5b600083815260a96020908152604091829020825161012081018452815460ff80821683526101008083046001600160a81b031695840195909552600160b01b820461ffff90811696840196909652600160c01b91829004861660608401526001909301546001600160a01b0381166080840152600160a01b810463ffffffff90811660a085015291810490911660c0830152600160e01b8104909216151560e0820152600160e81b909104909216908201526112f6848285612902565b949350505050565b6001600160a01b0381166000908152609e6020526040812054610c9090610cf9565b6065546001600160a01b0316331461134a5760405162461bcd60e51b8152600401610b7990615032565b6113546000612a16565b565b60006002600154141561137b5760405162461bcd60e51b8152600401610b79906150dd565b60026001908155600083815260a96020908152604091829020825161012081018452815460ff8082168084526101008084046001600160a81b031696850196909652600160b01b830461ffff90811697850197909752600160c01b928390048716606085015293909601546001600160a01b0381166080840152600160a01b810463ffffffff90811660a085015291810490911660c0830152600160e01b8104909516151560e0820152600160e81b909404909216908301526114775760405162461bcd60e51b815260206004820152601460248201527314995c5d595cdd081a59081b9bdd08199bdd5b9960621b6044820152606401610b79565b60a6546040516315b3b87360e01b81526001600160a01b03909116906315b3b873906114a7908490600401615114565b60206040518083038186803b1580156114bf57600080fd5b505afa1580156114d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f791906149f0565b6115345760405162461bcd60e51b815260206004820152600e60248201526d4e6f74206c697175696461626c6560901b6044820152606401610b79565b61153e8382612a68565b600180559392505050565b6065546001600160a01b031633146115735760405162461bcd60e51b8152600401610b7990615032565b60ad55565b6065546001600160a01b031633146115a25760405162461bcd60e51b8152600401610b7990615032565b60ae55565b60988054610ba890615308565b6000610b9460028484600080612221565b60006115d0836121ac565b610b9460018484600080612221565b336000908152609f602090815260408083206001600160a01b038616845290915281205480831061163357336000908152609f602090815260408083206001600160a01b0388168452909152812055611662565b61163d83826152c5565b336000908152609f602090815260408083206001600160a01b03891684529091529020555b336000818152609f602090815260408083206001600160a01b038916808552908352928190205490519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b6000826001600160a01b0381166116ef5760405162461bcd60e51b8152600401610b7990614fbe565b60006116fa846118de565b336000908152609e60205260409020549091506117189082906152c5565b336000908152609e6020526040808220929092556001600160a01b038716815220546117459082906151fd565b6001600160a01b0386166000818152609e602052604090819020929092559051339060008051602061540a833981519152906117849088815260200190565b60405180910390a3506001949350505050565b6065546001600160a01b031633146117c15760405162461bcd60e51b8152600401610b7990615032565b60ac805460a0805463ffff000019166201000061ffff9687160217905564ffffffff0019166101009484169490940264ffff00000019169390931763010000009190921602179055565b6065546001600160a01b031633146118355760405162461bcd60e51b8152600401610b7990615032565b60a680546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146118815760405162461bcd60e51b8152600401610b7990615032565b60ac8054911515600160281b0265ff000000000019909216919091179055565b600060b254836001600160a81b031610156118ce5760405162461bcd60e51b8152600401610b79906150b2565b610b946002848460016000612221565b609b54600090610d1469d3c21bcecceda10000008461527e565b6065546001600160a01b031633146119225760405162461bcd60e51b8152600401610b7990615032565b60af80546001600160a01b0319166001600160a01b0392909216919091179055565b60a3546040516329b2a60b60e21b815230600482015260009182916001600160a01b039091169063a6ca982c9060240160c06040518083038186803b15801561198c57600080fd5b505afa1580156119a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c49190614dbc565b5050505091509150806119e95760405162461bcd60e51b8152600401610b7990614f94565b6000609a546402540be40060a15485611a02919061527e565b611a0c919061527e565b611a16919061523b565b9050600060a760009054906101000a90046001600160a01b03166001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b158015611a6857600080fd5b505afa158015611a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa09190614ec4565b505063ffffffff16905060006064611abd6402540be4008461527e565b611ac7919061523b565b9050828111611b185760405162461bcd60e51b815260206004820152601a60248201527f506f7369746976652072656261736520646973616c6c6f7765640000000000006044820152606401610b79565b6000611b2484836152c5565b60ac54909150600160281b900460ff161580611b64575060a05461271090611b569062010000900461ffff168461527e565b611b60919061523b565b8110155b611ba75760405162461bcd60e51b81526020600482015260146024820152732737ba1032b737bab3b4103232bb34b0ba34b7b760611b6044820152606401610b79565b60ac54600160281b900460ff161580611be5575060ac5461271090611bd7906301000000900461ffff168461527e565b611be1919061523b565b8111155b611c255760405162461bcd60e51b8152602060048201526011602482015270446576696174696f6e20746f6f2062696760781b6044820152606401610b79565b60ac54600090600160281b900460ff16611c40576001611c83565b60ac54611c5690610100900461ffff168461527e565b6001611c646127108561527e565b611c6e91906152c5565b611c78919061523b565b611c839060016151fd565b90506001811115611ca757611c98818361523b565b9150611ca482866151fd565b92505b600083611cbc84670de0b6b3a764000061527e565b611cc6919061523b565b9050611cd3816000612d86565b505050505050505050565b600080821580611cf8575060af546001600160a01b031633145b611d0157600080fd5b600085815260a96020908152604091829020825161012081018452815460ff80821683526101008083046001600160a81b031695840195909552600160b01b820461ffff90811696840196909652600160c01b91829004861660608401526001909301546001600160a01b0381166080840152600160a01b810463ffffffff90811660a085015291810490911660c0830152600160e01b8104909216151560e0820152600160e81b90910490921690820152611dbf86828787612f0d565b9250925050935093915050565b60b3546000906001600160a01b03163314611de657600080fd5b60a254611e07906001600160a01b031633306001600160a81b038616613108565b611e1960003384612710600080613146565b5092915050565b6065546001600160a01b03163314611e4a5760405162461bcd60e51b8152600401610b7990615032565b609d80546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b03163314611e965760405162461bcd60e51b8152600401610b7990615032565b60b080546001600160a01b0319166001600160a01b0392909216919091179055565b6000611ec460016133d0565b90508015611edc576000805461ff0019166101001790555b60a0805463ffff000019166264000017905560ac805465ffffffffff0019166501138803e800179055600160a881905560ad55601e60ae55611f208a8a6012610e7b565b611f2861345d565b60a280546001600160a01b03199081166001600160a01b038e811691821790935560a3805483168a851617905560a48054831689851617905560a58054831688851617905560a68054831687851617905560a7805490921692851692909217905560a188905560a0805460ff1990811660ff8c1617909155600060aa5564174876e80060ab5560ac8054909116600117905515611ff15760a254611fd8906001600160a01b0316876000196127ab565b60a254611ff1906001600160a01b0316866000196127ab565b8015612037576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b60b3546000906001600160a01b0316331461205e57600080fd5b6120813330612078610560866001600160a81b03166118de565b30929190613108565b611e196000338460008060008061348c565b6065546001600160a01b031633146120bd5760405162461bcd60e51b8152600401610b7990615032565b6001600160a01b0381166121225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b79565b610fec81612a16565b6065546001600160a01b031633146121555760405162461bcd60e51b8152600401610b7990615032565b60b19190915560b255565b6065546001600160a01b0316331461218a5760405162461bcd60e51b8152600401610b7990615032565b60b380546001600160a01b0319166001600160a01b0392909216919091179055565b60ac5460ff1615806121d5575060ab5460aa546121d2906001600160a81b0384166151fd565b11155b610fec5760405162461bcd60e51b815260206004820152601e60248201527f546f74616c20726571756573747320616d6f756e7420657863656564656400006044820152606401610b79565b6000600260015414156122465760405162461bcd60e51b8152600401610b79906150dd565b60026001556001600160a81b03851661225e57600080fd5b6040805160a0810182526000602082018190529181018290526060810182905260808101919091526001600160a81b0386168152600260ff881614156122d55760006122b2876001600160a81b03166118de565b905080816001600160a81b0316146122c957600080fd5b6001600160a81b031681525b60a65460405163051a497b60e01b815263ffffffff871660048201526001600160a01b039091169063051a497b9060240160206040518083038186803b15801561231e57600080fd5b505afa158015612332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123569190614d1d565b61ffff1660208083019190915260a6546040805162ef88df60e71b815290516001600160a01b03909216926377c46f8092600480840193829003018186803b1580156123a157600080fd5b505afa1580156123b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d99190614d1d565b61ffff908116604083015260208201518251612710926123fa92169061524f565b6124049190615215565b6001600160a81b03166060820152604081015181516127109161242d9161ffff9091169061524f565b6124379190615215565b6001600160a81b0316608082015260a85491506124558260016151fd565b60a855600061246a63ffffffff8716426151fd565b90506040518061012001604052808960ff16815260200183600001516001600160a81b03168152602001836020015161ffff168152602001836040015161ffff168152602001336001600160a01b031681526020014263ffffffff1681526020018263ffffffff16815260200186151581526020018561ffff1681525060a9600085815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a8154816001600160a81b0302191690836001600160a81b0316021790555060408201518160000160166101000a81548161ffff021916908361ffff16021790555060608201518160000160186101000a81548161ffff021916908361ffff16021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160010160146101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160010160186101000a81548163ffffffff021916908363ffffffff16021790555060e082015181600101601c6101000a81548160ff02191690831515021790555061010082015181600101601d6101000a81548161ffff021916908361ffff160217905550905050600260ff168860ff161461267957866001600160a81b031660aa5461267591906151fd565b60aa555b6126cc88866126bd5760ff8a166002146126a657836080015184606001516126a191906151fd565b6136e4565b6126a18460800151856060015161056091906151fd565b886001600160a81b03166136e4565b337fa670c85a56568fc022a5849f397274f0e963655cd9c383657b23f8617c4a3b88848a8a60ff8216600214612706578660600151612713565b6127138760600151610cf9565b6040805194855260ff90931660208501526001600160a81b0390911691830191909152606082015263ffffffff4281166080830152841660a082015287151560c082015261ffff871660e08201526101000160405180910390a250506001805595945050505050565b600054610100900460ff166127a35760405162461bcd60e51b8152600401610b7990615067565b611354613740565b8015806128345750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156127fa57600080fd5b505afa15801561280e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128329190614d80565b155b61289f5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610b79565b6040516001600160a01b0383166024820152604481018290526110c690849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613770565b6000600260015414156129275760405162461bcd60e51b8152600401610b79906150dd565b6002600181905550600061293e8585600286613842565b90508060800151612a0a5761295285613cc4565b600061298186866080015184600001518860400151866060015189801561297a57508a60e001515b600161348c565b608087810151885160e0808b0151604080518e815260ff909416602085015283018690526000606084015215159382019390935288151560a08201524263ffffffff1660c082015293965091935033926001600160a01b03909216917feaa5448472d06a833e3f8fea197d31076cb3c165c25c1a217def0eabbbd76f88910160405180910390a3505b50600180559392505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080612a7d83600001518460200151613d87565b60e08401519091506001600160a81b03821690612afb57604084015160009061271090612aae9061ffff168561524f565b612ab89190615215565b9050600061271061ffff16866060015161ffff1685612ad7919061524f565b612ae19190615215565b9050612aed81836151d2565b6001600160a81b0316925050505b835160ff1660021415612b1e57612b13816001613dc6565b50909150612b309050565b612b30826001600160a81b031661403d565b8360e00151612bba5760a654604051637693aa6160e01b8152600481018390526001600160a01b0390911690637693aa619060240160206040518083038186803b158015612b7d57600080fd5b505afa158015612b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bb59190614d80565b612c36565b60a65460405163591b36f760e01b8152600481018390526001600160a01b039091169063591b36f79060240160206040518083038186803b158015612bfe57600080fd5b505afa158015612c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c369190614d80565b9250612c4185613cc4565b8360e0015115612c76576080840151612c7190612c5e85846152c5565b60a2546001600160a01b03169190614063565b612cf4565b60a4546001600160a01b0316638b0f154d612c9185846152c5565b60a25460405160e084901b6001600160e01b031916815260048101929092526001600160a01b03166024820152604401600060405180830381600087803b158015612cdb57600080fd5b505af1158015612cef573d6000803e3d6000fd5b505050505b60a254612d0b906001600160a01b03163385614063565b608084810151855160e0870151604080518a815260ff909316602084015282018790521515606082015263ffffffff42169281019290925233916001600160a01b03909116907fb0ed9dd07e136565ec73e51759602bc1c92e75cf86ceabcf197b2a8784c094db9060a00160405180910390a3505092915050565b609d546000906001600160a01b03163314612dd15760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b6044820152606401610b79565b82612e2257609b54604080514281526020810183905280820192909252517fc6642d24d84e7f3d36ca39f5cce10e75639d9b158d5193aa350e2f900653e4c09181900360600190a150609a54610c90565b609b5482612e5c57670de0b6b3a7640000612e3d85826152c5565b609b54612e4a919061527e565b612e54919061523b565b609b55612eb1565b6000670de0b6b3a7640000612e7186826151fd565b609b54612e7e919061527e565b612e88919061523b565b9050612e92610c96565b811015612ea357609b819055612eaf565b612eab610c96565b609b555b505b612ebc609c54610cf9565b609a55609b54604080514281526020810184905280820192909252517fc6642d24d84e7f3d36ca39f5cce10e75639d9b158d5193aa350e2f900653e4c09181900360600190a15050609a5492915050565b6000806000612f1f8787600187613842565b9050806080015115612f3457600191506130fe565b612f588787608001518360000151888a60e001518015612f515750885b6001613146565b909350915081156130fe57612f7986602001516001600160a81b031661403d565b612f8287613cc4565b60a454602082015160408301516001600160a01b0390921691638b0f154d91612faa916151d2565b60a25460405160e084901b6001600160e01b03191681526001600160a81b0390921660048301526001600160a01b03166024820152604401600060405180830381600087803b158015612ffc57600080fd5b505af1158015613010573d6000803e3d6000fd5b505050506101008101516001600160a81b0316156130555760b05461010082015160a254613055926001600160a01b03918216929116906001600160a81b0316614063565b336001600160a01b031686608001516001600160a01b03167feaa5448472d06a833e3f8fea197d31076cb3c165c25c1a217def0eabbbd76f8889896000015185610100015186602001516130a991906151d2565b60e08c8101516040805195865260ff90941660208601526001600160a81b0390921692840192909252600060608401521515608083015288151560a083015263ffffffff421660c08301520160405180910390a35b5094509492505050565b6040516001600160a01b03808516602483015283166044820152606481018290526131409085906323b872dd60e01b906084016128cb565b50505050565b60a35460405163055f575160e41b81523060048201526000918291829160019183916001600160a01b0316906355f575109060240160a06040518083038186803b15801561319357600080fd5b505afa1580156131a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131cb9190614ca9565b505050506001600160a81b03169050806000146132685760a3546040516329b2a60b60e21b81523060048201526001600160a01b039091169063a6ca982c9060240160c06040518083038186803b15801561322557600080fd5b505afa158015613239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061325d9190614dbc565b509396509194505050505b816132855760405162461bcd60e51b8152600401610b7990614f94565b5050609a54600080808061329b8c8c8c8c614093565b94506001600160a81b031694506001600160a81b031694506001600160a81b031694505080156133bf576000851180156132d55750600086115b156132f657856132e5868661527e565b6132ef919061523b565b9750613306565b60a154613303908561527e565b97505b604080518f81526001600160a81b038e166020820152908101859052606081018990526080810184905260a081018390526001600160a01b038e16907f1ea03bd5ed908c036eb222c88975259903b8a291fb411a82ae9c8205d6c7d7ac9060c00160405180910390a2600088116133b05760405162461bcd60e51b815260206004820152600e60248201526d546f6f2066657720746f6b656e7360901b6044820152606401610b79565b6133ba8d89614463565b600196505b505050505050965096945050505050565b60008054610100900460ff1615613417578160ff1660011480156133f35750303b155b61340f5760405162461bcd60e51b8152600401610b7990614fe4565b506000919050565b60005460ff80841691161061343e5760405162461bcd60e51b8152600401610b7990614fe4565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166134845760405162461bcd60e51b8152600401610b7990615067565b611354614583565b60008060008060006134a78a6001600160a81b031687613dc6565b9194509250905060006127106134c161ffff8c168661527e565b6134cb919061523b565b90506127106134de61ffff8b168661527e565b6134e8919061523b565b9450600088156135715760a65460405163591b36f760e01b8152600481018790526001600160a01b039091169063591b36f79060240160206040518083038186803b15801561353657600080fd5b505afa15801561354a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061356e9190614d80565b90505b808261357d88886152c5565b61358791906152c5565b61359191906152c5565b9650600061359f83886151fd565b11156136235760a4546001600160a01b0316638b0f154d6135c084896151fd565b60a25460405160e084901b6001600160e01b031916815260048101929092526001600160a01b03166024820152604401600060405180830381600087803b15801561360a57600080fd5b505af115801561361e573d6000803e3d6000fd5b505050505b80156136535760b05460a254613646916001600160a01b03918216911683614063565b61365081876151fd565b95505b505060a25461366c906001600160a01b03168c87614063565b604080518d8152602081018590529081018690526001600160a81b038b1660608201526080810183905260a081018290526001600160a01b038c16907f6c4de564b51b3953a8d2eab8336cee66368f4ca65fbc7d31d535368983c1e1819060c00160405180910390a250505097509795505050505050565b60ff82166002141561372857806136fa336112fe565b10156137185760405162461bcd60e51b8152600401610b79906150b2565b61372430338184613108565b5050565b60a254613724906001600160a01b0316333084613108565b600054610100900460ff166137675760405162461bcd60e51b8152600401610b7990615067565b61135433612a16565b60006137c5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166145b09092919063ffffffff16565b8051909150156110c657808060200190518101906137e391906149f0565b6110c65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b79565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915281801561389957508360e001515b806138b0575060808401516001600160a01b031633145b6138b957600080fd5b8260ff16846000015160ff16146139075760405162461bcd60e51b815260206004820152601260248201527157726f6e672072657175657374207479706560701b6044820152606401610b79565b60a6546040516315b3b87360e01b81526001600160a01b03909116906315b3b87390613937908790600401615114565b60206040518083038186803b15801561394f57600080fd5b505afa158015613963573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061398791906149f0565b156139a3576139968585612a68565b50600160808201526112f6565b8115806139ba57508360c0015163ffffffff164210155b613a065760405162461bcd60e51b815260206004820152601760248201527f5461726765742074696d65206e6f7420726561636865640000000000000000006044820152606401610b79565b8360e001518015613a2157508360c0015163ffffffff164210155b613aaa5760a654604051634ab4396560e11b81526001600160a01b039091169063956872ca90613a55908790600401615114565b60206040518083038186803b158015613a6d57600080fd5b505afa158015613a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613aa59190614d1d565b613aad565b60005b61ffff90811660608301526040850151602086015161271092613ad192169061524f565b613adb9190615215565b6001600160a81b03166040820152835160ff1660011415613c18578360e001518015613b045750815b15613ba35760a654602085015160405163591b36f760e01b81526001600160a81b0390911660048201526001600160a01b039091169063591b36f79060240160206040518083038186803b158015613b5b57600080fd5b505afa158015613b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b939190614d80565b6001600160a81b03166101008201525b61271061ffff16816060015161ffff168560200151613bc2919061524f565b613bcc9190615215565b6001600160a81b03166020808301829052610100830151604084015191870151909291613bf89161529d565b613c02919061529d565b613c0c919061529d565b6001600160a81b031681525b8360e00151613c92576000613c77856000015161271061ffff16876060015161ffff168860200151613c4a919061524f565b613c549190615215565b84604001518860200151613c68919061529d565b613c72919061529d565b613d87565b6001600160a81b03169050613c908560000151826136e4565b505b835160ff16600214156112f657613cb184600001518560200151613d87565b6001600160a81b03168152949350505050565b600081815260a96020526040812080546001600160d01b031916815560010180546001600160f81b031916905560ad5490805b60a85483108015613d09575060ae5482105b8015613d505750600083815260a960205260409020600101546001600160a01b03161580613d505750600083815260a96020526040902060010154600160e01b900460ff16155b15613d795781613d5f81615343565b9250508280613d6d90615343565b93505060019050613cf7565b801561314057505060ad5550565b600060ff8316600214613d9b575080610c90565b6000613daf836001600160a81b0316610cf9565b905080816001600160a81b031614610b9457600080fd5b60a3546040516329b2a60b60e21b815230600482015260009182918291829182916001600160a01b03169063a6ca982c9060240160c06040518083038186803b158015613e1257600080fd5b505afa158015613e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e4a9190614dbc565b505050925092505081613e6f5760405162461bcd60e51b8152600401610b7990614f94565b609a54600090613e88896001600160a81b03851661527e565b613e92919061523b565b9050806001600160a81b03168114613eec5760405162461bcd60e51b815260206004820152601760248201527f546f6f206d75636820706f736974696f6e20756e6974730000000000000000006044820152606401610b79565b801561401e5786613f895760a354604051635d357c1960e11b81526001600160a81b0383166004820152600160248201526001600160a01b039091169063ba6af83290604401606060405180830381600087803b158015613f4c57600080fd5b505af1158015613f60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f849190614e7b565b614016565b60a35460405163c657549160e01b81526001600160a81b0383166004820152600160248201526001600160a01b039091169063c657549190604401606060405180830381600087803b158015613fde57600080fd5b505af1158015613ff2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140169190614e7b565b919750955093505b6140333061402e6105608b6118de565b6145bf565b5050509250925092565b60aa5481111561404f57600060aa5550565b8060aa5461405d91906152c5565b60aa5550565b6040516001600160a01b0383166024820152604481018290526110c690849063a9059cbb60e01b906064016128cb565b6000808080600186156142165760a3546040805163d934c20b60e01b8152905160009283926001600160a01b0390911691633c885ff960e21b918e91849163d934c20b916004808301926020929190829003018186803b1580156140f657600080fd5b505afa15801561410a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061412e9190614ea8565b604080516001600160a81b03909316602084015263ffffffff9091169082015261ffff8d1660608201526001608082015260a00160408051601f19818403018152908290526141809291602001614f14565b60408051601f198184030181529082905261419a91614f45565b6000604051808303816000865af19150503d80600081146141d7576040519150601f19603f3d011682016040523d82523d6000602084013e6141dc565b606091505b5091509150811561420a57808060200190518101906141fb9190614bdf565b9299509097509550935061420f565b600092505b5050614458565b851561433c5760a3546040805163d934c20b60e01b815290516001600160a01b039092169163f2217fe4918c91849163d934c20b916004808301926020929190829003018186803b15801561426a57600080fd5b505afa15801561427e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142a29190614ea8565b6040516001600160e01b031960e085901b1681526001600160a81b03909216600483015263ffffffff16602482015261ffff8b16604482015260016064820152608401608060405180830381600087803b1580156142ff57600080fd5b505af1158015614313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143379190614bdf565b61444d565b60a3546040805163d934c20b60e01b815290516001600160a01b03909216916353997f61918c91849163d934c20b916004808301926020929190829003018186803b15801561438a57600080fd5b505afa15801561439e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143c29190614ea8565b6040516001600160e01b031960e085901b1681526001600160a81b03909216600483015263ffffffff16602482015260016044820152606401608060405180830381600087803b15801561441557600080fd5b505af1158015614429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061444d9190614bdf565b929750909550935091505b945094509450945094565b816001600160a01b03811661448a5760405162461bcd60e51b8152600401610b7990614fbe565b81609a5461449891906151fd565b609a5560006144a6836118de565b905080609c546144b691906151fd565b609c556144c1610c96565b609b5411156145125760405162461bcd60e51b815260206004820152601a60248201527f4d6178207363616c696e6720666163746f7220746f6f206c6f770000000000006044820152606401610b79565b6001600160a01b0384166000908152609e60205260409020546145369082906151fd565b6001600160a01b0385166000818152609e602052604080822093909355915190919060008051602061540a833981519152906145759087815260200190565b60405180910390a350505050565b600054610100900460ff166145aa5760405162461bcd60e51b8152600401610b7990615067565b60018055565b6060610b918484600085614675565b816001600160a01b0381166145e65760405162461bcd60e51b8152600401610b7990614fbe565b81609a546145f491906152c5565b609a556000614602836118de565b905080609c5461461291906152c5565b609c556001600160a01b0384166000908152609e60205260409020546146399082906152c5565b6001600160a01b0385166000818152609e602052604080822093909355915160008051602061540a833981519152906145759087815260200190565b6060824710156146d65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610b79565b6001600160a01b0385163b61472d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b79565b600080866001600160a01b031685876040516147499190614f45565b60006040518083038185875af1925050503d8060008114614786576040519150601f19603f3d011682016040523d82523d6000602084013e61478b565b606091505b509150915061479b8282866147a6565b979650505050505050565b606083156147b5575081610b94565b8251156147c55782518084602001fd5b8160405162461bcd60e51b8152600401610b799190614f61565b8280546147eb90615308565b90600052602060002090601f01602090048101928261480d5760008555614853565b82601f1061482657805160ff1916838001178555614853565b82800160010185558215614853579182015b82811115614853578251825591602001919060010190614838565b5061485f929150614863565b5090565b5b8082111561485f5760008155600101614864565b8035613458816153a0565b600082601f830112614893578081fd5b813567ffffffffffffffff808211156148ae576148ae61538a565b604051601f8301601f19908116603f011681019082821181831017156148d6576148d661538a565b816040528381528660208588010111156148ee578485fd5b8360208701602083013792830160200193909352509392505050565b8035613458816153fa565b600060208284031215614926578081fd5b8135610b94816153a0565b60008060408385031215614943578081fd5b823561494e816153a0565b9150602083013561495e816153a0565b809150509250929050565b60008060006060848603121561497d578081fd5b8335614988816153a0565b92506020840135614998816153a0565b929592945050506040919091013590565b600080604083850312156149bb578182fd5b82356149c6816153a0565b946020939093013593505050565b6000602082840312156149e5578081fd5b8135610b94816153b5565b600060208284031215614a01578081fd5b8151610b94816153b5565b6000806000806000806000806000806101408b8d031215614a2b578586fd5b614a348b614878565b995060208b013567ffffffffffffffff80821115614a50578788fd5b614a5c8e838f01614883565b9a5060408d0135915080821115614a71578788fd5b50614a7e8d828e01614883565b985050614a8d60608c0161490a565b965060808b01359550614aa260a08c01614878565b9450614ab060c08c01614878565b9350614abe60e08c01614878565b9250614acd6101008c01614878565b9150614adc6101208c01614878565b90509295989b9194979a5092959850565b60008060408385031215614aff578182fd5b823567ffffffffffffffff80821115614b16578384fd5b614b2286838701614883565b93506020850135915080821115614b37578283fd5b50614b4485828601614883565b9150509250929050565b600080600060608486031215614b62578081fd5b833567ffffffffffffffff80821115614b79578283fd5b614b8587838801614883565b94506020860135915080821115614b9a578283fd5b50614ba786828701614883565b9250506040840135614bb8816153fa565b809150509250925092565b600060208284031215614bd4578081fd5b8135610b94816153d3565b60008060008060808587031215614bf4578182fd5b8451614bff816153d3565b6020860151909450614c10816153d3565b6040860151909350614c21816153d3565b6060860151909250614c32816153d3565b939692955090935050565b60008060408385031215614c4f578182fd5b8235614c5a816153d3565b9150602083013561495e816153e8565b600080600060608486031215614c7e578081fd5b8335614c89816153d3565b92506020840135614c99816153e8565b91506040840135614bb8816153c3565b600080600080600060a08688031215614cc0578283fd5b8551614ccb816153d3565b6020870151909550614cdc816153fa565b6040870151909450614ced816153e8565b6060870151909350614cfe816153e8565b6080870151909250614d0f816153e8565b809150509295509295909350565b600060208284031215614d2e578081fd5b8151610b94816153c3565b600080600060608486031215614d4d578081fd5b8335614d58816153c3565b92506020840135614c99816153c3565b600060208284031215614d79578081fd5b5035919050565b600060208284031215614d91578081fd5b5051919050565b60008060408385031215614daa578182fd5b82359150602083013561495e816153b5565b60008060008060008060c08789031215614dd4578384fd5b865195506020870151614de6816153b5565b6040880151909550614df7816153d3565b6060880151909450614e08816153fa565b809350506080870151915060a087015190509295509295509295565b600080600060608486031215614e38578081fd5b833592506020840135614e4a816153c3565b91506040840135614bb8816153b5565b60008060408385031215614e6c578182fd5b50508035926020909101359150565b600080600060608486031215614e8f578081fd5b8351925060208401519150604084015190509250925092565b600060208284031215614eb9578081fd5b8151610b94816153e8565b600080600060608486031215614ed8578081fd5b8351614ee3816153e8565b602085015190935069ffffffffffffffffffff81168114614f02578182fd5b80925050604084015190509250925092565b6001600160e01b0319831681528151600090614f378160048501602087016152dc565b919091016004019392505050565b60008251614f578184602087016152dc565b9190910192915050565b6020815260008251806020840152614f808160408501602087016152dc565b601f01601f19169190910160400192915050565b60208082526010908201526f4e656761746976652062616c616e636560801b604082015260600190565b6020808252600c908201526b5a65726f206164647265737360a01b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601190820152704e6f7420656e6f75676820746f6b656e7360781b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b815160ff1681526020808301516001600160a81b0316908201526040808301516101208301916151499084018261ffff169052565b50606083015161515f606084018261ffff169052565b50608083015161517a60808401826001600160a01b03169052565b5060a083015161519260a084018263ffffffff169052565b5060c08301516151aa60c084018263ffffffff169052565b5060e08301516151be60e084018215159052565b506101009283015161ffff16919092015290565b60006001600160a81b038281168482168083038211156151f4576151f461535e565b01949350505050565b600082198211156152105761521061535e565b500190565b60006001600160a81b038381168061522f5761522f615374565b92169190910492915050565b60008261524a5761524a615374565b500490565b60006001600160a81b03828116848216811515828404821116156152755761527561535e565b02949350505050565b60008160001904831182151516156152985761529861535e565b500290565b60006001600160a81b03838116908316818110156152bd576152bd61535e565b039392505050565b6000828210156152d7576152d761535e565b500390565b60005b838110156152f75781810151838201526020016152df565b838111156131405750506000910152565b600181811c9082168061531c57607f821691505b6020821081141561533d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156153575761535761535e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610fec57600080fd5b8015158114610fec57600080fd5b61ffff81168114610fec57600080fd5b6001600160a81b0381168114610fec57600080fd5b63ffffffff81168114610fec57600080fd5b60ff81168114610fec57600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212203446c54788d20e63d45ef866b56422e733f236e8ab2fd5f6c0d7e15a12fb16c464736f6c63430008040033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061048b5760003560e01c806376b27f3311610262578063b87f187e11610151578063e57a67ac116100ce578063f4b8602311610092578063f4b8602314610acf578063f780d9bc14610ae2578063f7b3af7414610af7578063fc0c546a14610b0a578063fca3b5aa14610b1d578063fe4fbe1914610b3057600080fd5b8063e57a67ac14610a7a578063ea35761014610a8d578063ec27050714610aa0578063ed3437f814610ab3578063f2fde38b14610abc57600080fd5b8063d0a9278111610115578063d0a92781146109eb578063d4a56af114610a13578063dd62ed3e14610a26578063e46adf6214610a5f578063e530413b14610a7257600080fd5b8063b87f187e14610997578063bef7b1d0146109aa578063c43a51b6146109bd578063c98ece90146109d0578063cf6caff3146109e357600080fd5b806397f79e92116101df578063a5cfa15c116101a3578063a5cfa15c1461094d578063a9059cbb14610956578063a9ae12b214610969578063b334ef631461097c578063b6f738d51461098f57600080fd5b806397f79e92146108f25780639c5bb73a146109055780639cf160f6146109185780639d7a32bb1461092b578063a457c2d71461093a57600080fd5b80638da5cb5b116102265780638da5cb5b146108b45780638eb50a38146108c55780638f16d787146108ce57806395d89b41146108e157806397d63f93146108e957600080fd5b806376b27f331461078c5780638094d8831461079557806380b4ec9f1461079e57806381d12c58146107b1578063832d19d8146108a157600080fd5b80633af9e6691161037e57806361944abf116102fb5780636c715641116102bf5780636c715641146107385780636d7277551461074b5780636f7d78281461075e57806370a0823114610771578063715018a61461078457600080fd5b806361944abf146106e25780636945c5ea146106f55780636a84a985146107085780636a9d1119146107115780636c39f4eb1461072457600080fd5b80634c255c97116103425780634c255c971461068a578063526ec4c4146106a65780635a446215146106ba57806360acfdcb146106cd57806360ebfee6146106d657600080fd5b80633af9e66914610630578063419dc5611461065957806341be99741461066257806347d8ca801461066f5780634bde38c81461067757600080fd5b80632900eed21161040c57806335a03bfa116103d057806335a03bfa146105d357806335b86d96146105e6578063373071f2146105f75780633839bdd01461060a578063395093511461061d57600080fd5b80632900eed2146105785780632a093cfc1461058b5780632c86d98e1461059e578063313ce567146105bd578063340e4fd5146105ca57600080fd5b806311fd8a831161045357806311fd8a831461052157806318160ddd146105345780631a8dd8f71461053d5780631c70ca291461055257806323b872dd1461056557600080fd5b806303b70a161461049057806306fdde03146104b657806307546172146104cb578063095ea7b3146104f657806311d3e6c414610519575b600080fd5b6104a361049e366004614c6a565b610b43565b6040519081526020015b60405180910390f35b6104be610b9b565b6040516104ad9190614f61565b60b3546104de906001600160a01b031681565b6040516001600160a01b0390911681526020016104ad565b6105096105043660046149a9565b610c29565b60405190151581526020016104ad565b6104a3610c96565b609d546104de906001600160a01b031681565b6104a3609a5481565b61055061054b366004614915565b610cad565b005b6104a3610560366004614d68565b610cf9565b610509610573366004614969565b610d1e565b610550610586366004614b4e565b610e7b565b610550610599366004614d68565b610ef8565b60a0546105ab9060ff1681565b60405160ff90911681526020016104ad565b6099546105ab9060ff1681565b6104a360aa5481565b60a5546104de906001600160a01b031681565b6104a369d3c21bcecceda100000081565b610550610605366004614915565b610f27565b60b0546104de906001600160a01b031681565b61050961062b3660046149a9565b610fef565b6104a361063e366004614915565b6001600160a01b03166000908152609e602052604090205490565b6104a360b25481565b60ac546105099060ff1681565b6105ab600181565b60a3546104de906001600160a01b031681565b61069361271081565b60405161ffff90911681526020016104ad565b60a0546106939062010000900461ffff1681565b6105506106c8366004614aed565b611075565b6104a360b15481565b6104a36402540be40081565b6105506106f03660046149d4565b6110cb565b610550610703366004614915565b611108565b6104a360a85481565b60a6546104de906001600160a01b031681565b60ac5461050990600160281b900460ff1681565b610550610746366004614915565b6111cb565b6104a3610759366004614d98565b611217565b60a7546104de906001600160a01b031681565b6104a361077f366004614915565b6112fe565b610550611320565b6104a360ad5481565b6104a360ab5481565b6104a36107ac366004614d68565b611356565b6108376107bf366004614d68565b60a9602052600090815260409020805460019091015460ff808316926001600160a81b036101008204169261ffff600160b01b8304811693600160c01b938490048216936001600160a01b0384169363ffffffff600160a01b82048116949282041692600160e01b82041691600160e81b9091041689565b6040805160ff909a168a526001600160a81b0390981660208a015261ffff9687169789019790975293851660608801526001600160a01b03909216608087015263ffffffff90811660a08701521660c0850152151560e084015216610100820152610120016104ad565b6105506108af366004614d68565b611549565b6065546001600160a01b03166104de565b6104a360a15481565b6105506108dc366004614d68565b611578565b6104be6115a7565b6104a3609c5481565b6104a3610900366004614c3d565b6115b4565b6104a3610913366004614c3d565b6115c5565b60a4546104de906001600160a01b031681565b6104a3670de0b6b3a764000081565b6105096109483660046149a9565b6115df565b6104a360ae5481565b6105096109643660046149a9565b6116c6565b610550610977366004614d39565b611797565b61055061098a366004614915565b61180b565b6104a3606481565b6105506109a53660046149d4565b611857565b6104a36109b8366004614c3d565b6118a1565b6104a36109cb366004614d68565b6118de565b6105506109de366004614915565b6118f8565b610550611944565b6109fe6109f9366004614e24565b611cde565b604080519283529015156020830152016104ad565b6104a3610a21366004614bc3565b611dcc565b6104a3610a34366004614931565b6001600160a01b039182166000908152609f6020908152604080832093909416825291909152205490565b610550610a6d366004614915565b611e20565b6105ab600281565b610550610a88366004614915565b611e6c565b610550610a9b366004614a0c565b611eb8565b6104a3610aae366004614bc3565b612044565b6104a3609b5481565b610550610aca366004614915565b612093565b60af546104de906001600160a01b031681565b60ac54610693906301000000900461ffff1681565b610550610b05366004614e5a565b61212b565b60a2546104de906001600160a01b031681565b610550610b2b366004614915565b612160565b60ac5461069390610100900461ffff1681565b6000610b4e846121ac565b60b154846001600160a81b03161015610b825760405162461bcd60e51b8152600401610b79906150b2565b60405180910390fd5b610b9160018585600186612221565b90505b9392505050565b60978054610ba890615308565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd490615308565b8015610c215780601f10610bf657610100808354040283529160200191610c21565b820191906000526020600020905b815481529060010190602001808311610c0457829003601f168201915b505050505081565b336000818152609f602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610c849086815260200190565b60405180910390a35060015b92915050565b6000609c54600019610ca8919061523b565b905090565b6065546001600160a01b03163314610cd75760405162461bcd60e51b8152600401610b7990615032565b60a780546001600160a01b0319166001600160a01b0392909216919091179055565b600069d3c21bcecceda1000000609b5483610d14919061527e565b610c90919061523b565b6000836001600160a01b038116610d475760405162461bcd60e51b8152600401610b7990614fbe565b836001600160a01b038116610d6e5760405162461bcd60e51b8152600401610b7990614fbe565b6001600160a01b0386166000908152609f60209081526040808320338452909152902054610d9d9085906152c5565b6001600160a01b0387166000908152609f60209081526040808320338452909152812091909155610dcd856118de565b6001600160a01b0388166000908152609e6020526040902054909150610df49082906152c5565b6001600160a01b038089166000908152609e60205260408082209390935590881681522054610e249082906151fd565b6001600160a01b038088166000818152609e6020526040908190209390935591519089169060008051602061540a83398151915290610e669089815260200190565b60405180910390a35060019695505050505050565b600054610100900460ff16610ea25760405162461bcd60e51b8152600401610b7990615067565b610eaa61277c565b8251610ebd9060979060208601906147df565b508151610ed19060989060208501906147df565b506099805460ff191660ff92909216919091179055505069d3c21bcecceda1000000609b55565b6065546001600160a01b03163314610f225760405162461bcd60e51b8152600401610b7990615032565b60ab55565b6065546001600160a01b03163314610f515760405162461bcd60e51b8152600401610b7990615032565b60a4546001600160a01b031615801590610f75575060a2546001600160a01b031615155b15610f985760a45460a254610f98916001600160a01b03918216911660006127ab565b60a480546001600160a01b0319166001600160a01b03831690811790915515801590610fce575060a2546001600160a01b031615155b15610fec5760a254610fec906001600160a01b0316826000196127ab565b50565b336000908152609f602090815260408083206001600160a01b038616845290915281205461101e9083906151fd565b336000818152609f602090815260408083206001600160a01b038916808552908352928190208590555193845290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259101610c84565b6065546001600160a01b0316331461109f5760405162461bcd60e51b8152600401610b7990615032565b81516110b29060979060208501906147df565b5080516110c69060989060208401906147df565b505050565b6065546001600160a01b031633146110f55760405162461bcd60e51b8152600401610b7990615032565b60ac805460ff1916911515919091179055565b6065546001600160a01b031633146111325760405162461bcd60e51b8152600401610b7990615032565b60a3546001600160a01b031615801590611156575060a2546001600160a01b031615155b1561117a5760a35460a25461117a916001600160a01b0391821691166000196127ab565b60a380546001600160a01b0319166001600160a01b03831690811790915515801590610fce575060a2546001600160a01b031615610fec5760a254610fec906001600160a01b0316826000196127ab565b6065546001600160a01b031633146111f55760405162461bcd60e51b8152600401610b7990615032565b60a580546001600160a01b0319166001600160a01b0392909216919091179055565b6000811580611230575060af546001600160a01b031633145b61123957600080fd5b600083815260a96020908152604091829020825161012081018452815460ff80821683526101008083046001600160a81b031695840195909552600160b01b820461ffff90811696840196909652600160c01b91829004861660608401526001909301546001600160a01b0381166080840152600160a01b810463ffffffff90811660a085015291810490911660c0830152600160e01b8104909216151560e0820152600160e81b909104909216908201526112f6848285612902565b949350505050565b6001600160a01b0381166000908152609e6020526040812054610c9090610cf9565b6065546001600160a01b0316331461134a5760405162461bcd60e51b8152600401610b7990615032565b6113546000612a16565b565b60006002600154141561137b5760405162461bcd60e51b8152600401610b79906150dd565b60026001908155600083815260a96020908152604091829020825161012081018452815460ff8082168084526101008084046001600160a81b031696850196909652600160b01b830461ffff90811697850197909752600160c01b928390048716606085015293909601546001600160a01b0381166080840152600160a01b810463ffffffff90811660a085015291810490911660c0830152600160e01b8104909516151560e0820152600160e81b909404909216908301526114775760405162461bcd60e51b815260206004820152601460248201527314995c5d595cdd081a59081b9bdd08199bdd5b9960621b6044820152606401610b79565b60a6546040516315b3b87360e01b81526001600160a01b03909116906315b3b873906114a7908490600401615114565b60206040518083038186803b1580156114bf57600080fd5b505afa1580156114d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f791906149f0565b6115345760405162461bcd60e51b815260206004820152600e60248201526d4e6f74206c697175696461626c6560901b6044820152606401610b79565b61153e8382612a68565b600180559392505050565b6065546001600160a01b031633146115735760405162461bcd60e51b8152600401610b7990615032565b60ad55565b6065546001600160a01b031633146115a25760405162461bcd60e51b8152600401610b7990615032565b60ae55565b60988054610ba890615308565b6000610b9460028484600080612221565b60006115d0836121ac565b610b9460018484600080612221565b336000908152609f602090815260408083206001600160a01b038616845290915281205480831061163357336000908152609f602090815260408083206001600160a01b0388168452909152812055611662565b61163d83826152c5565b336000908152609f602090815260408083206001600160a01b03891684529091529020555b336000818152609f602090815260408083206001600160a01b038916808552908352928190205490519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b6000826001600160a01b0381166116ef5760405162461bcd60e51b8152600401610b7990614fbe565b60006116fa846118de565b336000908152609e60205260409020549091506117189082906152c5565b336000908152609e6020526040808220929092556001600160a01b038716815220546117459082906151fd565b6001600160a01b0386166000818152609e602052604090819020929092559051339060008051602061540a833981519152906117849088815260200190565b60405180910390a3506001949350505050565b6065546001600160a01b031633146117c15760405162461bcd60e51b8152600401610b7990615032565b60ac805460a0805463ffff000019166201000061ffff9687160217905564ffffffff0019166101009484169490940264ffff00000019169390931763010000009190921602179055565b6065546001600160a01b031633146118355760405162461bcd60e51b8152600401610b7990615032565b60a680546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146118815760405162461bcd60e51b8152600401610b7990615032565b60ac8054911515600160281b0265ff000000000019909216919091179055565b600060b254836001600160a81b031610156118ce5760405162461bcd60e51b8152600401610b79906150b2565b610b946002848460016000612221565b609b54600090610d1469d3c21bcecceda10000008461527e565b6065546001600160a01b031633146119225760405162461bcd60e51b8152600401610b7990615032565b60af80546001600160a01b0319166001600160a01b0392909216919091179055565b60a3546040516329b2a60b60e21b815230600482015260009182916001600160a01b039091169063a6ca982c9060240160c06040518083038186803b15801561198c57600080fd5b505afa1580156119a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c49190614dbc565b5050505091509150806119e95760405162461bcd60e51b8152600401610b7990614f94565b6000609a546402540be40060a15485611a02919061527e565b611a0c919061527e565b611a16919061523b565b9050600060a760009054906101000a90046001600160a01b03166001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b158015611a6857600080fd5b505afa158015611a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa09190614ec4565b505063ffffffff16905060006064611abd6402540be4008461527e565b611ac7919061523b565b9050828111611b185760405162461bcd60e51b815260206004820152601a60248201527f506f7369746976652072656261736520646973616c6c6f7765640000000000006044820152606401610b79565b6000611b2484836152c5565b60ac54909150600160281b900460ff161580611b64575060a05461271090611b569062010000900461ffff168461527e565b611b60919061523b565b8110155b611ba75760405162461bcd60e51b81526020600482015260146024820152732737ba1032b737bab3b4103232bb34b0ba34b7b760611b6044820152606401610b79565b60ac54600160281b900460ff161580611be5575060ac5461271090611bd7906301000000900461ffff168461527e565b611be1919061523b565b8111155b611c255760405162461bcd60e51b8152602060048201526011602482015270446576696174696f6e20746f6f2062696760781b6044820152606401610b79565b60ac54600090600160281b900460ff16611c40576001611c83565b60ac54611c5690610100900461ffff168461527e565b6001611c646127108561527e565b611c6e91906152c5565b611c78919061523b565b611c839060016151fd565b90506001811115611ca757611c98818361523b565b9150611ca482866151fd565b92505b600083611cbc84670de0b6b3a764000061527e565b611cc6919061523b565b9050611cd3816000612d86565b505050505050505050565b600080821580611cf8575060af546001600160a01b031633145b611d0157600080fd5b600085815260a96020908152604091829020825161012081018452815460ff80821683526101008083046001600160a81b031695840195909552600160b01b820461ffff90811696840196909652600160c01b91829004861660608401526001909301546001600160a01b0381166080840152600160a01b810463ffffffff90811660a085015291810490911660c0830152600160e01b8104909216151560e0820152600160e81b90910490921690820152611dbf86828787612f0d565b9250925050935093915050565b60b3546000906001600160a01b03163314611de657600080fd5b60a254611e07906001600160a01b031633306001600160a81b038616613108565b611e1960003384612710600080613146565b5092915050565b6065546001600160a01b03163314611e4a5760405162461bcd60e51b8152600401610b7990615032565b609d80546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b03163314611e965760405162461bcd60e51b8152600401610b7990615032565b60b080546001600160a01b0319166001600160a01b0392909216919091179055565b6000611ec460016133d0565b90508015611edc576000805461ff0019166101001790555b60a0805463ffff000019166264000017905560ac805465ffffffffff0019166501138803e800179055600160a881905560ad55601e60ae55611f208a8a6012610e7b565b611f2861345d565b60a280546001600160a01b03199081166001600160a01b038e811691821790935560a3805483168a851617905560a48054831689851617905560a58054831688851617905560a68054831687851617905560a7805490921692851692909217905560a188905560a0805460ff1990811660ff8c1617909155600060aa5564174876e80060ab5560ac8054909116600117905515611ff15760a254611fd8906001600160a01b0316876000196127ab565b60a254611ff1906001600160a01b0316866000196127ab565b8015612037576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b60b3546000906001600160a01b0316331461205e57600080fd5b6120813330612078610560866001600160a81b03166118de565b30929190613108565b611e196000338460008060008061348c565b6065546001600160a01b031633146120bd5760405162461bcd60e51b8152600401610b7990615032565b6001600160a01b0381166121225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b79565b610fec81612a16565b6065546001600160a01b031633146121555760405162461bcd60e51b8152600401610b7990615032565b60b19190915560b255565b6065546001600160a01b0316331461218a5760405162461bcd60e51b8152600401610b7990615032565b60b380546001600160a01b0319166001600160a01b0392909216919091179055565b60ac5460ff1615806121d5575060ab5460aa546121d2906001600160a81b0384166151fd565b11155b610fec5760405162461bcd60e51b815260206004820152601e60248201527f546f74616c20726571756573747320616d6f756e7420657863656564656400006044820152606401610b79565b6000600260015414156122465760405162461bcd60e51b8152600401610b79906150dd565b60026001556001600160a81b03851661225e57600080fd5b6040805160a0810182526000602082018190529181018290526060810182905260808101919091526001600160a81b0386168152600260ff881614156122d55760006122b2876001600160a81b03166118de565b905080816001600160a81b0316146122c957600080fd5b6001600160a81b031681525b60a65460405163051a497b60e01b815263ffffffff871660048201526001600160a01b039091169063051a497b9060240160206040518083038186803b15801561231e57600080fd5b505afa158015612332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123569190614d1d565b61ffff1660208083019190915260a6546040805162ef88df60e71b815290516001600160a01b03909216926377c46f8092600480840193829003018186803b1580156123a157600080fd5b505afa1580156123b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d99190614d1d565b61ffff908116604083015260208201518251612710926123fa92169061524f565b6124049190615215565b6001600160a81b03166060820152604081015181516127109161242d9161ffff9091169061524f565b6124379190615215565b6001600160a81b0316608082015260a85491506124558260016151fd565b60a855600061246a63ffffffff8716426151fd565b90506040518061012001604052808960ff16815260200183600001516001600160a81b03168152602001836020015161ffff168152602001836040015161ffff168152602001336001600160a01b031681526020014263ffffffff1681526020018263ffffffff16815260200186151581526020018561ffff1681525060a9600085815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a8154816001600160a81b0302191690836001600160a81b0316021790555060408201518160000160166101000a81548161ffff021916908361ffff16021790555060608201518160000160186101000a81548161ffff021916908361ffff16021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160010160146101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160010160186101000a81548163ffffffff021916908363ffffffff16021790555060e082015181600101601c6101000a81548160ff02191690831515021790555061010082015181600101601d6101000a81548161ffff021916908361ffff160217905550905050600260ff168860ff161461267957866001600160a81b031660aa5461267591906151fd565b60aa555b6126cc88866126bd5760ff8a166002146126a657836080015184606001516126a191906151fd565b6136e4565b6126a18460800151856060015161056091906151fd565b886001600160a81b03166136e4565b337fa670c85a56568fc022a5849f397274f0e963655cd9c383657b23f8617c4a3b88848a8a60ff8216600214612706578660600151612713565b6127138760600151610cf9565b6040805194855260ff90931660208501526001600160a81b0390911691830191909152606082015263ffffffff4281166080830152841660a082015287151560c082015261ffff871660e08201526101000160405180910390a250506001805595945050505050565b600054610100900460ff166127a35760405162461bcd60e51b8152600401610b7990615067565b611354613740565b8015806128345750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156127fa57600080fd5b505afa15801561280e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128329190614d80565b155b61289f5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610b79565b6040516001600160a01b0383166024820152604481018290526110c690849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613770565b6000600260015414156129275760405162461bcd60e51b8152600401610b79906150dd565b6002600181905550600061293e8585600286613842565b90508060800151612a0a5761295285613cc4565b600061298186866080015184600001518860400151866060015189801561297a57508a60e001515b600161348c565b608087810151885160e0808b0151604080518e815260ff909416602085015283018690526000606084015215159382019390935288151560a08201524263ffffffff1660c082015293965091935033926001600160a01b03909216917feaa5448472d06a833e3f8fea197d31076cb3c165c25c1a217def0eabbbd76f88910160405180910390a3505b50600180559392505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080612a7d83600001518460200151613d87565b60e08401519091506001600160a81b03821690612afb57604084015160009061271090612aae9061ffff168561524f565b612ab89190615215565b9050600061271061ffff16866060015161ffff1685612ad7919061524f565b612ae19190615215565b9050612aed81836151d2565b6001600160a81b0316925050505b835160ff1660021415612b1e57612b13816001613dc6565b50909150612b309050565b612b30826001600160a81b031661403d565b8360e00151612bba5760a654604051637693aa6160e01b8152600481018390526001600160a01b0390911690637693aa619060240160206040518083038186803b158015612b7d57600080fd5b505afa158015612b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bb59190614d80565b612c36565b60a65460405163591b36f760e01b8152600481018390526001600160a01b039091169063591b36f79060240160206040518083038186803b158015612bfe57600080fd5b505afa158015612c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c369190614d80565b9250612c4185613cc4565b8360e0015115612c76576080840151612c7190612c5e85846152c5565b60a2546001600160a01b03169190614063565b612cf4565b60a4546001600160a01b0316638b0f154d612c9185846152c5565b60a25460405160e084901b6001600160e01b031916815260048101929092526001600160a01b03166024820152604401600060405180830381600087803b158015612cdb57600080fd5b505af1158015612cef573d6000803e3d6000fd5b505050505b60a254612d0b906001600160a01b03163385614063565b608084810151855160e0870151604080518a815260ff909316602084015282018790521515606082015263ffffffff42169281019290925233916001600160a01b03909116907fb0ed9dd07e136565ec73e51759602bc1c92e75cf86ceabcf197b2a8784c094db9060a00160405180910390a3505092915050565b609d546000906001600160a01b03163314612dd15760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b6044820152606401610b79565b82612e2257609b54604080514281526020810183905280820192909252517fc6642d24d84e7f3d36ca39f5cce10e75639d9b158d5193aa350e2f900653e4c09181900360600190a150609a54610c90565b609b5482612e5c57670de0b6b3a7640000612e3d85826152c5565b609b54612e4a919061527e565b612e54919061523b565b609b55612eb1565b6000670de0b6b3a7640000612e7186826151fd565b609b54612e7e919061527e565b612e88919061523b565b9050612e92610c96565b811015612ea357609b819055612eaf565b612eab610c96565b609b555b505b612ebc609c54610cf9565b609a55609b54604080514281526020810184905280820192909252517fc6642d24d84e7f3d36ca39f5cce10e75639d9b158d5193aa350e2f900653e4c09181900360600190a15050609a5492915050565b6000806000612f1f8787600187613842565b9050806080015115612f3457600191506130fe565b612f588787608001518360000151888a60e001518015612f515750885b6001613146565b909350915081156130fe57612f7986602001516001600160a81b031661403d565b612f8287613cc4565b60a454602082015160408301516001600160a01b0390921691638b0f154d91612faa916151d2565b60a25460405160e084901b6001600160e01b03191681526001600160a81b0390921660048301526001600160a01b03166024820152604401600060405180830381600087803b158015612ffc57600080fd5b505af1158015613010573d6000803e3d6000fd5b505050506101008101516001600160a81b0316156130555760b05461010082015160a254613055926001600160a01b03918216929116906001600160a81b0316614063565b336001600160a01b031686608001516001600160a01b03167feaa5448472d06a833e3f8fea197d31076cb3c165c25c1a217def0eabbbd76f8889896000015185610100015186602001516130a991906151d2565b60e08c8101516040805195865260ff90941660208601526001600160a81b0390921692840192909252600060608401521515608083015288151560a083015263ffffffff421660c08301520160405180910390a35b5094509492505050565b6040516001600160a01b03808516602483015283166044820152606481018290526131409085906323b872dd60e01b906084016128cb565b50505050565b60a35460405163055f575160e41b81523060048201526000918291829160019183916001600160a01b0316906355f575109060240160a06040518083038186803b15801561319357600080fd5b505afa1580156131a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131cb9190614ca9565b505050506001600160a81b03169050806000146132685760a3546040516329b2a60b60e21b81523060048201526001600160a01b039091169063a6ca982c9060240160c06040518083038186803b15801561322557600080fd5b505afa158015613239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061325d9190614dbc565b509396509194505050505b816132855760405162461bcd60e51b8152600401610b7990614f94565b5050609a54600080808061329b8c8c8c8c614093565b94506001600160a81b031694506001600160a81b031694506001600160a81b031694505080156133bf576000851180156132d55750600086115b156132f657856132e5868661527e565b6132ef919061523b565b9750613306565b60a154613303908561527e565b97505b604080518f81526001600160a81b038e166020820152908101859052606081018990526080810184905260a081018390526001600160a01b038e16907f1ea03bd5ed908c036eb222c88975259903b8a291fb411a82ae9c8205d6c7d7ac9060c00160405180910390a2600088116133b05760405162461bcd60e51b815260206004820152600e60248201526d546f6f2066657720746f6b656e7360901b6044820152606401610b79565b6133ba8d89614463565b600196505b505050505050965096945050505050565b60008054610100900460ff1615613417578160ff1660011480156133f35750303b155b61340f5760405162461bcd60e51b8152600401610b7990614fe4565b506000919050565b60005460ff80841691161061343e5760405162461bcd60e51b8152600401610b7990614fe4565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166134845760405162461bcd60e51b8152600401610b7990615067565b611354614583565b60008060008060006134a78a6001600160a81b031687613dc6565b9194509250905060006127106134c161ffff8c168661527e565b6134cb919061523b565b90506127106134de61ffff8b168661527e565b6134e8919061523b565b9450600088156135715760a65460405163591b36f760e01b8152600481018790526001600160a01b039091169063591b36f79060240160206040518083038186803b15801561353657600080fd5b505afa15801561354a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061356e9190614d80565b90505b808261357d88886152c5565b61358791906152c5565b61359191906152c5565b9650600061359f83886151fd565b11156136235760a4546001600160a01b0316638b0f154d6135c084896151fd565b60a25460405160e084901b6001600160e01b031916815260048101929092526001600160a01b03166024820152604401600060405180830381600087803b15801561360a57600080fd5b505af115801561361e573d6000803e3d6000fd5b505050505b80156136535760b05460a254613646916001600160a01b03918216911683614063565b61365081876151fd565b95505b505060a25461366c906001600160a01b03168c87614063565b604080518d8152602081018590529081018690526001600160a81b038b1660608201526080810183905260a081018290526001600160a01b038c16907f6c4de564b51b3953a8d2eab8336cee66368f4ca65fbc7d31d535368983c1e1819060c00160405180910390a250505097509795505050505050565b60ff82166002141561372857806136fa336112fe565b10156137185760405162461bcd60e51b8152600401610b79906150b2565b61372430338184613108565b5050565b60a254613724906001600160a01b0316333084613108565b600054610100900460ff166137675760405162461bcd60e51b8152600401610b7990615067565b61135433612a16565b60006137c5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166145b09092919063ffffffff16565b8051909150156110c657808060200190518101906137e391906149f0565b6110c65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b79565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915281801561389957508360e001515b806138b0575060808401516001600160a01b031633145b6138b957600080fd5b8260ff16846000015160ff16146139075760405162461bcd60e51b815260206004820152601260248201527157726f6e672072657175657374207479706560701b6044820152606401610b79565b60a6546040516315b3b87360e01b81526001600160a01b03909116906315b3b87390613937908790600401615114565b60206040518083038186803b15801561394f57600080fd5b505afa158015613963573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061398791906149f0565b156139a3576139968585612a68565b50600160808201526112f6565b8115806139ba57508360c0015163ffffffff164210155b613a065760405162461bcd60e51b815260206004820152601760248201527f5461726765742074696d65206e6f7420726561636865640000000000000000006044820152606401610b79565b8360e001518015613a2157508360c0015163ffffffff164210155b613aaa5760a654604051634ab4396560e11b81526001600160a01b039091169063956872ca90613a55908790600401615114565b60206040518083038186803b158015613a6d57600080fd5b505afa158015613a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613aa59190614d1d565b613aad565b60005b61ffff90811660608301526040850151602086015161271092613ad192169061524f565b613adb9190615215565b6001600160a81b03166040820152835160ff1660011415613c18578360e001518015613b045750815b15613ba35760a654602085015160405163591b36f760e01b81526001600160a81b0390911660048201526001600160a01b039091169063591b36f79060240160206040518083038186803b158015613b5b57600080fd5b505afa158015613b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b939190614d80565b6001600160a81b03166101008201525b61271061ffff16816060015161ffff168560200151613bc2919061524f565b613bcc9190615215565b6001600160a81b03166020808301829052610100830151604084015191870151909291613bf89161529d565b613c02919061529d565b613c0c919061529d565b6001600160a81b031681525b8360e00151613c92576000613c77856000015161271061ffff16876060015161ffff168860200151613c4a919061524f565b613c549190615215565b84604001518860200151613c68919061529d565b613c72919061529d565b613d87565b6001600160a81b03169050613c908560000151826136e4565b505b835160ff16600214156112f657613cb184600001518560200151613d87565b6001600160a81b03168152949350505050565b600081815260a96020526040812080546001600160d01b031916815560010180546001600160f81b031916905560ad5490805b60a85483108015613d09575060ae5482105b8015613d505750600083815260a960205260409020600101546001600160a01b03161580613d505750600083815260a96020526040902060010154600160e01b900460ff16155b15613d795781613d5f81615343565b9250508280613d6d90615343565b93505060019050613cf7565b801561314057505060ad5550565b600060ff8316600214613d9b575080610c90565b6000613daf836001600160a81b0316610cf9565b905080816001600160a81b031614610b9457600080fd5b60a3546040516329b2a60b60e21b815230600482015260009182918291829182916001600160a01b03169063a6ca982c9060240160c06040518083038186803b158015613e1257600080fd5b505afa158015613e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e4a9190614dbc565b505050925092505081613e6f5760405162461bcd60e51b8152600401610b7990614f94565b609a54600090613e88896001600160a81b03851661527e565b613e92919061523b565b9050806001600160a81b03168114613eec5760405162461bcd60e51b815260206004820152601760248201527f546f6f206d75636820706f736974696f6e20756e6974730000000000000000006044820152606401610b79565b801561401e5786613f895760a354604051635d357c1960e11b81526001600160a81b0383166004820152600160248201526001600160a01b039091169063ba6af83290604401606060405180830381600087803b158015613f4c57600080fd5b505af1158015613f60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f849190614e7b565b614016565b60a35460405163c657549160e01b81526001600160a81b0383166004820152600160248201526001600160a01b039091169063c657549190604401606060405180830381600087803b158015613fde57600080fd5b505af1158015613ff2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140169190614e7b565b919750955093505b6140333061402e6105608b6118de565b6145bf565b5050509250925092565b60aa5481111561404f57600060aa5550565b8060aa5461405d91906152c5565b60aa5550565b6040516001600160a01b0383166024820152604481018290526110c690849063a9059cbb60e01b906064016128cb565b6000808080600186156142165760a3546040805163d934c20b60e01b8152905160009283926001600160a01b0390911691633c885ff960e21b918e91849163d934c20b916004808301926020929190829003018186803b1580156140f657600080fd5b505afa15801561410a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061412e9190614ea8565b604080516001600160a81b03909316602084015263ffffffff9091169082015261ffff8d1660608201526001608082015260a00160408051601f19818403018152908290526141809291602001614f14565b60408051601f198184030181529082905261419a91614f45565b6000604051808303816000865af19150503d80600081146141d7576040519150601f19603f3d011682016040523d82523d6000602084013e6141dc565b606091505b5091509150811561420a57808060200190518101906141fb9190614bdf565b9299509097509550935061420f565b600092505b5050614458565b851561433c5760a3546040805163d934c20b60e01b815290516001600160a01b039092169163f2217fe4918c91849163d934c20b916004808301926020929190829003018186803b15801561426a57600080fd5b505afa15801561427e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142a29190614ea8565b6040516001600160e01b031960e085901b1681526001600160a81b03909216600483015263ffffffff16602482015261ffff8b16604482015260016064820152608401608060405180830381600087803b1580156142ff57600080fd5b505af1158015614313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143379190614bdf565b61444d565b60a3546040805163d934c20b60e01b815290516001600160a01b03909216916353997f61918c91849163d934c20b916004808301926020929190829003018186803b15801561438a57600080fd5b505afa15801561439e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143c29190614ea8565b6040516001600160e01b031960e085901b1681526001600160a81b03909216600483015263ffffffff16602482015260016044820152606401608060405180830381600087803b15801561441557600080fd5b505af1158015614429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061444d9190614bdf565b929750909550935091505b945094509450945094565b816001600160a01b03811661448a5760405162461bcd60e51b8152600401610b7990614fbe565b81609a5461449891906151fd565b609a5560006144a6836118de565b905080609c546144b691906151fd565b609c556144c1610c96565b609b5411156145125760405162461bcd60e51b815260206004820152601a60248201527f4d6178207363616c696e6720666163746f7220746f6f206c6f770000000000006044820152606401610b79565b6001600160a01b0384166000908152609e60205260409020546145369082906151fd565b6001600160a01b0385166000818152609e602052604080822093909355915190919060008051602061540a833981519152906145759087815260200190565b60405180910390a350505050565b600054610100900460ff166145aa5760405162461bcd60e51b8152600401610b7990615067565b60018055565b6060610b918484600085614675565b816001600160a01b0381166145e65760405162461bcd60e51b8152600401610b7990614fbe565b81609a546145f491906152c5565b609a556000614602836118de565b905080609c5461461291906152c5565b609c556001600160a01b0384166000908152609e60205260409020546146399082906152c5565b6001600160a01b0385166000818152609e602052604080822093909355915160008051602061540a833981519152906145759087815260200190565b6060824710156146d65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610b79565b6001600160a01b0385163b61472d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b79565b600080866001600160a01b031685876040516147499190614f45565b60006040518083038185875af1925050503d8060008114614786576040519150601f19603f3d011682016040523d82523d6000602084013e61478b565b606091505b509150915061479b8282866147a6565b979650505050505050565b606083156147b5575081610b94565b8251156147c55782518084602001fd5b8160405162461bcd60e51b8152600401610b799190614f61565b8280546147eb90615308565b90600052602060002090601f01602090048101928261480d5760008555614853565b82601f1061482657805160ff1916838001178555614853565b82800160010185558215614853579182015b82811115614853578251825591602001919060010190614838565b5061485f929150614863565b5090565b5b8082111561485f5760008155600101614864565b8035613458816153a0565b600082601f830112614893578081fd5b813567ffffffffffffffff808211156148ae576148ae61538a565b604051601f8301601f19908116603f011681019082821181831017156148d6576148d661538a565b816040528381528660208588010111156148ee578485fd5b8360208701602083013792830160200193909352509392505050565b8035613458816153fa565b600060208284031215614926578081fd5b8135610b94816153a0565b60008060408385031215614943578081fd5b823561494e816153a0565b9150602083013561495e816153a0565b809150509250929050565b60008060006060848603121561497d578081fd5b8335614988816153a0565b92506020840135614998816153a0565b929592945050506040919091013590565b600080604083850312156149bb578182fd5b82356149c6816153a0565b946020939093013593505050565b6000602082840312156149e5578081fd5b8135610b94816153b5565b600060208284031215614a01578081fd5b8151610b94816153b5565b6000806000806000806000806000806101408b8d031215614a2b578586fd5b614a348b614878565b995060208b013567ffffffffffffffff80821115614a50578788fd5b614a5c8e838f01614883565b9a5060408d0135915080821115614a71578788fd5b50614a7e8d828e01614883565b985050614a8d60608c0161490a565b965060808b01359550614aa260a08c01614878565b9450614ab060c08c01614878565b9350614abe60e08c01614878565b9250614acd6101008c01614878565b9150614adc6101208c01614878565b90509295989b9194979a5092959850565b60008060408385031215614aff578182fd5b823567ffffffffffffffff80821115614b16578384fd5b614b2286838701614883565b93506020850135915080821115614b37578283fd5b50614b4485828601614883565b9150509250929050565b600080600060608486031215614b62578081fd5b833567ffffffffffffffff80821115614b79578283fd5b614b8587838801614883565b94506020860135915080821115614b9a578283fd5b50614ba786828701614883565b9250506040840135614bb8816153fa565b809150509250925092565b600060208284031215614bd4578081fd5b8135610b94816153d3565b60008060008060808587031215614bf4578182fd5b8451614bff816153d3565b6020860151909450614c10816153d3565b6040860151909350614c21816153d3565b6060860151909250614c32816153d3565b939692955090935050565b60008060408385031215614c4f578182fd5b8235614c5a816153d3565b9150602083013561495e816153e8565b600080600060608486031215614c7e578081fd5b8335614c89816153d3565b92506020840135614c99816153e8565b91506040840135614bb8816153c3565b600080600080600060a08688031215614cc0578283fd5b8551614ccb816153d3565b6020870151909550614cdc816153fa565b6040870151909450614ced816153e8565b6060870151909350614cfe816153e8565b6080870151909250614d0f816153e8565b809150509295509295909350565b600060208284031215614d2e578081fd5b8151610b94816153c3565b600080600060608486031215614d4d578081fd5b8335614d58816153c3565b92506020840135614c99816153c3565b600060208284031215614d79578081fd5b5035919050565b600060208284031215614d91578081fd5b5051919050565b60008060408385031215614daa578182fd5b82359150602083013561495e816153b5565b60008060008060008060c08789031215614dd4578384fd5b865195506020870151614de6816153b5565b6040880151909550614df7816153d3565b6060880151909450614e08816153fa565b809350506080870151915060a087015190509295509295509295565b600080600060608486031215614e38578081fd5b833592506020840135614e4a816153c3565b91506040840135614bb8816153b5565b60008060408385031215614e6c578182fd5b50508035926020909101359150565b600080600060608486031215614e8f578081fd5b8351925060208401519150604084015190509250925092565b600060208284031215614eb9578081fd5b8151610b94816153e8565b600080600060608486031215614ed8578081fd5b8351614ee3816153e8565b602085015190935069ffffffffffffffffffff81168114614f02578182fd5b80925050604084015190509250925092565b6001600160e01b0319831681528151600090614f378160048501602087016152dc565b919091016004019392505050565b60008251614f578184602087016152dc565b9190910192915050565b6020815260008251806020840152614f808160408501602087016152dc565b601f01601f19169190910160400192915050565b60208082526010908201526f4e656761746976652062616c616e636560801b604082015260600190565b6020808252600c908201526b5a65726f206164647265737360a01b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601190820152704e6f7420656e6f75676820746f6b656e7360781b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b815160ff1681526020808301516001600160a81b0316908201526040808301516101208301916151499084018261ffff169052565b50606083015161515f606084018261ffff169052565b50608083015161517a60808401826001600160a01b03169052565b5060a083015161519260a084018263ffffffff169052565b5060c08301516151aa60c084018263ffffffff169052565b5060e08301516151be60e084018215159052565b506101009283015161ffff16919092015290565b60006001600160a81b038281168482168083038211156151f4576151f461535e565b01949350505050565b600082198211156152105761521061535e565b500190565b60006001600160a81b038381168061522f5761522f615374565b92169190910492915050565b60008261524a5761524a615374565b500490565b60006001600160a81b03828116848216811515828404821116156152755761527561535e565b02949350505050565b60008160001904831182151516156152985761529861535e565b500290565b60006001600160a81b03838116908316818110156152bd576152bd61535e565b039392505050565b6000828210156152d7576152d761535e565b500390565b60005b838110156152f75781810151838201526020016152df565b838111156131405750506000910152565b600181811c9082168061531c57607f821691505b6020821081141561533d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156153575761535761535e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610fec57600080fd5b8015158114610fec57600080fd5b61ffff81168114610fec57600080fd5b6001600160a81b0381168114610fec57600080fd5b63ffffffff81168114610fec57600080fd5b60ff81168114610fec57600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212203446c54788d20e63d45ef866b56422e733f236e8ab2fd5f6c0d7e15a12fb16c464736f6c63430008040033",
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 34426,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 34429,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 34575,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 34619,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 37283,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 34306,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address"
          },
          {
            "astId": 34418,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 327,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage"
          },
          {
            "astId": 329,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage"
          },
          {
            "astId": 331,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "decimals",
            "offset": 0,
            "slot": "153",
            "type": "t_uint8"
          },
          {
            "astId": 333,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "totalSupply",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256"
          },
          {
            "astId": 335,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "scalingFactor",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256"
          },
          {
            "astId": 337,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "initSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256"
          },
          {
            "astId": 339,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "rebaser",
            "offset": 0,
            "slot": "157",
            "type": "t_address"
          },
          {
            "astId": 343,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "_underlyingBalances",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 349,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "_allowedFragments",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 13460,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "leverage",
            "offset": 0,
            "slot": "160",
            "type": "t_uint8"
          },
          {
            "astId": 13462,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "rebaseLag",
            "offset": 1,
            "slot": "160",
            "type": "t_uint8"
          },
          {
            "astId": 13464,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "minDeviationPercentage",
            "offset": 2,
            "slot": "160",
            "type": "t_uint16"
          },
          {
            "astId": 13467,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "initialTokenToLPTokenRate",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256"
          },
          {
            "astId": 13470,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "token",
            "offset": 0,
            "slot": "162",
            "type": "t_contract(IERC20Upgradeable)35309"
          },
          {
            "astId": 13474,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "platform",
            "offset": 0,
            "slot": "163",
            "type": "t_contract(IPlatform)18105"
          },
          {
            "astId": 13477,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "feesCollector",
            "offset": 0,
            "slot": "164",
            "type": "t_contract(IFeesCollector)17539"
          },
          {
            "astId": 13480,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "feesCalculator",
            "offset": 0,
            "slot": "165",
            "type": "t_contract(IFeesCalculator)17527"
          },
          {
            "astId": 13484,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "requestFeesCalculator",
            "offset": 0,
            "slot": "166",
            "type": "t_contract(IRequestFeesCalculator)18544"
          },
          {
            "astId": 13487,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "cviOracle",
            "offset": 0,
            "slot": "167",
            "type": "t_contract(ICVIOracle)17026"
          },
          {
            "astId": 13490,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "nextRequestId",
            "offset": 0,
            "slot": "168",
            "type": "t_uint256"
          },
          {
            "astId": 13496,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "requests",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_uint256,t_struct(Request)18986_storage)"
          },
          {
            "astId": 13498,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "totalRequestsAmount",
            "offset": 0,
            "slot": "170",
            "type": "t_uint256"
          },
          {
            "astId": 13500,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "maxTotalRequestsAmount",
            "offset": 0,
            "slot": "171",
            "type": "t_uint256"
          },
          {
            "astId": 13502,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "verifyTotalRequestsAmount",
            "offset": 0,
            "slot": "172",
            "type": "t_bool"
          },
          {
            "astId": 13504,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "deviationPerSingleRebaseLag",
            "offset": 1,
            "slot": "172",
            "type": "t_uint16"
          },
          {
            "astId": 13506,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "maxDeviationPercentage",
            "offset": 3,
            "slot": "172",
            "type": "t_uint16"
          },
          {
            "astId": 13508,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "cappedRebase",
            "offset": 5,
            "slot": "172",
            "type": "t_bool"
          },
          {
            "astId": 13517,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "minRequestId",
            "offset": 0,
            "slot": "173",
            "type": "t_uint256"
          },
          {
            "astId": 13520,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "maxMinRequestIncrements",
            "offset": 0,
            "slot": "174",
            "type": "t_uint256"
          },
          {
            "astId": 13522,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "fulfiller",
            "offset": 0,
            "slot": "175",
            "type": "t_address"
          },
          {
            "astId": 13524,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "keepersFeeVaultAddress",
            "offset": 0,
            "slot": "176",
            "type": "t_address"
          },
          {
            "astId": 13526,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "minKeepersMintAmount",
            "offset": 0,
            "slot": "177",
            "type": "t_uint256"
          },
          {
            "astId": 13528,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "minKeepersBurnAmount",
            "offset": 0,
            "slot": "178",
            "type": "t_uint256"
          },
          {
            "astId": 13530,
            "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
            "label": "minter",
            "offset": 0,
            "slot": "179",
            "type": "t_address"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ICVIOracle)17026": {
            "encoding": "inplace",
            "label": "contract ICVIOracle",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)35309": {
            "encoding": "inplace",
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFeesCalculator)17527": {
            "encoding": "inplace",
            "label": "contract IFeesCalculator",
            "numberOfBytes": "20"
          },
          "t_contract(IFeesCollector)17539": {
            "encoding": "inplace",
            "label": "contract IFeesCollector",
            "numberOfBytes": "20"
          },
          "t_contract(IPlatform)18105": {
            "encoding": "inplace",
            "label": "contract IPlatform",
            "numberOfBytes": "20"
          },
          "t_contract(IRequestFeesCalculator)18544": {
            "encoding": "inplace",
            "label": "contract IRequestFeesCalculator",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_uint256,t_struct(Request)18986_storage)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => struct IVolatilityToken.Request)",
            "numberOfBytes": "32",
            "value": "t_struct(Request)18986_storage"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Request)18986_storage": {
            "encoding": "inplace",
            "label": "struct IVolatilityToken.Request",
            "members": [
              {
                "astId": 18969,
                "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
                "label": "requestType",
                "offset": 0,
                "slot": "0",
                "type": "t_uint8"
              },
              {
                "astId": 18971,
                "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
                "label": "tokenAmount",
                "offset": 1,
                "slot": "0",
                "type": "t_uint168"
              },
              {
                "astId": 18973,
                "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
                "label": "timeDelayRequestFeesPercent",
                "offset": 22,
                "slot": "0",
                "type": "t_uint16"
              },
              {
                "astId": 18975,
                "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
                "label": "maxRequestFeesPercent",
                "offset": 24,
                "slot": "0",
                "type": "t_uint16"
              },
              {
                "astId": 18977,
                "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
                "label": "owner",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 18979,
                "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
                "label": "requestTimestamp",
                "offset": 20,
                "slot": "1",
                "type": "t_uint32"
              },
              {
                "astId": 18981,
                "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
                "label": "targetTimestamp",
                "offset": 24,
                "slot": "1",
                "type": "t_uint32"
              },
              {
                "astId": 18983,
                "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
                "label": "useKeepers",
                "offset": 28,
                "slot": "1",
                "type": "t_bool"
              },
              {
                "astId": 18985,
                "contract": "contracts/volatility-token/VolatilityTokenContracts.sol:CVIUSDCVolatilityToken",
                "label": "maxBuyingPremiumFeePercentage",
                "offset": 29,
                "slot": "1",
                "type": "t_uint16"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "encoding": "inplace",
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint168": {
            "encoding": "inplace",
            "label": "uint168",
            "numberOfBytes": "21"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "encoding": "inplace",
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "creationBlock": 62383618,
      "history": []
    },
    "CVIUSDCVolatilityToken_Proxy": {
      "address": "0x8096aD3107715747361acefE685943bFB427C722",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x8096aD3107715747361acefE685943bFB427C722",
        "transactionIndex": 1,
        "gasUsed": "5887474",
        "logsBloom": "0x000000000000000000000000000000004000010000000000008000000000001000000000000000000000000000000204000000000000100000000000002000004000000000000000000000000000020000010000000000000000080000000000000000000200080000000000000008000000008000000000000000000000004000000000010000000000000000000000000000000000800000000000048000000200000000000000000020000006000200004000000000000000000000000000000000200000000000800000000400000000001004002000040000000000200000100000000000000008000000000000000000000000a0000000000000000000",
        "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba",
        "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 29537989,
            "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
            "address": "0x8096aD3107715747361acefE685943bFB427C722",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x000000000000000000000000c53334ecc6f3d8e6ba96041528e40c48586b6c88"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537989,
            "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
            "address": "0x8096aD3107715747361acefE685943bFB427C722",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 1,
            "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537989,
            "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
            "address": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x0000000000000000000000008096ad3107715747361acefe685943bfb427c722",
              "0x000000000000000000000000cef38d86c40522a2b58d82b658c194a9eb340091"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 2,
            "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537989,
            "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
            "address": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x0000000000000000000000008096ad3107715747361acefe685943bfb427c722",
              "0x00000000000000000000000094bc0f48a76a93077bee50641f319d5690179c50"
            ],
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "logIndex": 3,
            "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537989,
            "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
            "address": "0x8096aD3107715747361acefE685943bFB427C722",
            "topics": [
              "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "logIndex": 4,
            "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 29537989,
            "transactionHash": "0xdde6198f0a210bd47d26e006a8b8673b8fe4c36edd460b123d50b2db070f9c36",
            "address": "0x8096aD3107715747361acefE685943bFB427C722",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
            ],
            "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d2669586e17fc93773cc637becfa983525501eb",
            "logIndex": 5,
            "blockHash": "0x771cd17fe80d4a6331f726a04f724400a3b6340c377dbd553f60b801143b43ba"
          }
        ],
        "blockNumber": 29537989,
        "cumulativeGasUsed": "5887474",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0xC53334eCC6f3D8E6ba96041528e40c48586B6c88",
        "0x9D2669586E17fC93773cc637becfA983525501Eb",
        "0xea357610000000000000000000000000ff970a61a04b1ca14834a43f5de4533ebddb5cc8000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000cef38d86c40522a2b58d82b658c194a9eb34009100000000000000000000000094bc0f48a76a93077bee50641f319d5690179c50000000000000000000000000e72cf93e7d6cacd66560ac9f2e5d63cdfa8b9fc600000000000000000000000044d8998fcb1f50d0c5463582d7ce9a4c27ba5671000000000000000000000000649813b6dc6111d67484badedd377d32e4505f85000000000000000000000000000000000000000000000000000000000000001743727970746f20566f6c6174696c69747920546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000443564f4c00000000000000000000000000000000000000000000000000000000"
      ],
      "numDeployments": 1,
      "solcInputHash": "0e89febeebc7444140de8e67c9067d2c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x93b4e21c931252739a1ec13ea31d3d35a5c068be3163ccab83e4d70c40355f03\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view virtual returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(Address.isContract(IBeacon(newBeacon).implementation()), \\\"ERC1967: beacon implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17668652127feebed0ce8d9431ef95ccc8c4292f03e3b8cf06c6ca16af396633\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xd5d1fd16e9faff7fcb3a52e02a8d49156f42a38a03f07b5f1810c21c2149a8ab\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3777e696b62134e6177440dbe6e6601c0c156a443f57167194b67e75527439de\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
      "deployedBytecode": "0x60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033",
      "devdoc": {
        "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
        "kind": "dev",
        "methods": {
          "admin()": {
            "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
          },
          "constructor": {
            "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
          },
          "implementation()": {
            "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      },
      "creationBlock": 29537989,
      "history": []
    },
    "DefaultProxyAdmin": {
      "address": "0x9D2669586E17fC93773cc637becfA983525501Eb",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "contract TransparentUpgradeableProxy",
              "name": "proxy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeProxyAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract TransparentUpgradeableProxy",
              "name": "proxy",
              "type": "address"
            }
          ],
          "name": "getProxyAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract TransparentUpgradeableProxy",
              "name": "proxy",
              "type": "address"
            }
          ],
          "name": "getProxyImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract TransparentUpgradeableProxy",
              "name": "proxy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "upgrade",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract TransparentUpgradeableProxy",
              "name": "proxy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        }
      ],
      "transactionHash": "0x26101f25048a377527693e9b08c0674f5c6a01ccbe1be94eae2fd2a221d885f4",
      "numDeployments": 1,
      "storageLayout": {
        "storage": [
          {
            "astId": 7,
            "contract": "solc_0.8/openzeppelin/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
            "label": "_owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          }
        }
      },
      "creationBlock": 4335095,
      "history": []
    },
    "FeesCollector": {
      "address": "0x94bC0F48A76A93077BEe50641F319D5690179C50",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "MAX_PERCENTAGE",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "allowedSenders",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "arbitrumContractAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "arbitrumInbox",
          "outputs": [
            {
              "internalType": "contract IInbox",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "buyBack",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "checkUpkeep",
          "outputs": [
            {
              "internalType": "bool",
              "name": "upkeepNeeded",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "convertUSDC",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "enableWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fundsSender",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "goviToken",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_usdcToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_goviToken",
              "type": "address"
            },
            {
              "internalType": "contract IFeesCollector",
              "name": "_staking",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingVaultAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_arbitrumContractAddress",
              "type": "address"
            },
            {
              "internalType": "contract IUniswapV2Router02",
              "name": "_router",
              "type": "address"
            },
            {
              "internalType": "contract AggregatorV3Interface",
              "name": "_usdcETHPriceAggregator",
              "type": "address"
            },
            {
              "internalType": "contract IInbox",
              "name": "_arbitrumInbox",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_treasuryAddress",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_wrappedToken",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxSlippage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxSubmissionFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minETHForTransfer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minUSDCForConversion",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "performUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "router",
          "outputs": [
            {
              "internalType": "contract IUniswapV2Router02",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_goviETHPrice",
              "type": "uint256"
            }
          ],
          "name": "sendFunds",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sendPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "name": "sendProfit",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sendToArbitrum",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isAllowed",
              "type": "bool"
            }
          ],
          "name": "setAllowedSenderAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newArbitrumContractAddress",
              "type": "address"
            }
          ],
          "name": "setArbitrumContractAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IInbox",
              "name": "_newArbitrumInbox",
              "type": "address"
            }
          ],
          "name": "setArbitrumInbox",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newBuyBack",
              "type": "bool"
            }
          ],
          "name": "setBuyBack",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newConvertUSDC",
              "type": "bool"
            }
          ],
          "name": "setConvertUSDC",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_enableWhitelist",
              "type": "bool"
            }
          ],
          "name": "setEnableWhitelist",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newFundsSender",
              "type": "address"
            }
          ],
          "name": "setFundsSender",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newMaxSlippagePercent",
              "type": "uint16"
            }
          ],
          "name": "setMaxSlippage",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMaxSubmissionFee",
              "type": "uint256"
            }
          ],
          "name": "setMaxSubmissionFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMinETHForTransfer",
              "type": "uint256"
            }
          ],
          "name": "setMinETHForTransfer",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMinUSDCForConversion",
              "type": "uint256"
            }
          ],
          "name": "setMinUDSCForConversion",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IUniswapV2Router02",
              "name": "_newRouter",
              "type": "address"
            }
          ],
          "name": "setRouter",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newSendPercentage",
              "type": "uint16"
            }
          ],
          "name": "setSendPercentage",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newSendToArbitrum",
              "type": "bool"
            }
          ],
          "name": "setSendToArbitrum",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFeesCollector",
              "name": "_newStaking",
              "type": "address"
            }
          ],
          "name": "setStaking",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newStakingVaultAddress",
              "type": "address"
            }
          ],
          "name": "setStakingVaultAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newTreasuryAddress",
              "type": "address"
            }
          ],
          "name": "setTreasuryAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newTreasuryTransferPercentage",
              "type": "uint16"
            }
          ],
          "name": "setTreasuryTransferPercentage",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract AggregatorV3Interface",
              "name": "_newUSDCETHPriceAggregator",
              "type": "address"
            }
          ],
          "name": "setUSDCETHPriceAggregator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newUseNative",
              "type": "bool"
            }
          ],
          "name": "setUseNative",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_newWrappedToken",
              "type": "address"
            }
          ],
          "name": "setWrappedToken",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "staking",
          "outputs": [
            {
              "internalType": "contract IFeesCollector",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stakingVaultAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "treasuryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "treasuryTransferPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "usdcETHPriceAggregator",
          "outputs": [
            {
              "internalType": "contract AggregatorV3Interface",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "usdcToken",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "useNative",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "wrappedToken",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0x04c726a6a457571bf39bd705cfdc51ec61ab02ab258284b0c731a19f36eeea88",
      "numDeployments": 1,
      "implementation": "0xB0b2AC2aF0c5954B6B0d110eEdA2CeB11A382c5e",
      "creationBlock": 8267959,
      "history": []
    },
    "FeesCollector_Implementation": {
      "address": "0xB0b2AC2aF0c5954B6B0d110eEdA2CeB11A382c5e",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "MAX_PERCENTAGE",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "allowedSenders",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "arbitrumContractAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "arbitrumInbox",
          "outputs": [
            {
              "internalType": "contract IInbox",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "buyBack",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "checkUpkeep",
          "outputs": [
            {
              "internalType": "bool",
              "name": "upkeepNeeded",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "convertUSDC",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "enableWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fundsSender",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "goviToken",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_usdcToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_goviToken",
              "type": "address"
            },
            {
              "internalType": "contract IFeesCollector",
              "name": "_staking",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingVaultAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_arbitrumContractAddress",
              "type": "address"
            },
            {
              "internalType": "contract IUniswapV2Router02",
              "name": "_router",
              "type": "address"
            },
            {
              "internalType": "contract AggregatorV3Interface",
              "name": "_usdcETHPriceAggregator",
              "type": "address"
            },
            {
              "internalType": "contract IInbox",
              "name": "_arbitrumInbox",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_treasuryAddress",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_wrappedToken",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxSlippage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxSubmissionFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minETHForTransfer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minUSDCForConversion",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "performUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "router",
          "outputs": [
            {
              "internalType": "contract IUniswapV2Router02",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_goviETHPrice",
              "type": "uint256"
            }
          ],
          "name": "sendFunds",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sendPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "name": "sendProfit",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sendToArbitrum",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isAllowed",
              "type": "bool"
            }
          ],
          "name": "setAllowedSenderAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newArbitrumContractAddress",
              "type": "address"
            }
          ],
          "name": "setArbitrumContractAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IInbox",
              "name": "_newArbitrumInbox",
              "type": "address"
            }
          ],
          "name": "setArbitrumInbox",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newBuyBack",
              "type": "bool"
            }
          ],
          "name": "setBuyBack",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newConvertUSDC",
              "type": "bool"
            }
          ],
          "name": "setConvertUSDC",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_enableWhitelist",
              "type": "bool"
            }
          ],
          "name": "setEnableWhitelist",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newFundsSender",
              "type": "address"
            }
          ],
          "name": "setFundsSender",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newMaxSlippagePercent",
              "type": "uint16"
            }
          ],
          "name": "setMaxSlippage",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMaxSubmissionFee",
              "type": "uint256"
            }
          ],
          "name": "setMaxSubmissionFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMinETHForTransfer",
              "type": "uint256"
            }
          ],
          "name": "setMinETHForTransfer",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMinUSDCForConversion",
              "type": "uint256"
            }
          ],
          "name": "setMinUDSCForConversion",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IUniswapV2Router02",
              "name": "_newRouter",
              "type": "address"
            }
          ],
          "name": "setRouter",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newSendPercentage",
              "type": "uint16"
            }
          ],
          "name": "setSendPercentage",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newSendToArbitrum",
              "type": "bool"
            }
          ],
          "name": "setSendToArbitrum",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFeesCollector",
              "name": "_newStaking",
              "type": "address"
            }
          ],
          "name": "setStaking",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newStakingVaultAddress",
              "type": "address"
            }
          ],
          "name": "setStakingVaultAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newTreasuryAddress",
              "type": "address"
            }
          ],
          "name": "setTreasuryAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_newTreasuryTransferPercentage",
              "type": "uint16"
            }
          ],
          "name": "setTreasuryTransferPercentage",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract AggregatorV3Interface",
              "name": "_newUSDCETHPriceAggregator",
              "type": "address"
            }
          ],
          "name": "setUSDCETHPriceAggregator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_newUseNative",
              "type": "bool"
            }
          ],
          "name": "setUseNative",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_newWrappedToken",
              "type": "address"
            }
          ],
          "name": "setWrappedToken",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "staking",
          "outputs": [
            {
              "internalType": "contract IFeesCollector",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stakingVaultAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "treasuryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "treasuryTransferPercentage",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "usdcETHPriceAggregator",
          "outputs": [
            {
              "internalType": "contract AggregatorV3Interface",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "usdcToken",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "useNative",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "wrappedToken",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0x6b4e224ceb5e6bdd4209d5fa9d067a84ce1373dc3da01aef3bbe2747d557924b",
      "numDeployments": 1,
      "storageLayout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)966",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:18"
          },
          {
            "label": "goviToken",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20Upgradeable)966",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:19"
          },
          {
            "label": "wrappedToken",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IERC20Upgradeable)966",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:20"
          },
          {
            "label": "staking",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IFeesCollector)16286",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:21"
          },
          {
            "label": "stakingVaultAddress",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:22"
          },
          {
            "label": "arbitrumContractAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:23"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IUniswapV2Router02)15597",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:24"
          },
          {
            "label": "usdcETHPriceAggregator",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(AggregatorV3Interface)15700",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:25"
          },
          {
            "label": "arbitrumInbox",
            "offset": 0,
            "slot": "109",
            "type": "t_contract(IInbox)16438",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:26"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:27"
          },
          {
            "label": "treasuryTransferPercentage",
            "offset": 20,
            "slot": "110",
            "type": "t_uint16",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:29"
          },
          {
            "label": "maxSlippage",
            "offset": 22,
            "slot": "110",
            "type": "t_uint16",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:30"
          },
          {
            "label": "minETHForTransfer",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:32"
          },
          {
            "label": "minUSDCForConversion",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:33"
          },
          {
            "label": "maxSubmissionFee",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:34"
          },
          {
            "label": "enableWhitelist",
            "offset": 0,
            "slot": "114",
            "type": "t_bool",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:36"
          },
          {
            "label": "sendToArbitrum",
            "offset": 1,
            "slot": "114",
            "type": "t_bool",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:37"
          },
          {
            "label": "convertUSDC",
            "offset": 2,
            "slot": "114",
            "type": "t_bool",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:38"
          },
          {
            "label": "buyBack",
            "offset": 3,
            "slot": "114",
            "type": "t_bool",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:39"
          },
          {
            "label": "useNative",
            "offset": 4,
            "slot": "114",
            "type": "t_bool",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:40"
          },
          {
            "label": "fundsSender",
            "offset": 5,
            "slot": "114",
            "type": "t_address",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:42"
          },
          {
            "label": "allowedSenders",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:43"
          },
          {
            "label": "sendPercentage",
            "offset": 0,
            "slot": "116",
            "type": "t_uint16",
            "contract": "FeesCollector",
            "src": "contracts/staking/FeesCollector.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)15700": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)966": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFeesCollector)16286": {
            "label": "contract IFeesCollector",
            "numberOfBytes": "20"
          },
          "t_contract(IInbox)16438": {
            "label": "contract IInbox",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)15597": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      },
      "creationBlock": 8267958,
      "history": []
    },
    "FeesCollector_Proxy": {
      "address": "0x94bC0F48A76A93077BEe50641F319D5690179C50",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0x04c726a6a457571bf39bd705cfdc51ec61ab02ab258284b0c731a19f36eeea88",
      "numDeployments": 1,
      "creationBlock": 8267959,
      "history": []
    },
    "GOVI": {
      "address": "0x07e49d5de43dda6162fa28d24d5935c151875283",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0xdd62ed3e"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0x095ea7b3"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x70a08231"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x313ce567"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0xa457c2d7"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0x39509351"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x06fdde03"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x8da5cb5b"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0x715018a6"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x95d89b41"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x18160ddd"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0xa9059cbb"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0x23b872dd"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0xf2fde38b"
        }
      ],
      "transactionHash": "0xb3b6127cecae4fbc4af500695b634cbaf99704cc50d33a5b5dada0788cf5dd02",
      "numDeployments": 1,
      "creationBlock": 1216942,
      "history": []
    },
    "GOVIETH-StakingRewards": {
      "address": "0x88D01eF3a4D586D5e4ce30357ec57B073D45ff9d",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardsDistribution",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardsToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor",
          "signature": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "oldOwner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnerChanged",
          "type": "event",
          "signature": "0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnerNominated",
          "type": "event",
          "signature": "0x906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isPaused",
              "type": "bool"
            }
          ],
          "name": "PauseChanged",
          "type": "event",
          "signature": "0x8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Recovered",
          "type": "event",
          "signature": "0x8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ],
          "name": "RewardAdded",
          "type": "event",
          "signature": "0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ],
          "name": "RewardPaid",
          "type": "event",
          "signature": "0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newDuration",
              "type": "uint256"
            }
          ],
          "name": "RewardsDurationUpdated",
          "type": "event",
          "signature": "0xfb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Staked",
          "type": "event",
          "signature": "0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdrawn",
          "type": "event",
          "signature": "0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5"
        },
        {
          "inputs": [],
          "name": "acceptOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0x79ba5097"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x70a08231"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "earned",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x008cc262"
        },
        {
          "inputs": [],
          "name": "exit",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0xe9fad8ee"
        },
        {
          "inputs": [],
          "name": "getReward",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0x3d18b912"
        },
        {
          "inputs": [],
          "name": "getRewardForDuration",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x1c1f78eb"
        },
        {
          "inputs": [],
          "name": "lastPauseTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x91b4ded9"
        },
        {
          "inputs": [],
          "name": "lastTimeRewardApplicable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x80faa57d"
        },
        {
          "inputs": [],
          "name": "lastUpdateTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0xc8f33c91"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "name": "nominateNewOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0x1627540c"
        },
        {
          "inputs": [],
          "name": "nominatedOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x53a47bb7"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ],
          "name": "notifyRewardAmount",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0x3c6b16ab"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x8da5cb5b"
        },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x5c975abb"
        },
        {
          "inputs": [],
          "name": "periodFinish",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0xebe2b12b"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ],
          "name": "recoverERC20",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0x8980f11f"
        },
        {
          "inputs": [],
          "name": "rewardPerToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0xcd3daf9d"
        },
        {
          "inputs": [],
          "name": "rewardPerTokenStored",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0xdf136d65"
        },
        {
          "inputs": [],
          "name": "rewardRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x7b0a47ee"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "rewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x0700037d"
        },
        {
          "inputs": [],
          "name": "rewardsDistribution",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x3fc6df6e"
        },
        {
          "inputs": [],
          "name": "rewardsDuration",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x386a9525"
        },
        {
          "inputs": [],
          "name": "rewardsToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0xd1af0c7d"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_paused",
              "type": "bool"
            }
          ],
          "name": "setPaused",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0x16c38b3c"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rewardsDistribution",
              "type": "address"
            }
          ],
          "name": "setRewardsDistribution",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0x19762143"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsDuration",
              "type": "uint256"
            }
          ],
          "name": "setRewardsDuration",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0xcc1a378f"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "stake",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0xa694fc3a"
        },
        {
          "inputs": [],
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x72f702f3"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x18160ddd"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "userRewardPerTokenPaid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "constant": true,
          "signature": "0x8b876347"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "withdraw",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "signature": "0x2e1a7d4d"
        }
      ],
      "transactionHash": "0x7ebf62fd77b98fc72795150279c1f398ca0d73f7dd1130e48c90b8ebc66b5b82",
      "numDeployments": 1,
      "creationBlock": 7471531,
      "history": []
    },
    "KeepersFeeVault": {
      "address": "0x4e20637dc4497AFda5a5e1C7812e75cb14FE2375",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_usdcToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "extractUSDC",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "extractor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newExtractor",
              "type": "address"
            }
          ],
          "name": "setExtractor",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "usdcToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0xe2c23ad3ba9daec011cb8a4f578e3d823913e0ccbf86f20e52b25ac637526412",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x4e20637dc4497AFda5a5e1C7812e75cb14FE2375",
        "transactionIndex": 1,
        "gasUsed": "3178032",
        "logsBloom": "0x
        "blockHash": "0x55f3e37a8b4d71b66d48874f6491009f2c334be6478086c05fec409ac0234aad",
        "transactionHash": "0xe2c23ad3ba9daec011cb8a4f578e3d823913e0ccbf86f20e52b25ac637526412",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 29537955,
            "transactionHash": "0xe2c23ad3ba9daec011cb8a4f578e3d823913e0ccbf86f20e52b25ac637526412",
            "address": "0x4e20637dc4497AFda5a5e1C7812e75cb14FE2375",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x55f3e37a8b4d71b66d48874f6491009f2c334be6478086c05fec409ac0234aad"
          }
        ],
        "blockNumber": 29537955,
        "cumulativeGasUsed": "3178032",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0xff970a61a04b1ca14834a43f5de4533ebddb5cc8"
      ],
      "numDeployments": 1,
      "solcInputHash": "8d836039a3333aa7ff1a69dee5a5f235",
      "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_usdcToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"extractUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extractor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newExtractor\",\"type\":\"address\"}],\"name\":\"setExtractor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@coti-cvi/contracts-cvi/contracts/KeepersFeeVault.sol\":\"KeepersFeeVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@coti-cvi/contracts-cvi/contracts/KeepersFeeVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IKeepersFeeVault.sol\\\";\\n\\ncontract KeepersFeeVault is IKeepersFeeVault, Ownable {\\n\\n\\tusing SafeERC20 for IERC20;\\n\\n\\tIERC20 public usdcToken;\\n\\taddress public extractor;\\n\\n\\tconstructor(IERC20 _usdcToken) {\\n        usdcToken = _usdcToken;\\n    }\\n\\n\\tfunction extractUSDC() external override {\\n\\t\\trequire(msg.sender == extractor, \\\"Not allowed\\\");\\n\\n        uint256 balance = usdcToken.balanceOf(address(this));\\n        require(balance > 0, \\\"No funds\\\");\\n\\n    \\tusdcToken.safeTransfer(msg.sender, balance);\\n    }\\n\\n    function setExtractor(address _newExtractor) external override onlyOwner {\\n    \\textractor = _newExtractor;\\n    }\\n}\\n\",\"keccak256\":\"0x8eba62f566dc0e68b0cfff66bd06505514eea5c5234b7721f5983cb532daf81f\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IKeepersFeeVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IKeepersFeeVault {\\n\\tfunction extractUSDC() external;\\n    function setExtractor(address extractor) external;\\n}\",\"keccak256\":\"0x40230f8a85f8683fe10df9bf2a1515740d53197c3e043c93a366a8e4cb1ea1f8\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x608060405234801561001057600080fd5b5060405161087638038061087683398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100be578081fd5b81516001600160a01b03811681146100d4578182fd5b9392505050565b61078c806100ea6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100ce5780638da5cb5b146100d6578063a944ff84146100e7578063f2fde38b146100fa57600080fd5b806311eac8551461008257806319d16c49146100b1578063661e25c9146100c4575b600080fd5b600154610095906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600254610095906001600160a01b031681565b6100cc61010d565b005b6100cc61022d565b6000546001600160a01b0316610095565b6100cc6100f5366004610643565b610263565b6100cc610108366004610643565b6102af565b6002546001600160a01b0316331461015a5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561019e57600080fd5b505afa1580156101b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d6919061068a565b9050600081116102135760405162461bcd60e51b81526020600482015260086024820152674e6f2066756e647360c01b6044820152606401610151565b60015461022a906001600160a01b03163383610347565b50565b6000546001600160a01b031633146102575760405162461bcd60e51b8152600401610151906106f1565b610261600061039e565b565b6000546001600160a01b0316331461028d5760405162461bcd60e51b8152600401610151906106f1565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102d95760405162461bcd60e51b8152600401610151906106f1565b6001600160a01b03811661033e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610151565b61022a8161039e565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103999084906103ee565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610443826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104c09092919063ffffffff16565b8051909150156103995780806020019051810190610461919061066a565b6103995760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610151565b60606104cf84846000856104d9565b90505b9392505050565b60608247101561053a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610151565b6001600160a01b0385163b6105915760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610151565b600080866001600160a01b031685876040516105ad91906106a2565b60006040518083038185875af1925050503d80600081146105ea576040519150601f19603f3d011682016040523d82523d6000602084013e6105ef565b606091505b50915091506105ff82828661060a565b979650505050505050565b606083156106195750816104d2565b8251156106295782518084602001fd5b8160405162461bcd60e51b815260040161015191906106be565b600060208284031215610654578081fd5b81356001600160a01b03811681146104d2578182fd5b60006020828403121561067b578081fd5b815180151581146104d2578182fd5b60006020828403121561069b578081fd5b5051919050565b600082516106b4818460208701610726565b9190910192915050565b60208152600082518060208401526106dd816040850160208701610726565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60005b83811015610741578181015183820152602001610729565b83811115610750576000848401525b5050505056fea264697066735822122039e9cf149c6a5ba231ce894700448bf8667832bd0a11c6ad612178656663900664736f6c63430008040033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100ce5780638da5cb5b146100d6578063a944ff84146100e7578063f2fde38b146100fa57600080fd5b806311eac8551461008257806319d16c49146100b1578063661e25c9146100c4575b600080fd5b600154610095906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600254610095906001600160a01b031681565b6100cc61010d565b005b6100cc61022d565b6000546001600160a01b0316610095565b6100cc6100f5366004610643565b610263565b6100cc610108366004610643565b6102af565b6002546001600160a01b0316331461015a5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561019e57600080fd5b505afa1580156101b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d6919061068a565b9050600081116102135760405162461bcd60e51b81526020600482015260086024820152674e6f2066756e647360c01b6044820152606401610151565b60015461022a906001600160a01b03163383610347565b50565b6000546001600160a01b031633146102575760405162461bcd60e51b8152600401610151906106f1565b610261600061039e565b565b6000546001600160a01b0316331461028d5760405162461bcd60e51b8152600401610151906106f1565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102d95760405162461bcd60e51b8152600401610151906106f1565b6001600160a01b03811661033e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610151565b61022a8161039e565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103999084906103ee565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610443826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104c09092919063ffffffff16565b8051909150156103995780806020019051810190610461919061066a565b6103995760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610151565b60606104cf84846000856104d9565b90505b9392505050565b60608247101561053a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610151565b6001600160a01b0385163b6105915760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610151565b600080866001600160a01b031685876040516105ad91906106a2565b60006040518083038185875af1925050503d80600081146105ea576040519150601f19603f3d011682016040523d82523d6000602084013e6105ef565b606091505b50915091506105ff82828661060a565b979650505050505050565b606083156106195750816104d2565b8251156106295782518084602001fd5b8160405162461bcd60e51b815260040161015191906106be565b600060208284031215610654578081fd5b81356001600160a01b03811681146104d2578182fd5b60006020828403121561067b578081fd5b815180151581146104d2578182fd5b60006020828403121561069b578081fd5b5051919050565b600082516106b4818460208701610726565b9190910192915050565b60208152600082518060208401526106dd816040850160208701610726565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60005b83811015610741578181015183820152602001610729565b83811115610750576000848401525b5050505056fea264697066735822122039e9cf149c6a5ba231ce894700448bf8667832bd0a11c6ad612178656663900664736f6c63430008040033",
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 37156,
            "contract": "@coti-cvi/contracts-cvi/contracts/KeepersFeeVault.sol:KeepersFeeVault",
            "label": "_owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2910,
            "contract": "@coti-cvi/contracts-cvi/contracts/KeepersFeeVault.sol:KeepersFeeVault",
            "label": "usdcToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)37957"
          },
          {
            "astId": 2912,
            "contract": "@coti-cvi/contracts-cvi/contracts/KeepersFeeVault.sol:KeepersFeeVault",
            "label": "extractor",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)37957": {
            "encoding": "inplace",
            "label": "contract IERC20",
            "numberOfBytes": "20"
          }
        }
      },
      "creationBlock": 29537955,
      "history": [
        {
          "blockNumber": 27433752,
          "address": "0x700E6331A98115E281770A61Dd4760fB514BE415"
        },
        {
          "blockNumber": 21240269,
          "address": "0x006ffed367F1dcA935261fAe2eDDdc676615027c"
        }
      ]
    },
    "PlatformHelper": {
      "address": "0xdc187587e7fb486eDf17429d30b66c2291636cdE",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isKeepers",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_volTokensAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_timeWindow",
              "type": "uint256"
            }
          ],
          "name": "calculatePreBurn",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "netBurnAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expectedUSDCAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "closeFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeWindowFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "keepersFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IPlatformHelper.PreBurnResult",
              "name": "result",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isKeepers",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_usdcAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_timeWindow",
              "type": "uint256"
            }
          ],
          "name": "calculatePreMint",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "netMintAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expectedVolTokensAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyingPremiumFeePercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "openPositionFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyingPremiumFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeWindowFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "keepersFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IPlatformHelper.PreMintResult",
              "name": "result",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "calculateStakingAPR",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "apr",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isKeepers",
              "type": "bool"
            }
          ],
          "name": "checkBurnRequest",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "netBurnAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expectedUSDCAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "closeFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timePenaltyFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "keepersFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IPlatformHelper.CheckBurnResult",
              "name": "result",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isKeepers",
              "type": "bool"
            }
          ],
          "name": "checkMintRequest",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "netMintAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expectedVolTokensAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyingPremiumFeePercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "openPositionFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyingPremiumFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timePenaltyFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "keepersFee",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "insufficientLiquidity",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "insufficientSlippage",
                  "type": "bool"
                }
              ],
              "internalType": "struct IPlatformHelper.CheckMintResult",
              "name": "result",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPlatform",
              "name": "_platform",
              "type": "address"
            }
          ],
          "name": "collateralRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_goviAmount",
              "type": "uint256"
            }
          ],
          "name": "convertGOVIToXGOVI",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "xGOVIAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_xGOVIAmount",
              "type": "uint256"
            }
          ],
          "name": "convertXGOVIToGOVI",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "goviAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPlatform",
              "name": "_platform",
              "type": "address"
            }
          ],
          "name": "dailyFundingFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "fundingFeePercent",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPlatform",
              "name": "_platform",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_minCVI",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_maxCVI",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "_minCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxCollateral",
              "type": "uint256"
            }
          ],
          "name": "fundingFeeValues",
          "outputs": [
            {
              "internalType": "uint256[][]",
              "name": "fundingFeeRatePercent",
              "type": "uint256[][]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_govi",
              "type": "address"
            },
            {
              "internalType": "contract IStaking",
              "name": "_staking",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            }
          ],
          "name": "maxMintAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IThetaVault",
              "name": "_thetaVault",
              "type": "address"
            }
          ],
          "name": "maxWithdrawAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxUSDCAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPlatform",
              "name": "_platform",
              "type": "address"
            }
          ],
          "name": "premiumFeeCollateralRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "name": "stakedGOVI",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "share",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IThetaVault",
              "name": "_thetaVault",
              "type": "address"
            }
          ],
          "name": "volTokenDexPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            }
          ],
          "name": "volTokenIntrinsicPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IThetaVault",
              "name": "_thetaVault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_withdrawAmount",
              "type": "uint256"
            }
          ],
          "name": "willWithdrawSucceed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0x7d150b7a6b0c699fea5aa31b367d9f885e79fc759db11e517141ce29400f6805",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0xdc187587e7fb486eDf17429d30b66c2291636cdE",
        "transactionIndex": 1,
        "gasUsed": "5202009",
        "logsBloom": "0x
        "blockHash": "0x9887ea280132d8106e530fbf2320938fc2d06156af7df0b7909e30c94900973b",
        "transactionHash": "0x7d150b7a6b0c699fea5aa31b367d9f885e79fc759db11e517141ce29400f6805",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 38037572,
            "transactionHash": "0x7d150b7a6b0c699fea5aa31b367d9f885e79fc759db11e517141ce29400f6805",
            "address": "0xdc187587e7fb486eDf17429d30b66c2291636cdE",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x000000000000000000000000a1ca0c206f60a52378fc38f99c845055e306fd6d"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x9887ea280132d8106e530fbf2320938fc2d06156af7df0b7909e30c94900973b"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 38037572,
            "transactionHash": "0x7d150b7a6b0c699fea5aa31b367d9f885e79fc759db11e517141ce29400f6805",
            "address": "0xdc187587e7fb486eDf17429d30b66c2291636cdE",
            "topics": [
              "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "logIndex": 1,
            "blockHash": "0x9887ea280132d8106e530fbf2320938fc2d06156af7df0b7909e30c94900973b"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 38037572,
            "transactionHash": "0x7d150b7a6b0c699fea5aa31b367d9f885e79fc759db11e517141ce29400f6805",
            "address": "0xdc187587e7fb486eDf17429d30b66c2291636cdE",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
            ],
            "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d2669586e17fc93773cc637becfa983525501eb",
            "logIndex": 2,
            "blockHash": "0x9887ea280132d8106e530fbf2320938fc2d06156af7df0b7909e30c94900973b"
          }
        ],
        "blockNumber": 38037572,
        "cumulativeGasUsed": "5202009",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0xA1cA0c206F60a52378FC38f99c845055E306fD6d",
        "0x9D2669586E17fC93773cc637becfA983525501Eb",
        "0x485cc95500000000000000000000000007e49d5de43dda6162fa28d24d5935c151875283000000000000000000000000db3e7deab380b43189a7bc291fa2afeaa938dcc3"
      ],
      "numDeployments": 2,
      "solcInputHash": "0e89febeebc7444140de8e67c9067d2c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x93b4e21c931252739a1ec13ea31d3d35a5c068be3163ccab83e4d70c40355f03\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view virtual returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(Address.isContract(IBeacon(newBeacon).implementation()), \\\"ERC1967: beacon implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17668652127feebed0ce8d9431ef95ccc8c4292f03e3b8cf06c6ca16af396633\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xd5d1fd16e9faff7fcb3a52e02a8d49156f42a38a03f07b5f1810c21c2149a8ab\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3777e696b62134e6177440dbe6e6601c0c156a443f57167194b67e75527439de\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
      "deployedBytecode": "0x60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033",
      "execute": {
        "methodName": "initialize",
        "args": [
          "0x07e49d5de43dda6162fa28d24d5935c151875283",
          "0xDb3e7deAb380B43189A7Bc291fa2AFeAA938dCc3"
        ]
      },
      "implementation": "0x9Bf7ECA730b5aDeEc8E91A804e2209B4b27F4237",
      "devdoc": {
        "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
        "kind": "dev",
        "methods": {
          "admin()": {
            "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
          },
          "constructor": {
            "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
          },
          "implementation()": {
            "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      },
      "creationBlock": 38037572,
      "history": [
        {
          "blockNumber": 36889752,
          "address": "0xDa0f4ea49ca21F134c17a963d46DFC91C4462Cb8",
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_govi",
                  "type": "address"
                },
                {
                  "internalType": "contract IStaking",
                  "name": "_staking",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IVolatilityToken",
                  "name": "_volToken",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_isKeepers",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "_volTokensAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeWindow",
                  "type": "uint256"
                }
              ],
              "name": "calculatePreBurn",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "netBurnAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expectedUSDCAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "closeFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timeWindowFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "keepersFee",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IPlatformHelper.PreBurnResult",
                  "name": "result",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IVolatilityToken",
                  "name": "_volToken",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_isKeepers",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "_usdcAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeWindow",
                  "type": "uint256"
                }
              ],
              "name": "calculatePreMint",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "netMintAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expectedVolTokensAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "buyingPremiumFeePercentage",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "openPositionFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "buyingPremiumFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timeWindowFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "keepersFee",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IPlatformHelper.PreMintResult",
                  "name": "result",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "calculateStakingAPR",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "apr",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IVolatilityToken",
                  "name": "_volToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_requestId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_isKeepers",
                  "type": "bool"
                }
              ],
              "name": "checkBurnRequest",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "netBurnAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expectedUSDCAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "closeFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timePenaltyFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "keepersFee",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IPlatformHelper.CheckBurnResult",
                  "name": "result",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IVolatilityToken",
                  "name": "_volToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_requestId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_isKeepers",
                  "type": "bool"
                }
              ],
              "name": "checkMintRequest",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "netMintAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expectedVolTokensAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "buyingPremiumFeePercentage",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "openPositionFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "buyingPremiumFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timePenaltyFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "keepersFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "insufficientLiquidity",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "insufficientSlippage",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IPlatformHelper.CheckMintResult",
                  "name": "result",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IPlatform",
                  "name": "_platform",
                  "type": "address"
                }
              ],
              "name": "collateralRatio",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_goviAmount",
                  "type": "uint256"
                }
              ],
              "name": "convertGOVIToXGOVI",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "xGOVIAmount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_xGOVIAmount",
                  "type": "uint256"
                }
              ],
              "name": "convertXGOVIToGOVI",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "goviAmount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IPlatform",
                  "name": "_platform",
                  "type": "address"
                }
              ],
              "name": "dailyFundingFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "fundingFeePercent",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IPlatform",
                  "name": "_platform",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "_minCVI",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "_maxCVI",
                  "type": "uint32"
                },
                {
                  "internalType": "uint256",
                  "name": "_minCollateral",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxCollateral",
                  "type": "uint256"
                }
              ],
              "name": "fundingFeeValues",
              "outputs": [
                {
                  "internalType": "uint256[][]",
                  "name": "fundingFeeRatePercent",
                  "type": "uint256[][]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IVolatilityToken",
                  "name": "_volToken",
                  "type": "address"
                }
              ],
              "name": "maxMintAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IThetaVault",
                  "name": "_thetaVault",
                  "type": "address"
                }
              ],
              "name": "maxWithdrawAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxUSDCAmount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IPlatform",
                  "name": "_platform",
                  "type": "address"
                }
              ],
              "name": "premiumFeeCollateralRatio",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_account",
                  "type": "address"
                }
              ],
              "name": "stakedGOVI",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IThetaVault",
                  "name": "_thetaVault",
                  "type": "address"
                }
              ],
              "name": "volTokenDexPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IVolatilityToken",
                  "name": "_volToken",
                  "type": "address"
                }
              ],
              "name": "volTokenIntrinsicPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ]
        },
        {
          "blockNumber": 29537857,
          "address": "0x41E60F8fb87fbF9CB3a65EcD00c3292F814E3B86"
        },
        {
          "blockNumber": 27433565,
          "address": "0xD2b4EdD59C904BcD99ed87917473a1F59faB6B3C"
        },
        {
          "blockNumber": 21238879,
          "address": "0xc026e41118d073590F26B55374d5BC459b94d443"
        }
      ]
    },
    "PlatformHelper_Implementation": {
      "address": "0x9Bf7ECA730b5aDeEc8E91A804e2209B4b27F4237",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isKeepers",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_volTokensAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_timeWindow",
              "type": "uint256"
            }
          ],
          "name": "calculatePreBurn",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "netBurnAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expectedUSDCAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "closeFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeWindowFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "keepersFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IPlatformHelper.PreBurnResult",
              "name": "result",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isKeepers",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_usdcAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_timeWindow",
              "type": "uint256"
            }
          ],
          "name": "calculatePreMint",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "netMintAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expectedVolTokensAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyingPremiumFeePercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "openPositionFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyingPremiumFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeWindowFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "keepersFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IPlatformHelper.PreMintResult",
              "name": "result",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "calculateStakingAPR",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "apr",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isKeepers",
              "type": "bool"
            }
          ],
          "name": "checkBurnRequest",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "netBurnAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expectedUSDCAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "closeFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timePenaltyFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "keepersFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IPlatformHelper.CheckBurnResult",
              "name": "result",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isKeepers",
              "type": "bool"
            }
          ],
          "name": "checkMintRequest",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "netMintAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expectedVolTokensAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyingPremiumFeePercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "openPositionFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyingPremiumFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timePenaltyFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "keepersFee",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "insufficientLiquidity",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "insufficientSlippage",
                  "type": "bool"
                }
              ],
              "internalType": "struct IPlatformHelper.CheckMintResult",
              "name": "result",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPlatform",
              "name": "_platform",
              "type": "address"
            }
          ],
          "name": "collateralRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_goviAmount",
              "type": "uint256"
            }
          ],
          "name": "convertGOVIToXGOVI",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "xGOVIAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_xGOVIAmount",
              "type": "uint256"
            }
          ],
          "name": "convertXGOVIToGOVI",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "goviAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPlatform",
              "name": "_platform",
              "type": "address"
            }
          ],
          "name": "dailyFundingFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "fundingFeePercent",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPlatform",
              "name": "_platform",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_minCVI",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_maxCVI",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "_minCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxCollateral",
              "type": "uint256"
            }
          ],
          "name": "fundingFeeValues",
          "outputs": [
            {
              "internalType": "uint256[][]",
              "name": "fundingFeeRatePercent",
              "type": "uint256[][]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_govi",
              "type": "address"
            },
            {
              "internalType": "contract IStaking",
              "name": "_staking",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            }
          ],
          "name": "maxMintAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IThetaVault",
              "name": "_thetaVault",
              "type": "address"
            }
          ],
          "name": "maxWithdrawAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxUSDCAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPlatform",
              "name": "_platform",
              "type": "address"
            }
          ],
          "name": "premiumFeeCollateralRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "name": "stakedGOVI",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "share",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IThetaVault",
              "name": "_thetaVault",
              "type": "address"
            }
          ],
          "name": "volTokenDexPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IVolatilityToken",
              "name": "_volToken",
              "type": "address"
            }
          ],
          "name": "volTokenIntrinsicPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IThetaVault",
              "name": "_thetaVault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_withdrawAmount",
              "type": "uint256"
            }
          ],
          "name": "willWithdrawSucceed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0xa33180c6a308f5661d90fdf6d2f784ff1ad72dd1d359d0c3569f292a9a14b64e",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0x9Bf7ECA730b5aDeEc8E91A804e2209B4b27F4237",
        "transactionIndex": 1,
        "gasUsed": "41381345",
        "logsBloom": "0x
        "blockHash": "0x1e01b30962104b17e9a34ddc2fe9be9522dc55ee74e798cfcdb4ad32470d17cf",
        "transactionHash": "0xa33180c6a308f5661d90fdf6d2f784ff1ad72dd1d359d0c3569f292a9a14b64e",
        "logs": [],
        "blockNumber": 63142694,
        "cumulativeGasUsed": "41381345",
        "status": 1,
        "byzantium": true
      },
      "args": [],
      "numDeployments": 2,
      "solcInputHash": "c2ba4d0c07e4b54c5ad062b2b2a03c0c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IVolatilityToken\",\"name\":\"_volToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isKeepers\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_volTokensAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeWindow\",\"type\":\"uint256\"}],\"name\":\"calculatePreBurn\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"netBurnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedUSDCAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeWindowFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"keepersFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPlatformHelper.PreBurnResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVolatilityToken\",\"name\":\"_volToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isKeepers\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_usdcAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeWindow\",\"type\":\"uint256\"}],\"name\":\"calculatePreMint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"netMintAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedVolTokensAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyingPremiumFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPositionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyingPremiumFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeWindowFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"keepersFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPlatformHelper.PreMintResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateStakingAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVolatilityToken\",\"name\":\"_volToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isKeepers\",\"type\":\"bool\"}],\"name\":\"checkBurnRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"netBurnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedUSDCAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timePenaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"keepersFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPlatformHelper.CheckBurnResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVolatilityToken\",\"name\":\"_volToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isKeepers\",\"type\":\"bool\"}],\"name\":\"checkMintRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"netMintAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedVolTokensAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyingPremiumFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPositionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyingPremiumFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timePenaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"keepersFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"insufficientLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"insufficientSlippage\",\"type\":\"bool\"}],\"internalType\":\"struct IPlatformHelper.CheckMintResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPlatform\",\"name\":\"_platform\",\"type\":\"address\"}],\"name\":\"collateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goviAmount\",\"type\":\"uint256\"}],\"name\":\"convertGOVIToXGOVI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xGOVIAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_xGOVIAmount\",\"type\":\"uint256\"}],\"name\":\"convertXGOVIToGOVI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goviAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPlatform\",\"name\":\"_platform\",\"type\":\"address\"}],\"name\":\"dailyFundingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fundingFeePercent\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPlatform\",\"name\":\"_platform\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minCVI\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_maxCVI\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_minCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxCollateral\",\"type\":\"uint256\"}],\"name\":\"fundingFeeValues\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"fundingFeeRatePercent\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_govi\",\"type\":\"address\"},{\"internalType\":\"contract IStaking\",\"name\":\"_staking\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVolatilityToken\",\"name\":\"_volToken\",\"type\":\"address\"}],\"name\":\"maxMintAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IThetaVault\",\"name\":\"_thetaVault\",\"type\":\"address\"}],\"name\":\"maxWithdrawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUSDCAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPlatform\",\"name\":\"_platform\",\"type\":\"address\"}],\"name\":\"premiumFeeCollateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"stakedGOVI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IThetaVault\",\"name\":\"_thetaVault\",\"type\":\"address\"}],\"name\":\"volTokenDexPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVolatilityToken\",\"name\":\"_volToken\",\"type\":\"address\"}],\"name\":\"volTokenIntrinsicPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IThetaVault\",\"name\":\"_thetaVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"willWithdrawSucceed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@coti-cvi/contracts-cvi/contracts/PlatformHelper.sol\":\"PlatformHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@coti-cvi/contracts-cvi/contracts/PlatformHelper.sol\":{\"content\":\"\\n// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\nimport \\\"./interfaces/IStaking.sol\\\";\\nimport \\\"./interfaces/IPlatformHelper.sol\\\";\\n\\ncontract PlatformHelper is Initializable, IPlatformHelper {\\n    uint16 private constant MAX_PERCENTAGE = 10000;\\n\\n    IERC20 private govi;\\n    IStaking private staking;\\n\\n\\n    function initialize(IERC20 _govi, IStaking _staking) public initializer {\\n        govi = _govi;\\n        staking = _staking;\\n    }\\n\\n    function dailyFundingFee(IPlatform _platform) external view override returns (uint256 fundingFeePercent) {\\n        (uint32 cviValue,,) = _platform.cviOracle().getCVILatestRoundData();\\n        (, fundingFeePercent) = _platform.feesCalculator().calculateSingleUnitPeriodFundingFee(IFeesCalculator.CVIValue(1 days, cviValue), premiumFeeCollateralRatio(_platform));\\n    }\\n\\n    function fundingFeeValues(IPlatform _platform, uint32 _minCVI, uint32 _maxCVI, uint256 _minCollateral, uint256 _maxCollateral) external view override returns (uint256[][] memory fundingFeeRatePercent) {\\n        fundingFeeRatePercent = new uint256[][](_maxCollateral - _minCollateral + 1);\\n        uint256 currCollateralIndex = 0;\\n        for (uint256 currCollateral = _minCollateral; currCollateral <= _maxCollateral; currCollateral += 1) {\\n            uint256[] memory currValues = new uint256[](_maxCVI - _minCVI + 1);\\n            uint256 currCVIIndex = 0;\\n            for (uint32 currCVI = _minCVI * _platform.feesCalculator().oracleLeverage(); currCVI <= _maxCVI * _platform.feesCalculator().oracleLeverage(); currCVI += _platform.feesCalculator().oracleLeverage()) {\\n                (,uint256 feePercent) = _platform.feesCalculator().calculateSingleUnitPeriodFundingFee(IFeesCalculator.CVIValue(1 days, currCVI * 100), (currCollateral * _platform.PRECISION_DECIMALS()) / 100);\\n                currValues[currCVIIndex] = feePercent;\\n                currCVIIndex += 1;\\n            }\\n            fundingFeeRatePercent[currCollateralIndex] = currValues;\\n            currCollateralIndex += 1;\\n        }\\n    }\\n\\n    function premiumFeeCollateralRatio(IPlatform _platform) public view override returns (uint256) {\\n        if (_platform.totalLeveragedTokensAmount() == 0) {\\n            return MAX_PERCENTAGE;\\n        }\\n\\n        return _platform.feesCalculator().calculateCollateralRatio(_platform.totalLeveragedTokensAmount(), _platform.totalPositionUnitsAmount());\\n    }\\n\\n    function collateralRatio(IPlatform _platform) public view override returns (uint256) {\\n        if (_platform.totalLeveragedTokensAmount() == 0) {\\n            return MAX_PERCENTAGE;\\n        }\\n\\n        return _platform.totalPositionUnitsAmount() * _platform.PRECISION_DECIMALS() / _platform.totalLeveragedTokensAmount();\\n    }\\n\\n    function volTokenIntrinsicPrice(IVolatilityToken _volToken) public view override returns (uint256) {\\n        require(IERC20(address(_volToken)).totalSupply() > 0, \\\"No supply\\\");\\n\\n        uint256 volTokenBalance = calculateVolTokenPositionBalance(_volToken);\\n\\n        return volTokenBalance * 10 ** ERC20(address(_volToken)).decimals() / IERC20(address(_volToken)).totalSupply();\\n    }\\n\\n    function volTokenDexPrice(IThetaVault _thetaVault) external view override returns (uint256) {\\n        (uint256 volTokenAmount, uint256 usdcAmount) = _thetaVault.getReserves();\\n        require(volTokenAmount > 0 && usdcAmount > 0, \\\"No liquidity\\\");\\n        return usdcAmount * 10 ** ERC20(address(_thetaVault.volToken())).decimals() / volTokenAmount;\\n    }\\n\\n    function maxWithdrawAmount(IThetaVault _thetaVault) external view override returns (uint256 maxAmount, uint256 maxUSDCAmount) {\\n        (uint256 totalBalance,,,,,) =_thetaVault.totalBalance();\\n        uint256 totalSupply = IERC20(address(_thetaVault)).totalSupply();\\n        uint256 totalLeveragedTokensAmount = _thetaVault.volToken().platform().totalLeveragedTokensAmount();\\n        uint256 maxPlatformWithdraw = totalLeveragedTokensAmount - _thetaVault.volToken().platform().totalPositionUnitsAmount();\\n        maxAmount = maxPlatformWithdraw * totalSupply / totalLeveragedTokensAmount;\\n        maxUSDCAmount = maxAmount * totalBalance / totalSupply;\\n    }\\n\\n    function _simulateMint(uint256 _totalUnits, uint256 _totalTokens, uint256 _units, uint256 _amount) internal pure returns (uint256 newTotalUnits, uint256 newTotalTokens) {\\n        newTotalUnits = _totalUnits + _units;\\n        newTotalTokens = _totalTokens + _amount;\\n    }\\n\\n    function _simulateBurn(uint256 _totalUnits, uint256 _totalTokens, uint256 _units, uint256 _amount) internal pure returns (uint256 newTotalUnits, uint256 newTotalTokens) {\\n        newTotalUnits = _totalUnits - _units;\\n        newTotalTokens = _totalTokens - _amount;\\n    }\\n\\n    function _simulatePlatformDeposit(uint256 _totalUnits, uint256 _totalTokens, uint256 _amount) internal pure returns (uint256 newTotalUnits, uint256 newTotalTokens) {\\n        newTotalUnits = _totalUnits;\\n        newTotalTokens = _totalTokens + _amount;\\n    }\\n\\n    function _simulatePlatformWithdraw(uint256 _totalUnits, uint256 _totalTokens, uint256 _amount) internal pure returns (uint256 newTotalUnits, uint256 newTotalTokens) {\\n        newTotalUnits = _totalUnits;\\n        newTotalTokens = _totalTokens - _amount;\\n    }\\n\\n    function _simulateThetaDeposit(IThetaVault _thetaVault, uint256 _totalUnits, uint256 _totalTokens, uint256 _amount) internal view returns (uint256 newTotalUnits, uint256 newTotalTokens) {\\n        uint256 liquidityAmount = _getLiquidityAmount(_thetaVault, _amount);\\n        (uint256 units, uint256 tokens) = _getPositionAmount(_thetaVault, _amount);\\n\\n        (newTotalUnits, newTotalTokens) = _simulatePlatformDeposit(_totalUnits, _totalTokens, liquidityAmount);\\n        (newTotalUnits, newTotalTokens) = _simulateMint(newTotalUnits, newTotalTokens, units, tokens);\\n    }\\n\\n    function _simulateThetaWithdraw(IThetaVault _thetaVault, uint256 _totalUnits, uint256 _totalTokens, uint256 _amount) internal view returns (uint256 newTotalUnits, uint256 newTotalTokens) {\\n        uint256 liquidityAmount = _getLiquidityAmount(_thetaVault, _amount);\\n        (uint256 units, uint256 tokens) = _getPositionAmount(_thetaVault, _amount);\\n\\n        (newTotalUnits, newTotalTokens) = _simulateBurn(_totalUnits, _totalTokens, units, tokens);\\n        (newTotalUnits, newTotalTokens) = _simulatePlatformWithdraw(newTotalUnits, newTotalTokens, liquidityAmount);\\n    }\\n\\n    function _getLiquidityAmount(IThetaVault _thetaVault, uint256 _thetaAmount) internal view returns (uint256 liquidityAmount) {\\n        IPlatform platform = _thetaVault.volToken().platform();\\n        uint256 totalSupply = IERC20(address(_thetaVault)).totalSupply();\\n        uint256 thetaLPBalance = IERC20(address(platform)).balanceOf(address(_thetaVault));\\n        uint256 platformLPTokens = _thetaAmount * thetaLPBalance / totalSupply;\\n        uint256 totalPlatformBalance = platform.totalBalance(true);\\n        uint256 totalPlatformSupply = IERC20(address(platform)).totalSupply();\\n        return platformLPTokens * totalPlatformBalance / totalPlatformSupply;\\n    }\\n\\n    function _getPositionAmount(IThetaVault _thetaVault, uint256 _thetaAmount) internal view returns (uint256 units, uint256 tokens) { \\n        IVolatilityToken volToken = _thetaVault.volToken();\\n        IPlatform platform = volToken.platform();\\n        uint256 totalSupply = IERC20(address(_thetaVault)).totalSupply();\\n        uint256 totalVolTokenSupply = IERC20(address(volToken)).totalSupply();\\n        (uint256 volTokenAmount, ) = _thetaVault.getReserves();\\n        uint256 volTokensToBurn = _thetaAmount * volTokenAmount  / totalSupply;\\n        uint volTokenPositionBalance = calculateVolTokenPositionBalance(volToken);\\n        (uint256 totalVolTokenPosUnits,,,,) = platform.positions(address(volToken));\\n        units = volTokensToBurn * totalVolTokenPosUnits / totalVolTokenSupply;\\n        tokens = volTokenPositionBalance * volTokensToBurn / totalVolTokenSupply;\\n    }\\n\\n    function _simulateRebalance(IThetaVault _thetaVault, uint256 _totalUnits, uint256 _totalTokens) internal view returns (uint256 newTotalUnits, uint256 newTotalTokens) {\\n        uint256 adjustedPositionUnits = _totalUnits * (MAX_PERCENTAGE + _thetaVault.extraLiqidityPercentage()) / MAX_PERCENTAGE;\\n        if (_totalTokens > adjustedPositionUnits) {\\n            uint256 extraLiquidityAmount = _totalTokens - adjustedPositionUnits;\\n\\n            (newTotalUnits, newTotalTokens) = _simulatePlatformWithdraw(_totalUnits, _totalTokens, extraLiquidityAmount);\\n            (newTotalUnits, newTotalTokens) = _simulateThetaDeposit(_thetaVault, newTotalUnits, newTotalTokens, extraLiquidityAmount);\\n        } else {\\n            uint256 liquidityMissing = adjustedPositionUnits - _totalTokens;\\n            (uint256 balance,, uint256 intrinsicDEXVolTokenBalance,, uint256 dexUSDCAmount,) = _thetaVault.totalBalance();\\n\\n            if (intrinsicDEXVolTokenBalance + dexUSDCAmount > liquidityMissing && \\n                (intrinsicDEXVolTokenBalance + dexUSDCAmount - liquidityMissing) * MAX_PERCENTAGE / balance >= _thetaVault.minDexPercentageAllowed()) {\\n\\n                (uint256 units, uint256 tokens) = _getPositionAmount(_thetaVault, liquidityMissing);\\n                (newTotalUnits, newTotalTokens) = _simulateBurn(_totalUnits, _totalTokens, units, tokens);\\n                (newTotalUnits, newTotalTokens) =  _simulatePlatformDeposit(newTotalUnits, newTotalTokens, liquidityMissing);\\n            }\\n        }\\n    }\\n\\n    function willWithdrawSucceed(IThetaVault _thetaVault, uint256 _withdrawAmount) external view override returns (bool success) {\\n        IPlatform platform = _thetaVault.volToken().platform();\\n\\n        uint256 totalPositionUnitsAmount = platform.totalPositionUnitsAmount();\\n        uint256 totalLeveragedTokensAmount = platform.totalLeveragedTokensAmount();\\n\\n        (totalPositionUnitsAmount, totalLeveragedTokensAmount) = _simulateRebalance(_thetaVault, totalPositionUnitsAmount, totalLeveragedTokensAmount);\\n        (totalPositionUnitsAmount, totalLeveragedTokensAmount) = _simulateThetaWithdraw(_thetaVault, totalPositionUnitsAmount, totalLeveragedTokensAmount, _withdrawAmount);\\n        return totalLeveragedTokensAmount >= totalPositionUnitsAmount;\\n    }\\n\\n    function maxMintAmount(IVolatilityToken _volToken) external view override returns (uint256 maxAmount) {\\n        (uint32 cviValue,,) = _volToken.platform().cviOracle().getCVILatestRoundData();\\n        (uint256 totalPositionUnitsAmount, uint256 totalLeveragedTokensAmount,) = calculateLiquidity(_volToken, 0, 0, 0);\\n        maxAmount = (totalLeveragedTokensAmount - totalPositionUnitsAmount) * cviValue / _volToken.platform().maxCVIValue();\\n    }\\n\\n    function calculateLiquidity(IVolatilityToken _volToken, uint256 _tokenAmount, uint256 _openPositionFee, uint256 _buyingPremiumFee) private view returns (uint256 totalPositionUnitsAmount, uint256 totalLeveragedTokensAmount, bool insufficientLiquidity) {\\n        (uint32 cviValue,,) = _volToken.platform().cviOracle().getCVILatestRoundData();\\n        uint256 positionedTokenAmount = (_tokenAmount - _openPositionFee - _buyingPremiumFee) * _volToken.leverage();\\n        uint256 positionUnitsAmount = uint256(positionedTokenAmount) * _volToken.platform().maxCVIValue() / cviValue;\\n        totalPositionUnitsAmount = _volToken.platform().totalPositionUnitsAmount() + positionUnitsAmount;\\n        totalLeveragedTokensAmount = _volToken.platform().totalLeveragedTokensAmount() + positionedTokenAmount + _buyingPremiumFee;\\n        insufficientLiquidity = totalPositionUnitsAmount > totalLeveragedTokensAmount;\\n    }\\n\\n    function calculateCommonFees(IVolatilityToken _volToken, bool _isKeepers, uint256 _tokenAmount, uint256 _timeWindow) private view returns (uint256 timeWindowFee, uint256 keepersFee) {\\n        timeWindowFee = _tokenAmount * _volToken.requestFeesCalculator().calculateTimeDelayFee(_timeWindow) / MAX_PERCENTAGE;\\n        keepersFee = _isKeepers ? _volToken.requestFeesCalculator().calculateKeepersFee(_tokenAmount) : 0; \\n    }\\n\\n    function calculatePenaltyFee(IVolatilityToken _volToken, bool _isKeepers, IVolatilityToken.Request memory _request, uint256 _tokenAmount) private view returns (uint256 timePenaltyFee) {\\n        timePenaltyFee = 0;\\n        if (!_isKeepers && (block.timestamp > _request.requestTimestamp + _volToken.requestFeesCalculator().minWaitTime() && block.timestamp < _request.targetTimestamp)) {\\n            timePenaltyFee = _tokenAmount * _volToken.requestFeesCalculator().calculateTimePenaltyFee(_request) / MAX_PERCENTAGE;\\n        }\\n    }\\n\\n    function calculateMintFees(IVolatilityToken _volToken, uint256 _tokenAmount) private view returns (uint256 openPositionFee, uint256 buyingPremiumFee, uint buyingPremiumFeePercentage) {\\n        openPositionFee = _tokenAmount * _volToken.platform().feesCalculator().openPositionFeePercent() * _volToken.leverage() / MAX_PERCENTAGE;\\n\\n        (uint32 cviValue,,) = _volToken.platform().cviOracle().getCVILatestRoundData();\\n\\n        uint256 lastLeveragedTokensAmount = _volToken.platform().totalLeveragedTokensAmount();\\n        uint256 lastTotalPositionUnitsAmount =  _volToken.platform().totalPositionUnitsAmount();\\n\\n        uint256 maxPositionUnitsAmount = (_tokenAmount - openPositionFee) * _volToken.leverage() * _volToken.platform().maxCVIValue() / cviValue;\\n        uint256 totalPositionUnitsAmount = _volToken.platform().totalPositionUnitsAmount() + maxPositionUnitsAmount;\\n        uint256 leveragedTokensAmount = _volToken.platform().totalLeveragedTokensAmount() + (_tokenAmount - openPositionFee) * _volToken.leverage();\\n\\n        (buyingPremiumFee, buyingPremiumFeePercentage) = \\n            _volToken.platform().feesCalculator().calculateBuyingPremiumFee(uint168(_tokenAmount), _volToken.leverage(), \\n                lastLeveragedTokensAmount, lastTotalPositionUnitsAmount, leveragedTokensAmount, totalPositionUnitsAmount);\\n    }\\n\\n    function calculateBurnFees(IVolatilityToken _volToken, uint256 _volTokensAmount) private view returns (uint256 burnUSDCAmountBeforeFees, uint256 closeFee) {\\n        burnUSDCAmountBeforeFees = _volTokensAmount * calculateVolTokenPositionBalance(_volToken) / IERC20(address(_volToken)).totalSupply();\\n        closeFee = burnUSDCAmountBeforeFees * (_volToken.platform().feesCalculator().closePositionLPFeePercent() + \\n            _volToken.platform().feesCalculator().calculateClosePositionFeePercent(0, true)) / MAX_PERCENTAGE;\\n    }\\n\\n    function calculatePreMint(IVolatilityToken _volToken, bool _isKeepers, uint256 _usdcAmount, uint256 _timeWindow) external view override returns (PreMintResult memory result) {\\n        (result.timeWindowFee, result.keepersFee) = calculateCommonFees(_volToken, _isKeepers, _usdcAmount, _timeWindow);\\n        result.netMintAmount = _usdcAmount - result.timeWindowFee - result.keepersFee;\\n\\n        (result.openPositionFee, result.buyingPremiumFee, result.buyingPremiumFeePercentage) = calculateMintFees(_volToken, _usdcAmount);\\n        result.netMintAmount = result.netMintAmount - result.openPositionFee - uint168(result.buyingPremiumFee);\\n\\n        uint256 supply = IERC20(address(_volToken)).totalSupply();\\n        uint256 balance = calculateVolTokenPositionBalance(_volToken);\\n        if (supply > 0 && balance > 0) {\\n            result.expectedVolTokensAmount = uint256(result.netMintAmount) * supply / balance;\\n        } else {\\n            result.expectedVolTokensAmount = uint256(result.netMintAmount) * _volToken.initialTokenToLPTokenRate();\\n        }\\n    }\\n\\n    function checkMintRequest(IVolatilityToken _volToken, uint256 _requestId, bool _isKeepers) external view override returns (CheckMintResult memory result) {\\n        IVolatilityToken.Request memory request; \\n        (request.requestType, request.tokenAmount,,,, request.requestTimestamp, request.targetTimestamp, request.useKeepers, request.maxBuyingPremiumFeePercentage) = _volToken.requests(_requestId);\\n        require(request.requestType == 1, 'Invalid request id');\\n\\n        uint256 timeWindowFee;\\n        (timeWindowFee, result.keepersFee) = calculateCommonFees(_volToken, _isKeepers, request.tokenAmount, request.targetTimestamp - request.requestTimestamp);\\n        result.timePenaltyFee = calculatePenaltyFee(_volToken, _isKeepers, request, request.tokenAmount);\\n        result.netMintAmount = request.tokenAmount - timeWindowFee - result.keepersFee - result.timePenaltyFee;\\n\\n        (result.openPositionFee, result.buyingPremiumFee, result.buyingPremiumFeePercentage) = calculateMintFees(_volToken, request.tokenAmount);\\n        result.netMintAmount = result.netMintAmount - uint168(result.openPositionFee) - uint168(result.buyingPremiumFee);\\n\\n        (,, result.insufficientLiquidity) = calculateLiquidity(_volToken, request.tokenAmount, result.openPositionFee, result.buyingPremiumFee);\\n        result.insufficientSlippage = result.buyingPremiumFeePercentage > request.maxBuyingPremiumFeePercentage;\\n\\n        uint256 supply = IERC20(address(_volToken)).totalSupply();\\n        uint256 balance = calculateVolTokenPositionBalance(_volToken);\\n        if (supply > 0 && balance > 0) {\\n            result.expectedVolTokensAmount = uint256(result.netMintAmount) * supply / balance;\\n        } else {\\n            result.expectedVolTokensAmount = uint256(result.netMintAmount) * _volToken.initialTokenToLPTokenRate();\\n        }\\n    }\\n\\n    function calculatePreBurn(IVolatilityToken _volToken, bool _isKeepers, uint256 _volTokensAmount, uint256 _timeWindow) external view override returns (PreBurnResult memory result) {\\n        uint256 burnUSDCAmountBeforeFees;\\n        (burnUSDCAmountBeforeFees, result.closeFee) = calculateBurnFees(_volToken, _volTokensAmount);\\n        result.expectedUSDCAmount = burnUSDCAmountBeforeFees - result.closeFee;\\n\\n        (result.timeWindowFee, result.keepersFee) = calculateCommonFees(_volToken, _isKeepers, result.expectedUSDCAmount, _timeWindow);\\n\\n        result.expectedUSDCAmount = result.expectedUSDCAmount - result.timeWindowFee - result.keepersFee;\\n        result.netBurnAmount = _volTokensAmount * result.expectedUSDCAmount / burnUSDCAmountBeforeFees;\\n    }\\n\\n    function checkBurnRequest(IVolatilityToken _volToken, uint256 _requestId, bool _isKeepers) external view override returns (CheckBurnResult memory result) {\\n        IVolatilityToken.Request memory request; \\n        (request.requestType, request.tokenAmount,,,, request.requestTimestamp, request.targetTimestamp, request.useKeepers,) = _volToken.requests(_requestId);\\n        require(request.requestType == 2, 'Invalid request id');\\n\\n        uint256 tokenAmount = IElasticToken(address(_volToken)).underlyingToValue(request.tokenAmount);\\n\\n        uint256 burnUSDCAmountBeforeFees;\\n        (burnUSDCAmountBeforeFees, result.closeFee) = calculateBurnFees(_volToken, tokenAmount);\\n        result.expectedUSDCAmount = burnUSDCAmountBeforeFees - result.closeFee;\\n\\n        result.timePenaltyFee = calculatePenaltyFee(_volToken, _isKeepers, request, burnUSDCAmountBeforeFees);\\n        uint256 timeWindowFee;\\n        (timeWindowFee, result.keepersFee) = calculateCommonFees(_volToken, _isKeepers, result.expectedUSDCAmount, request.targetTimestamp - request.requestTimestamp);\\n\\n        result.expectedUSDCAmount = result.expectedUSDCAmount - timeWindowFee - result.timePenaltyFee - result.keepersFee;\\n        result.netBurnAmount = tokenAmount * result.expectedUSDCAmount / burnUSDCAmountBeforeFees;\\n    }\\n\\n    function convertGOVIToXGOVI(uint256 _goviAmount) external view override returns (uint256 xGOVIAmount) { \\n        uint256 totalStaked = govi.balanceOf(address(staking));\\n        uint256 addedReward = staking.rewardPerSecond() * (block.timestamp - staking.lastUpdateTime());\\n        uint256 totalSupply = IERC20(address(staking)).totalSupply();\\n        if (totalStaked + addedReward > 0) {\\n            xGOVIAmount = _goviAmount * totalSupply / (totalStaked + addedReward);\\n        }\\n    }\\n\\n    function convertXGOVIToGOVI(uint256 _xGOVIAmount) external view override returns (uint256 goviAmount) { \\n        uint256 totalStaked = govi.balanceOf(address(staking));\\n        uint256 addedReward = staking.rewardPerSecond() * (block.timestamp - staking.lastUpdateTime());\\n        uint256 totalSupply = IERC20(address(staking)).totalSupply();\\n        if (totalSupply > 0) {\\n            goviAmount = (totalStaked + addedReward) * _xGOVIAmount / totalSupply;\\n        }\\n    }\\n\\n    function stakedGOVI(address _account) external view override returns (uint256 stakedAmount, uint256 share) {\\n        stakedAmount = this.convertXGOVIToGOVI(IERC20(address(staking)).balanceOf(_account));\\n        if (stakedAmount > 0) {\\n            share = IERC20(address(staking)).balanceOf(_account) * MAX_PERCENTAGE / IERC20(address(staking)).totalSupply();\\n        }\\n    }\\n\\n    function calculateStakingAPR() external view override returns (uint256 apr) {\\n        uint256 totalStaked = govi.balanceOf(address(staking));\\n        uint256 periodReward = staking.rewardPerSecond() * 1 days * 365;\\n        apr = totalStaked == 0 ?  0 : periodReward * MAX_PERCENTAGE / totalStaked;\\n    }\\n\\n    function calculateVolTokenPositionBalance(IVolatilityToken _volToken) private view returns (uint256 volTokenBalance) {\\n        IPlatform platform = _volToken.platform();\\n\\n        bool isPositive = true;\\n        (uint256 currPositionUnits,,,,) = platform.positions(address(_volToken));\\n        if (currPositionUnits != 0) {\\n            (volTokenBalance, isPositive,,,,) = platform.calculatePositionBalance(address(_volToken));\\n        }\\n        require(isPositive, \\\"Negative balance\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x129d961217c1163bdfb96e8ee0a2b65134c4ddf74fb71c66accd5ee60bdf2caf\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ICVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ICVIOracle {\\n    function getCVIRoundData(uint80 roundId) external view returns (uint32 cviValue, uint256 cviTimestamp);\\n    function getCVILatestRoundData() external view returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp);\\n\\n    function setDeviationCheck(bool newDeviationCheck) external;\\n    function setMaxDeviation(uint16 newMaxDeviation) external;\\n}\\n\",\"keccak256\":\"0xf1871b2e9219f7a11e63d8e3276b7a0a46d8d726d54e385a6326dbdb2bcb1bad\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IElasticToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8;\\n\\ninterface IElasticToken {\\n\\n    event Rebase(uint256 epoch, uint256 prevScalingFactor, uint256 newScalingFactor);\\n\\n    event Transfer(address indexed from, address indexed to, uint amount);\\n    event Approval(address indexed owner, address indexed spender, uint amount);\\n\\n    function transfer(address to, uint256 value) external returns(bool);\\n    function transferFrom(address from, address to, uint256 value) external returns(bool);\\n    function balanceOf(address who) external view returns(uint256);\\n    function allowance(address owner, address spender) external view returns(uint256);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\\n    function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\\n\\n    function balanceOfUnderlying(address who) external view returns(uint256);\\n    function maxScalingFactor() external view returns (uint256);\\n    function underlyingToValue(uint256 unerlyingValue) external view returns (uint256);\\n    function valueToUnderlying(uint256 value) external view returns (uint256);\\n\\n    function setRebaser(address rebaser) external;\\n}\\n\",\"keccak256\":\"0x2f1aa8bd13bef092a1e06d2208e9d5ddfb2edb7f5a71b1d4d14ff8a234540645\",\"license\":\"MIT\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IThetaVaultInfo.sol\\\";\\n\\ninterface IFeesCalculator {\\n\\n    struct CVIValue {\\n        uint256 period;\\n        uint32 cviValue;\\n    }\\n\\n    struct SnapshotUpdate {\\n        uint256 latestSnapshot;\\n        uint256 singleUnitFundingFee;\\n        uint256 totalTime;\\n        uint256 totalRounds;\\n        uint256 cviValueTimestamp;\\n        uint80 newLatestRoundId;\\n        uint32 cviValue;\\n        bool updatedSnapshot;\\n        bool updatedLatestRoundId;\\n        bool updatedLatestTimestamp;\\n        bool updatedTurbulenceData;\\n    }\\n\\n    function updateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 lastCVIValue, uint32 currCVIValue) external;\\n\\n    function setOracle(ICVIOracle cviOracle) external;\\n    function setThetaVault(IThetaVaultInfo thetaVault) external;\\n\\n    function setStateUpdator(address newUpdator) external;\\n\\n    function setFundingFeeMinRate(uint32 newFundingFeeMinRate) external;\\n    function setFundingFeeMaxRate(uint32 newFundingFeeMaxRate) external;\\n    function setMinFundingFeeCviThreshold(uint32 newMinFundingFeeCviThreshold) external;\\n    function setMaxFundingFeeCviThreshold(uint32 newMaxFundingFeeCviThreshold) external;\\n    function setFundingFeeDivisionFactor(uint32 newFundingFeeDivisionFactor) external;\\n    function setFundingFeeCoefficients(uint32[] calldata newFundingFeeCoefficients) external;\\n\\n    function setDepositFee(uint16 newDepositFeePercentage) external;\\n    function setWithdrawFee(uint16 newWithdrawFeePercentage) external;\\n    function setOpenPositionFee(uint16 newOpenPositionFeePercentage) external;\\n    function setOpenPositionLPFee(uint16 newOpenPositionLPFeePercent) external;\\n    function setClosePositionLPFee(uint16 newClosePositionLPFeePercent) external;\\n    function setClosePositionFee(uint16 newClosePositionFeePercentage) external;\\n    function setClosePositionMaxFee(uint16 newClosePositionMaxFeePercentage) external;\\n    function setClosePositionFeeDecay(uint256 newClosePositionFeeDecayPeriod) external;\\n    \\n    function setOracleHeartbeatPeriod(uint256 newOracleHeartbeatPeriod) external;\\n    function setBuyingPremiumFeeMax(uint16 newBuyingPremiumFeeMaxPercentage) external;\\n    function setBuyingPremiumThreshold(uint16 newBuyingPremiumThreshold) external;\\n    function setClosingPremiumFeeMax(uint16 newClosingPremiumFeeMaxPercentage) external;\\n    function setCollateralToBuyingPremiumMapping(uint16[] calldata newCollateralToBuyingPremiumMapping) external;\\n    function setFundingFeeConstantRate(uint16 newfundingFeeConstantRate) external;\\n    function setCollateralToExtraFundingFeeMapping(uint32[] calldata newCollateralToExtraFundingFeeMapping) external;\\n    function setTurbulenceStep(uint16 newTurbulenceStepPercentage) external;\\n    function setMaxTurbulenceFeePercentToTrim(uint16 newMaxTurbulenceFeePercentToTrim) external;\\n    function setTurbulenceDeviationThresholdPercent(uint16 newTurbulenceDeviationThresholdPercent) external;\\n    function setTurbulenceDeviationPercent(uint16 newTurbulenceDeviationPercentage) external;\\n\\n    function calculateTurbulenceIndicatorPercent(uint256 totalTime, uint256 newRounds, uint32 _lastCVIValue, uint32 _currCVIValue) external view returns (uint16);\\n\\n    function calculateBuyingPremiumFee(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n    function calculateBuyingPremiumFeeWithAddendum(uint168 tokenAmount, uint8 leverage, uint256 lastTotalLeveragedTokens, uint256 lastTotalPositionUnits, uint256 totalLeveragedTokens, uint256 totalPositionUnits, uint16 _turbulenceIndicatorPercent) external view returns (uint168 buyingPremiumFee, uint16 combinedPremiumFeePercentage);\\n\\n    function calculateClosingPremiumFee() external view returns (uint16 combinedPremiumFeePercentage);\\n\\n    function calculateSingleUnitFundingFee(CVIValue[] memory cviValues, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 fundingFee);\\n    function calculateSingleUnitPeriodFundingFee(CVIValue memory cviValue, uint256 collateralRatio) external view returns (uint256 fundingFee, uint256 fundingFeeRatePercents);\\n    function updateSnapshots(uint256 latestTimestamp, uint256 blockTimestampSnapshot, uint256 latestTimestampSnapshot, uint80 latestOracleRoundId, uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (SnapshotUpdate memory snapshotUpdate);\\n\\n    function calculateClosePositionFeePercent(uint256 creationTimestamp, bool isNoLockPositionAddress) external view returns (uint16);\\n    function calculateWithdrawFeePercent(uint256 lastDepositTimestamp) external view returns (uint16);\\n\\n    function calculateCollateralRatio(uint256 totalLeveragedTokens, uint256 totalPositionUnits) external view returns (uint256 collateralRatio);\\n\\n    function depositFeePercent() external view returns (uint16);\\n    function withdrawFeePercent() external view returns (uint16);\\n    function openPositionFeePercent() external view returns (uint16);\\n    function closePositionFeePercent() external view returns (uint16);\\n    function openPositionLPFeePercent() external view returns (uint16);\\n    function closePositionLPFeePercent() external view returns (uint16);\\n\\n    function openPositionFees() external view returns (uint16 openPositionFeePercentResult, uint16 buyingPremiumFeeMaxPercentResult);\\n\\n    function turbulenceIndicatorPercent() external view returns (uint16);\\n    function oracleLeverage() external view returns (uint8);\\n\\n    function getCollateralToBuyingPremiumMapping() external view returns(uint16[] memory);\\n    function getCollateralToExtraFundingFeeMapping() external view returns(uint32[] memory);\\n    function getFundingFeeCoefficients() external view returns(uint32[] memory);\\n}\\n\",\"keccak256\":\"0x4a28b87395a2a35ac1152b83f96630ad4fa1b844b5abca4270486c9c08f388ea\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IFeesCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IFeesCollector {\\n    function sendProfit(uint256 amount, IERC20 token) external;\\n}\\n\",\"keccak256\":\"0xb16b7c5d985657716ccacf0f1e61de587c06fe4f6591bee6fafc0a3658229b4c\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ILiquidation.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ILiquidation {\\t\\n\\tfunction setMinLiquidationThresholdPercents(uint16[8] calldata newMinThresholdPercents) external;\\n\\tfunction setMinLiquidationRewardPercent(uint16 newMinRewardPercent) external;\\n\\tfunction setMaxLiquidationRewardPercents(uint16[8] calldata newMaxRewardPercents) external;\\n\\tfunction isLiquidationCandidate(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (bool);\\n\\tfunction getLiquidationReward(uint256 positionBalance, bool isPositive, uint168 positionUnitsAmount, uint32 openCVIValue, uint8 leverage) external view returns (uint256 finderFeeAmount);\\n}\\n\",\"keccak256\":\"0x0799656b324ed8d65391313156e1dfe7d99b6dadb08e71cd6a515d19731539bd\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IPlatform.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./ICVIOracle.sol\\\";\\nimport \\\"./IFeesCalculator.sol\\\";\\nimport \\\"./IRewardsCollector.sol\\\";\\nimport \\\"./IFeesCollector.sol\\\";\\nimport \\\"./ILiquidation.sol\\\";\\n\\ninterface IPlatform {\\n\\n    struct Position {\\n        uint168 positionUnitsAmount;\\n        uint8 leverage;\\n        uint32 openCVIValue;\\n        uint32 creationTimestamp;\\n        uint32 originalCreationTimestamp;\\n    }\\n\\n    event Deposit(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event Withdraw(address indexed account, uint256 tokenAmount, uint256 lpTokensAmount, uint256 feeAmount);\\n    event OpenPosition(address indexed account, uint256 tokenAmount, uint8 leverage, uint256 feeAmount, uint256 positionUnitsAmount, uint256 cviValue);\\n    event ClosePosition(address indexed account, uint256 tokenAmount, uint256 feeAmount, uint256 positionUnitsAmount, uint8 leverage, uint256 cviValue);\\n    event LiquidatePosition(address indexed positionAddress, uint256 currentPositionBalance, bool isBalancePositive, uint256 positionUnitsAmount);\\n\\n    function deposit(uint256 tokenAmount, uint256 minLPTokenAmount) external returns (uint256 lpTokenAmount);\\n    function withdraw(uint256 tokenAmount, uint256 maxLPTokenBurnAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n    function withdrawLPTokens(uint256 lpTokenAmount) external returns (uint256 burntAmount, uint256 withdrawnAmount);\\n\\n    function increaseSharedPool(uint256 tokenAmount) external;\\n\\n    function openPositionWithoutFee(uint168 tokenAmount, uint32 maxCVI, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function openPosition(uint168 tokenAmount, uint32 maxCVI, uint16 maxBuyingPremiumFeePercentage, uint8 leverage) external returns (uint168 positionUnitsAmount, uint168 positionedTokenAmount, uint168 openPositionFee, uint168 buyingPremiumFee);\\n    function closePositionWithoutFee(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n    function closePosition(uint168 positionUnitsAmount, uint32 minCVI) external returns (uint256 tokenAmount, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function liquidatePositions(address[] calldata positionOwners) external returns (uint256 finderFeeAmount);\\n\\n    function setAddressSpecificParameters(address holderAddress, bool shouldLockPosition, bool noPremiumFeeAllowed, bool increaseSharedPoolAllowed, bool isLiquidityProvider) external;\\n\\n    function setRevertLockedTransfers(bool revertLockedTransfers) external;\\n\\n    function setSubContracts(IFeesCollector newCollector, ICVIOracle newOracle, IRewardsCollector newRewards, ILiquidation newLiquidation, address _newStakingContractAddress) external;\\n    function setFeesCalculator(IFeesCalculator newCalculator) external;\\n\\n    function setLatestOracleRoundId(uint80 newOracleRoundId) external;\\n    function setMaxTimeAllowedAfterLatestRound(uint32 newMaxTimeAllowedAfterLatestRound) external;\\n\\n    function setLockupPeriods(uint256 newLPLockupPeriod, uint256 newBuyersLockupPeriod) external;\\n\\n    function setEmergencyParameters(bool newEmergencyWithdrawAllowed, bool newCanPurgeSnapshots) external;\\n\\n    function setMaxAllowedLeverage(uint8 newMaxAllowedLeverage) external;\\n\\n    function calculatePositionBalance(address positionAddress) external view returns (uint256 currentPositionBalance, bool isPositive, uint168 positionUnitsAmount, uint8 leverage, uint256 fundingFees, uint256 marginDebt);\\n    function calculatePositionPendingFees(address positionAddress, uint168 positionUnitsAmount) external view returns (uint256 pendingFees);\\n\\n    function totalBalance(bool _withAddendum) external view returns (uint256 balance);\\n\\n    function calculateLatestTurbulenceIndicatorPercent() external view returns (uint16);\\n\\n    function cviOracle() external view returns (ICVIOracle);\\n    function feesCalculator() external view returns (IFeesCalculator);\\n\\n    function PRECISION_DECIMALS() external view returns (uint256);\\n\\n    function totalPositionUnitsAmount() external view returns (uint256);\\n    function totalLeveragedTokensAmount() external view returns (uint256);\\n    function totalFundingFeesAmount() external view returns (uint256);\\n    function latestFundingFees() external view returns (uint256);\\n\\n    function positions(address positionAddress) external view returns (uint168 positionUnitsAmount, uint8 leverage, uint32 openCVIValue, uint32 creationTimestamp, uint32 originalCreationTimestamp);\\n    function buyersLockupPeriod() external view returns (uint256);\\n    function maxCVIValue() external view returns (uint32);\\n}\\n\",\"keccak256\":\"0x11f55f686514975c2dd5adf87856f8df5f85b015621f01e1528addb6b7194686\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IPlatformHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IPlatform.sol\\\";\\nimport \\\"./IVolatilityToken.sol\\\";\\nimport \\\"./IElasticToken.sol\\\";\\nimport \\\"./IThetaVault.sol\\\";\\n\\ninterface IPlatformHelper {\\n\\n    struct PreMintResult {\\n        uint256 netMintAmount;\\n        uint256 expectedVolTokensAmount;\\n        uint256 buyingPremiumFeePercentage;\\n        uint256 openPositionFee;\\n        uint256 buyingPremiumFee;\\n        uint256 timeWindowFee;\\n        uint256 keepersFee;\\n    }\\n\\n    struct PreBurnResult {\\n        uint256 netBurnAmount;\\n        uint256 expectedUSDCAmount;\\n        uint256 closeFee;\\n        uint256 timeWindowFee;\\n        uint256 keepersFee;\\n    }\\n\\n    struct CheckMintResult {\\n        uint256 netMintAmount;\\n        uint256 expectedVolTokensAmount;\\n        uint256 buyingPremiumFeePercentage;\\n        uint256 openPositionFee;\\n        uint256 buyingPremiumFee;\\n        uint256 timePenaltyFee;\\n        uint256 keepersFee;\\n        bool insufficientLiquidity;\\n        bool insufficientSlippage;\\n    }\\n\\n    struct CheckBurnResult {\\n        uint256 netBurnAmount;\\n        uint256 expectedUSDCAmount;\\n        uint256 closeFee;\\n        uint256 timePenaltyFee;\\n        uint256 keepersFee;\\n    }\\n\\n    function dailyFundingFee(IPlatform platform) external view returns (uint256 fundingFeePercent);\\n    function fundingFeeValues(IPlatform platform, uint32 minCVI, uint32 maxCVI, uint256 minCollateral, uint256 maxCollateral) external view returns (uint256[][] memory fundingFeeRatePercent);   \\t\\n    function collateralRatio(IPlatform platform) external view returns (uint256);\\n    function premiumFeeCollateralRatio(IPlatform platform) external view returns (uint256);\\n\\n    function volTokenIntrinsicPrice(IVolatilityToken volToken) external view returns (uint256);\\n    function volTokenDexPrice(IThetaVault thetaVault) external view returns (uint256);\\n\\n    function maxMintAmount(IVolatilityToken volToken) external view returns (uint256 maxAmount);\\n    function maxWithdrawAmount(IThetaVault thetaVault) external view returns (uint256 maxAmount, uint256 maxUSDCAmount);\\n    function willWithdrawSucceed(IThetaVault thetaVault, uint256 withdrawAmount) external view returns (bool success);\\n\\n    function calculatePreMint(IVolatilityToken volToken, bool isKeepers, uint256 usdcAmount, uint256 timeWindow) external view returns (PreMintResult memory result);\\n    function calculatePreBurn(IVolatilityToken volToken, bool isKeepers, uint256 volTokensAmount, uint256 timeWindow) external view returns (PreBurnResult memory result);\\n\\n    function checkMintRequest(IVolatilityToken volToken, uint256 requestId, bool isKeepers) external view returns (CheckMintResult memory result);\\n    function checkBurnRequest(IVolatilityToken volToken, uint256 requestId, bool isKeepers) external view returns (CheckBurnResult memory result);\\n\\n    function convertGOVIToXGOVI(uint256 amount) external view returns (uint256 xGOVIAmount);\\n    function convertXGOVIToGOVI(uint256 xGOVIAmount) external view returns (uint256 goviAmount);\\n    function stakedGOVI(address account) external view returns (uint256 stakedAmount, uint256 share);\\n    function calculateStakingAPR() external view returns (uint256 apr);\\n}\\n\",\"keccak256\":\"0x508fca1dd20cd644efda254948dee2ee8f7ae21de32f342b23ff6604ed60df04\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRequestFeesCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IVolatilityToken.sol\\\";\\n\\ninterface IRequestFeesCalculator {\\n    function calculateTimePenaltyFee(IVolatilityToken.Request calldata request) external view returns (uint16 feePercentage);\\n    function calculateTimeDelayFee(uint256 timeDelay) external view returns (uint16 feePercentage);\\n    function calculateFindersFee(uint256 tokensLeftAmount) external view returns (uint256 findersFeeAmount);\\n    function calculateKeepersFee(uint256 tokensAmount) external view returns (uint256 keepersFeeAmount);\\n\\n    function isLiquidable(IVolatilityToken.Request calldata request) external view returns (bool liquidable);\\n\\n    function minWaitTime() external view returns (uint32);\\n\\n    function setTimeWindow(uint32 minTimeWindow, uint32 maxTimeWindow) external;\\n    function setTimeDelayFeesParameters(uint16 minTimeDelayFeePercent, uint16 maxTimeDelayFeePercent) external;\\n    function setMinWaitTime(uint32 newMinWaitTime) external;\\n    function setTimePenaltyFeeParameters(uint16 beforeTargetTimeMaxPenaltyFeePercent, uint32 afterTargetMidTime, uint16 afterTargetMidTimePenaltyFeePercent, uint32 afterTargetMaxTime, uint16 afterTargetMaxTimePenaltyFeePercent) external;\\n    function setFindersFee(uint16 findersFeePercent) external;\\n    function setKeepersFeePercent(uint16 keepersFeePercent) external;\\n    function setKeepersFeeMax(uint256 keepersFeeMax) external;\\n\\n    function getMaxFees() external view returns (uint16 maxFeesPercent);\\n}\\n\",\"keccak256\":\"0xb516083aa9063482c61c12f38b960f017205f2611358dcab31c1197208841611\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IRewardsCollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IRewardsCollector {\\n\\tfunction reward(address account, uint256 positionUnits, uint8 leverage) external;\\n}\\n\",\"keccak256\":\"0xaae3f1399202cccfb2e7302f69868a1f9adfbc53c968668e79201692c5724ca5\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IStaking.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\n\\ninterface IStaking {\\n    event ProfitAdded(address indexed token, uint256 profit);\\n    event Staked(address indexed account, uint256 goviAmount, uint256 xGOVIMinted, uint256 xGOVIBalance);\\n    event Unstaked(address indexed account, uint256 xGOVIBurned, uint256 goviReward, uint256 xGOVIBalance);\\n    event RewardClaimed(address indexed account, address indexed token, uint256 reward);\\n\\n\\tfunction stake(uint256 goviAmount) external returns (uint256 xGOVIAmount);\\n\\tfunction unstake(uint256 xGOVIAmount) external returns (uint256 goviAmount);\\n\\n    function claimProfit(IERC20Upgradeable token) external returns (uint256);\\n    function claimAllProfits() external returns (uint256[] memory profits);\\n\\n    function addClaimableToken(IERC20Upgradeable newClaimableToken) external;\\n    function removeClaimableToken(IERC20Upgradeable removedClaimableToken) external;\\n\\n    function setStakingLockupTime(uint256 newLockupTime) external;\\n    function setRewardRate(uint256 newRewardPerSecond) external;\\n\\n    function profitOf(address account, IERC20Upgradeable token) external view returns (uint256);\\n    function getClaimableTokens() external view returns (IERC20Upgradeable[] memory);\\n\\n    function rewardPerSecond() external view returns (uint256);\\n    function lastUpdateTime() external view returns (uint256);\\n\\n    receive() external payable;\\n}\\n\",\"keccak256\":\"0x381dca1f64937aac9769c5b7c0a8362cc6f69f626034f1546de515c8ff78dfee\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport '@coti-cvi/contracts-staking/contracts/interfaces/IRewardRouter.sol';\\n\\nimport \\\"./IThetaVaultInfo.sol\\\";\\nimport \\\"./IVolatilityToken.sol\\\";\\n\\ninterface IThetaVault is IThetaVaultInfo {\\n\\n    event SubmitRequest(uint256 requestId, uint8 requestType, uint256 tokenAmount, uint32 targetTimestamp, address indexed account, uint256 totalUSDCBalance, uint256 totalSupply);\\n    event FulfillDeposit(uint256 requestId, address indexed account, uint256 totalUSDCAmount, uint256 platformLiquidityAmount, uint256 dexVolTokenUSDCAmount, uint256 dexVolTokenAmount, uint256 dexUSDCAmount, uint256 mintedThetaTokens);\\n    event FulfillWithdraw(uint256 requestId, address indexed account, uint256 totalUSDCAmount, uint256 platformLiquidityAmount, uint256 dexVolTokenAmount, uint256 dexUSDCVolTokenAmount, uint256 dexUSDCAmount, uint256 burnedThetaTokens);\\n    event LiquidateRequest(uint256 requestId, uint8 requestType, address indexed account, address indexed liquidator, uint256 tokenAmount);\\n\\n    function submitDepositRequest(uint168 tokenAmount/* , bool shouldStake */) external returns (uint256 requestId);\\n    function submitWithdrawRequest(uint168 thetaTokenAmount) external returns (uint256 requestId);\\n\\n    function fulfillDepositRequest(uint256 requestId) external returns (uint256 thetaTokensMinted);\\n    function fulfillWithdrawRequest(uint256 requestId) external returns (uint256 tokenWithdrawnAmount);\\n\\n    function liquidateRequest(uint256 requestId) external;\\n\\n    function rebalance() external;\\n\\n    function setRewardRouter(IRewardRouter rewardRouter) external;\\n    function setFulfiller(address newFulfiller) external;\\n    function setMinPoolSkew(uint16 newMinPoolSkewPercentage) external;\\n    function setLiquidityPercentages(uint16 newExtraLiquidityPercentage, uint16 minDexPercentageAllowed) external;\\n    function setRequestDelay(uint256 newRequestDelay) external;\\n    function setDepositCap(uint256 newDepositCap) external;\\n    function setPeriods(uint256 newLockupPeriod, uint256 newLiquidationPeriod) external;\\n    function setMinAmounts(uint256 newMinDepositAmount, uint256 newMinWithdrawAmount) external;\\n    function setDepositHoldings(uint16 newDepositHoldingsPercentage) external;\\n    \\n    function volToken() external view returns (IVolatilityToken);\\n\\n    function totalBalance() external view returns (uint256 balance, uint256 usdcPlatformLiquidity, uint256 intrinsicDEXVolTokenBalance, uint256 volTokenPositionBalance, uint256 dexUSDCAmount, uint256 dexVolTokensAmount);\\n    function getReserves() external view returns (uint256 volTokenAmount, uint256 usdcAmount);\\n    function requests(uint256 requestId) external view returns (uint8 requestType, uint168 tokenAmount, uint32 targetTimestamp, address owner, bool shouldStake);\\n}\\n\",\"keccak256\":\"0xbd27cde6652e9e4b9cd783ba25bafb31ab00210fad67f80733e8901f980f0fa1\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IThetaVaultInfo.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface IThetaVaultInfo {\\n    function totalVaultLeveragedAmount() external view returns (uint256);\\n    function vaultPositionUnits() external view returns (uint256);\\n    function extraLiqidityPercentage() external view returns (uint16);\\n    function minDexPercentageAllowed() external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xce2b14eb4cfcf69d7fe194658560dd77ee0f37c913eefa8d60a2d09bdd7683f6\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/IVolatilityToken.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./IPlatform.sol\\\";\\nimport \\\"./IRequestFeesCalculator.sol\\\";\\nimport \\\"./ICVIOracle.sol\\\";\\n\\ninterface IVolatilityToken {\\n\\n    struct Request {\\n        uint8 requestType; // 1 => mint, 2 => burn\\n        uint168 tokenAmount;\\n        uint16 timeDelayRequestFeesPercent;\\n        uint16 maxRequestFeesPercent;\\n        address owner;\\n        uint32 requestTimestamp;\\n        uint32 targetTimestamp;\\n        bool useKeepers;\\n        uint16 maxBuyingPremiumFeePercentage;\\n    }\\n\\n    event SubmitRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 tokenAmount, uint256 submitFeesAmount, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n    event FulfillRequest(uint256 requestId, uint8 requestType, address indexed account, uint256 fulfillFeesAmount, bool isAborted, bool useKeepers, bool keepersCalled, address indexed fulfiller, uint32 fulfillTimestamp);\\n    event LiquidateRequest(uint256 requestId, uint8 requestType, address indexed account, address indexed liquidator, uint256 findersFeeAmount, bool useKeepers, uint32 liquidateTimestamp);\\n    event Mint(uint256 requestId, address indexed account, uint256 tokenAmount, uint256 positionedTokenAmount, uint256 mintedTokens, uint256 openPositionFee, uint256 buyingPremiumFee);\\n    event Burn(uint256 requestId, address indexed account, uint256 tokenAmountBeforeFees, uint256 tokenAmount, uint256 burnedTokens, uint256 closePositionFee, uint256 closingPremiumFee);\\n\\n    function rebaseCVI() external;\\n\\n    function submitMintRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersMintRequest(uint168 tokenAmount, uint32 timeDelay, uint16 maxBuyingPremiumFeePercentage) external returns (uint256 requestId);\\n    function submitBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n    function submitKeepersBurnRequest(uint168 tokenAmount, uint32 timeDelay) external returns (uint256 requestId);\\n\\n    function fulfillMintRequest(uint256 requestId, uint16 maxBuyingPremiumFeePercentage, bool keepersCalled) external returns (uint256 tokensMinted, bool success);\\n    function fulfillBurnRequest(uint256 requestId, bool keepersCalled) external returns (uint256 tokensBurned);\\n\\n    function mintTokens(uint168 tokenAmount) external returns (uint256 mintedTokens);\\n    function burnTokens(uint168 burnAmount) external returns (uint256 tokenAmount);\\n\\n    function liquidateRequest(uint256 requestId) external returns (uint256 findersFeeAmount);\\n\\n    function setMinter(address minter) external;\\n    function setPlatform(IPlatform newPlatform) external;\\n    function setFeesCalculator(IFeesCalculator newFeesCalculator) external;\\n    function setFeesCollector(IFeesCollector newCollector) external;\\n    function setRequestFeesCalculator(IRequestFeesCalculator newRequestFeesCalculator) external;\\n    function setCVIOracle(ICVIOracle newCVIOracle) external;\\n    function setDeviationParameters(uint16 newDeviationPercentagePerSingleRebaseLag, uint16 newMinDeviationPercentage, uint16 newMaxDeviationPercentage) external;\\n    function setVerifyTotalRequestsAmount(bool verifyTotalRequestsAmount) external;\\n    function setMaxTotalRequestsAmount(uint256 maxTotalRequestsAmount) external;\\n    function setCappedRebase(bool newCappedRebase) external;\\n\\n    function setMinRequestId(uint256 newMinRequestId) external;\\n    function setMaxMinRequestIncrements(uint256 newMaxMinRequestIncrements) external;\\n\\n    function setFulfiller(address fulfiller) external;\\n\\n    function setKeepersFeeVaultAddress(address newKeepersFeeVaultAddress) external;\\n\\n    function setMinKeepersAmounts(uint256 newMinKeepersMintAmount, uint256 newMinKeepersBurnAmount) external;\\n\\n    function platform() external view returns (IPlatform);\\n    function requestFeesCalculator() external view returns (IRequestFeesCalculator);\\n    function leverage() external view returns (uint8);\\n    function initialTokenToLPTokenRate() external view returns (uint256);\\n\\n    function requests(uint256 requestId) external view returns (uint8 requestType, uint168 tokenAmount, uint16 timeDelayRequestFeesPercent, uint16 maxRequestFeesPercent,\\n        address owner, uint32 requestTimestamp, uint32 targetTimestamp, bool useKeepers, uint16 maxBuyingPremiumFeePercentage);\\n}\\n\",\"keccak256\":\"0x9b195f997265f6401224845c81cba2a3ac6f2e4f2bf65d8be5027ac1ee3fa5b4\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-staking/contracts/interfaces/IRewardRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8;\\n\\nimport './IRewardTracker.sol';\\nimport './IVester.sol';\\n\\nenum StakedTokenName {\\n  THETA_VAULT,\\n  ES_GOVI,\\n  GOVI,\\n  LENGTH\\n}\\n\\ninterface IRewardRouter {\\n  event StakeToken(address indexed account, address indexed tokenName, uint256 amount);\\n  event UnstakeToken(address indexed account, address indexed tokenName, uint256 amount);\\n\\n  function stake(StakedTokenName _token, uint256 _amount) external;\\n\\n  function stakeForAccount(\\n    StakedTokenName _token,\\n    address _account,\\n    uint256 _amount\\n  ) external;\\n\\n  function batchStakeForAccount(\\n    StakedTokenName _tokenName,\\n    address[] memory _accounts,\\n    uint256[] memory _amounts\\n  ) external;\\n\\n  function unstake(StakedTokenName _token, uint256 _amount) external;\\n\\n  function claim(StakedTokenName _token) external;\\n\\n  function compound(StakedTokenName _tokenName) external;\\n\\n  function compoundForAccount(address _account, StakedTokenName _tokenName) external;\\n\\n  function batchCompoundForAccounts(address[] memory _accounts, StakedTokenName _tokenName) external;\\n\\n  function setRewardTrackers(StakedTokenName[] calldata _tokenNames, IRewardTracker[] calldata _rewardTrackers)\\n    external;\\n\\n  function setVesters(StakedTokenName[] calldata _tokenNames, IVester[] calldata _vesters) external;\\n\\n  function setTokens(StakedTokenName[] calldata _tokenNames, address[] calldata _tokens) external;\\n\\n  function rewardTrackers(StakedTokenName _token) external view returns (IRewardTracker);\\n\\n  function vesters(StakedTokenName _token) external view returns (IVester);\\n\\n  function tokens(StakedTokenName _token) external view returns (address);\\n}\\n\",\"keccak256\":\"0x3d947510a8edfa0e2d7119d5e31a63ef9ff4bef153ce5afc67343aa2cc2a7f79\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-staking/contracts/interfaces/IRewardTracker.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8;\\n\\ninterface IRewardTracker {\\n  event Claim(address indexed receiver, uint256 amount);\\n\\n  function stake(address _depositToken, uint256 _amount) external;\\n\\n  function stakeForAccount(\\n    address _fundingAccount,\\n    address _account,\\n    address _depositToken,\\n    uint256 _amount\\n  ) external;\\n\\n  function unstake(address _depositToken, uint256 _amount) external;\\n\\n  function unstakeForAccount(\\n    address _account,\\n    address _depositToken,\\n    uint256 _amount,\\n    address _receiver\\n  ) external;\\n\\n  function claim(address _receiver) external returns (uint256);\\n\\n  function claimForAccount(address _account, address _receiver) external returns (uint256);\\n\\n  function updateRewards() external;\\n\\n  function depositBalances(address _account, address _depositToken) external view returns (uint256);\\n\\n  function stakedAmounts(address _account) external view returns (uint256);\\n\\n  function averageStakedAmounts(address _account) external view returns (uint256);\\n\\n  function cumulativeRewards(address _account) external view returns (uint256);\\n\\n  function claimable(address _account) external view returns (uint256);\\n\\n  function tokensPerInterval() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x0af272806df1e2440cb18485e6911a67a2a25fe1edadfa602c08a4ef3e2f1f5c\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-staking/contracts/interfaces/IVester.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8;\\n\\nimport './IRewardTracker.sol';\\n\\ninterface IVester {\\n  event Claim(address indexed receiver, uint256 amount);\\n  event Deposit(address indexed account, uint256 amount);\\n  event Withdraw(address indexed account, uint256 claimedAmount, uint256 balance);\\n  event PairTransfer(address indexed from, address indexed to, uint256 value);\\n\\n  function claimForAccount(address _account, address _receiver) external returns (uint256);\\n\\n  function transferStakeValues(address _sender, address _receiver) external;\\n\\n  function setTransferredAverageStakedAmounts(address _account, uint256 _amount) external;\\n\\n  function setTransferredCumulativeRewards(address _account, uint256 _amount) external;\\n\\n  function setCumulativeRewardDeductions(address _account, uint256 _amount) external;\\n\\n  function setBonusRewards(address _account, uint256 _amount) external;\\n\\n  function rewardTracker() external view returns (IRewardTracker);\\n\\n  function claimable(address _account) external view returns (uint256);\\n\\n  function cumulativeClaimAmounts(address _account) external view returns (uint256);\\n\\n  function claimedAmounts(address _account) external view returns (uint256);\\n\\n  function pairAmounts(address _account) external view returns (uint256);\\n\\n  function getVestedAmount(address _account) external view returns (uint256);\\n\\n  function transferredAverageStakedAmounts(address _account) external view returns (uint256);\\n\\n  function transferredCumulativeRewards(address _account) external view returns (uint256);\\n\\n  function cumulativeRewardDeductions(address _account) external view returns (uint256);\\n\\n  function bonusRewards(address _account) external view returns (uint256);\\n\\n  function getMaxVestableAmount(address _account) external view returns (uint256);\\n\\n  function getCombinedAverageStakedAmount(address _account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x60ef693b02dca48ab14d3f352632065fd8c5cd7a49063e2758eec857bc73ce11\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x608060405234801561001057600080fd5b50615aa780620000216000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636c479457116100a2578063ca40742c11610071578063ca40742c146102d0578063e76740f8146102e3578063e7ab99d41461034c578063ea7f4e1f1461035f578063ea886bd11461037257600080fd5b80636c479457146102775780638e9345d21461028a578063ba3f6bd81461029d578063c988abec146102b057600080fd5b8063188e45b1116100e9578063188e45b1146102015780632c7d9c7a14610214578063485cc9551461022757806354c103941461023c5780636b522aa91461026457600080fd5b8063012b31a81461011b57806306823e5b146101445780630e5444e414610167578063115b8adf1461017d575b600080fd5b61012e6101293660046152fa565b610385565b60405161013b919061573a565b60405180910390f35b6101576101523660046152cf565b61043c565b604051901515815260200161013b565b61016f610636565b60405190815260200161013b565b61019061018b36600461533f565b610790565b60405161013b9190600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e0830151151560e0830152610100808401511515818401525092915050565b61016f61020f366004615431565b610b68565b61016f610222366004615431565b610ddc565b61023a61023536600461523d565b611031565b005b61024f61024a366004615205565b6110e1565b6040805192835260208301919091520161013b565b61016f610272366004615205565b611300565b61016f610285366004615205565b611555565b61016f610298366004615205565b61176e565b61024f6102ab366004615205565b6119d6565b6102c36102be366004615275565b611db3565b60405161013b9190615665565b61016f6102de366004615205565b6123d6565b6102f66102f13660046152fa565b6125bd565b60405161013b9190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b61016f61035a366004615205565b6127bc565b61016f61036d366004615205565b61297e565b61012e61038036600461533f565b612b43565b6103b76040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b60006103c38685612db1565b604084018190529091506103d790826159e7565b602083018190526103ec908790879086613129565b60808401819052606084018290526020840151909161040a916159e7565b61041491906159e7565b602083018190528190610427908661599c565b610431919061588e565b825250949350505050565b600080836001600160a01b03166361176a0e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561047857600080fd5b505afa15801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190615221565b6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e857600080fd5b505afa1580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105209190615221565b90506000816001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b15801561055d57600080fd5b505afa158015610571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105959190615449565b90506000826001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b1580156105d257600080fd5b505afa1580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a9190615449565b9050610617868383613340565b9092509050610628868383886135b0565b101593505050505b92915050565b600080546001546040516370a0823160e01b81526001600160a01b0391821660048201528392620100009004909116906370a082319060240160206040518083038186803b15801561068757600080fd5b505afa15801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf9190615449565b90506000600160009054906101000a90046001600160a01b03166001600160a01b0316638f10369a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561071157600080fd5b505afa158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190615449565b610756906201518061599c565b6107629061016d61599c565b9050811561078657816107776127108361599c565b610781919061588e565b610789565b60005b9250505090565b6107e3604051806101200160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b6107eb61517f565b60405163103a258b60e31b8152600481018590526001600160a01b038616906381d12c58906024016101206040518083038186803b15801561082c57600080fd5b505afa158015610840573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086491906155b3565b61ffff166101008a0152151560e089015263ffffffff90811660c08901521660a08701525050506001600160a81b0316602083015260ff168082526001146108e85760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c995c5d595cdd081a5960721b60448201526064015b60405180910390fd5b600061091c868584602001516001600160a81b03168560a001518660c0015161091191906159fe565b63ffffffff16613129565b60c08501526020830151909150610941908790869085906001600160a81b03166135fe565b60a0840181905260c084015160208401516109669084906001600160a81b03166159e7565b61097091906159e7565b61097a91906159e7565b835260208201516109959087906001600160a81b031661382f565b6040860152608085018190526060850182905284516001600160a81b03918216926109c19216906159e7565b6109cb91906159e7565b83526020820151606084015160808501516109f39289926001600160a81b0390911691614356565b151560e086015250506101008083015160408086015161ffff9092169091119185019190915280516318160ddd60e01b815290516000916001600160a01b038916916318160ddd91600480820192602092909190829003018186803b158015610a5b57600080fd5b505afa158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a939190615449565b90506000610aa088614847565b9050600082118015610ab25750600081115b15610ada5784518190610ac690849061599c565b610ad0919061588e565b6020860152610b5d565b876001600160a01b0316638eb50a386040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1357600080fd5b505afa158015610b27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4b9190615449565b8551610b57919061599c565b60208601525b505050509392505050565b600080546001546040516370a0823160e01b81526001600160a01b0391821660048201528392620100009004909116906370a082319060240160206040518083038186803b158015610bb957600080fd5b505afa158015610bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf19190615449565b90506000600160009054906101000a90046001600160a01b03166001600160a01b031663c8f33c916040518163ffffffff1660e01b815260040160206040518083038186803b158015610c4357600080fd5b505afa158015610c57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7b9190615449565b610c8590426159e7565b600160009054906101000a90046001600160a01b03166001600160a01b0316638f10369a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610cd357600080fd5b505afa158015610ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0b9190615449565b610d15919061599c565b90506000600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d6757600080fd5b505afa158015610d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9f9190615449565b90506000610dad8385615857565b1115610dd457610dbd8284615857565b610dc7828761599c565b610dd1919061588e565b93505b505050919050565b600080546001546040516370a0823160e01b81526001600160a01b0391821660048201528392620100009004909116906370a082319060240160206040518083038186803b158015610e2d57600080fd5b505afa158015610e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e659190615449565b90506000600160009054906101000a90046001600160a01b03166001600160a01b031663c8f33c916040518163ffffffff1660e01b815260040160206040518083038186803b158015610eb757600080fd5b505afa158015610ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eef9190615449565b610ef990426159e7565b600160009054906101000a90046001600160a01b03166001600160a01b0316638f10369a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f4757600080fd5b505afa158015610f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7f9190615449565b610f89919061599c565b90506000600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fdb57600080fd5b505afa158015610fef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110139190615449565b90508015610dd45780856110278486615857565b610dc7919061599c565b600061103d6001614a19565b90508015611055576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b038681169190910291909117909155600180546001600160a01b03191691841691909117905580156110dc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001546040516370a0823160e01b81526001600160a01b03838116600483015260009283923092632c7d9c7a9216906370a082319060240160206040518083038186803b15801561113157600080fd5b505afa158015611145573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111699190615449565b6040518263ffffffff1660e01b815260040161118791815260200190565b60206040518083038186803b15801561119f57600080fd5b505afa1580156111b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d79190615449565b915081156112fb57600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561122d57600080fd5b505afa158015611241573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112659190615449565b6001546040516370a0823160e01b81526001600160a01b0386811660048301526127109216906370a082319060240160206040518083038186803b1580156112ac57600080fd5b505afa1580156112c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e49190615449565b6112ee919061599c565b6112f8919061588e565b90505b915091565b6000816001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b15801561133b57600080fd5b505afa15801561134f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113739190615449565b6113805750612710919050565b816001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113b957600080fd5b505afa1580156113cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f19190615221565b6001600160a01b03166346b55fbb836001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b15801561143857600080fd5b505afa15801561144c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114709190615449565b846001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b1580156114a957600080fd5b505afa1580156114bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e19190615449565b6040516001600160e01b031960e085901b1681526004810192909252602482015260440160206040518083038186803b15801561151d57600080fd5b505afa158015611531573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106309190615449565b600080826001600160a01b0316636f7d78286040518163ffffffff1660e01b815260040160206040518083038186803b15801561159157600080fd5b505afa1580156115a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c99190615221565b6001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b15801561160157600080fd5b505afa158015611615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116399190615549565b50509050826001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b15801561167657600080fd5b505afa15801561168a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ae9190615221565b6001600160a01b0316631bffac9f60405180604001604052806201518081526020018463ffffffff168152506116e386611300565b6040516001600160e01b031960e085901b1681528251600482015260209092015163ffffffff1660248301526044820152606401604080518083038186803b15801561172e57600080fd5b505afa158015611742573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176691906154c1565b949350505050565b600080826001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b1580156117aa57600080fd5b505afa1580156117be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e29190615221565b6001600160a01b0316636f7d78286040518163ffffffff1660e01b815260040160206040518083038186803b15801561181a57600080fd5b505afa15801561182e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118529190615221565b6001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b15801561188a57600080fd5b505afa15801561189e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c29190615549565b505090506000806118d7856000806000614356565b5091509150846001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561191557600080fd5b505afa158015611929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194d9190615221565b6001600160a01b031663d934c20b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561198557600080fd5b505afa158015611999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bd919061552d565b63ffffffff168363ffffffff16838361102791906159e7565b6000806000836001600160a01b031663ad7a672f6040518163ffffffff1660e01b815260040160c06040518083038186803b158015611a1457600080fd5b505afa158015611a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4c91906154e4565b505050505090506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a8e57600080fd5b505afa158015611aa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac69190615449565b90506000856001600160a01b03166361176a0e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b0357600080fd5b505afa158015611b17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3b9190615221565b6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015611b7357600080fd5b505afa158015611b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bab9190615221565b6001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b158015611be357600080fd5b505afa158015611bf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1b9190615449565b90506000866001600160a01b03166361176a0e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611c5857600080fd5b505afa158015611c6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c909190615221565b6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015611cc857600080fd5b505afa158015611cdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d009190615221565b6001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b158015611d3857600080fd5b505afa158015611d4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d709190615449565b611d7a90836159e7565b905081611d87848361599c565b611d91919061588e565b955082611d9e858861599c565b611da8919061588e565b945050505050915091565b6060611dbf83836159e7565b611dca906001615857565b67ffffffffffffffff811115611df057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611e2357816020015b6060815260200190600190039081611e0e5790505b5090506000835b8381116123cb576000611e3d88886159fe565b611e4890600161586f565b63ffffffff1667ffffffffffffffff811115611e7457634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611e9d578160200160208202803683370190505b5090506000808a6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b158015611edc57600080fd5b505afa158015611ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f149190615221565b6001600160a01b031663bb60672b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611f4c57600080fd5b505afa158015611f60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f849190615599565b611f919060ff168b6159bb565b90505b8a6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b158015611fcd57600080fd5b505afa158015611fe1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120059190615221565b6001600160a01b031663bb60672b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561203d57600080fd5b505afa158015612051573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120759190615599565b6120829060ff168a6159bb565b63ffffffff168163ffffffff161161237b5760008b6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156120cf57600080fd5b505afa1580156120e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121079190615221565b6001600160a01b0316631bffac9f604051806040016040528062015180815260200185606461213691906159bb565b63ffffffff1681525060648f6001600160a01b03166360ebfee66040518163ffffffff1660e01b815260040160206040518083038186803b15801561217a57600080fd5b505afa15801561218e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b29190615449565b6121bc908a61599c565b6121c6919061588e565b6040516001600160e01b031960e085901b1681528251600482015260209092015163ffffffff1660248301526044820152606401604080518083038186803b15801561221157600080fd5b505afa158015612225573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061224991906154c1565b9150508084848151811061226d57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152612283600184615857565b9250508a6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156122bf57600080fd5b505afa1580156122d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f79190615221565b6001600160a01b031663bb60672b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561232f57600080fd5b505afa158015612343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123679190615599565b6123749060ff168261586f565b9050611f94565b508185858151811061239d57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526123b3600185615857565b935050506001816123c49190615857565b9050611e2a565b505095945050505050565b6000816001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b15801561241157600080fd5b505afa158015612425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124499190615449565b6124565750612710919050565b816001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b15801561248f57600080fd5b505afa1580156124a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124c79190615449565b826001600160a01b03166360ebfee66040518163ffffffff1660e01b815260040160206040518083038186803b15801561250057600080fd5b505afa158015612514573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125389190615449565b836001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b15801561257157600080fd5b505afa158015612585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a99190615449565b6125b3919061599c565b610630919061588e565b6125fd6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61260985858585613129565b60c0830181905260a083018290529061262290856159e7565b61262c91906159e7565b8152612638858461382f565b6040840152608083018190526060830182905282516001600160a81b0390911691612662916159e7565b61266c91906159e7565b8160000181815250506000856001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156126b057600080fd5b505afa1580156126c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126e89190615449565b905060006126f587614847565b90506000821180156127075750600081115b1561272f578251819061271b90849061599c565b612725919061588e565b60208401526127b2565b866001600160a01b0316638eb50a386040518163ffffffff1660e01b815260040160206040518083038186803b15801561276857600080fd5b505afa15801561277c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a09190615449565b83516127ac919061599c565b60208401525b5050949350505050565b600080826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156127f857600080fd5b505afa15801561280c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128309190615449565b116128695760405162461bcd60e51b81526020600482015260096024820152684e6f20737570706c7960b81b60448201526064016108df565b600061287483614847565b9050826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156128af57600080fd5b505afa1580156128c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e79190615449565b836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561292057600080fd5b505afa158015612934573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129589190615599565b61296390600a6158f1565b61296d908361599c565b612977919061588e565b9392505050565b6000806000836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401604080518083038186803b1580156129bb57600080fd5b505afa1580156129cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129f391906154c1565b91509150600082118015612a075750600081115b612a425760405162461bcd60e51b815260206004820152600c60248201526b4e6f206c697175696469747960a01b60448201526064016108df565b81846001600160a01b03166361176a0e6040518163ffffffff1660e01b815260040160206040518083038186803b158015612a7c57600080fd5b505afa158015612a90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab49190615221565b6001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015612aec57600080fd5b505afa158015612b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b249190615599565b612b2f90600a6158f1565b612b39908361599c565b611766919061588e565b612b756040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b612b7d61517f565b60405163103a258b60e31b8152600481018590526001600160a01b038616906381d12c58906024016101206040518083038186803b158015612bbe57600080fd5b505afa158015612bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf691906155b3565b50151560e089015263ffffffff90811660c08901521660a08701525050506001600160a81b0316602083015260ff16808252600214612c6c5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c995c5d595cdd081a5960721b60448201526064016108df565b6020810151604051631c70ca2960e01b81526001600160a81b0390911660048201526000906001600160a01b03871690631c70ca299060240160206040518083038186803b158015612cbd57600080fd5b505afa158015612cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf59190615449565b90506000612d038783612db1565b60408601819052909150612d1790826159e7565b6020850152612d28878685846135fe565b8460600181815250506000612d51888787602001518760a001518860c0015161091191906159fe565b60808701819052606087015160208801519293509091612d729084906159e7565b612d7c91906159e7565b612d8691906159e7565b602086018190528290612d99908561599c565b612da3919061588e565b855250929695505050505050565b600080836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ded57600080fd5b505afa158015612e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e259190615449565b612e2e85614847565b612e38908561599c565b612e42919061588e565b915061271061ffff16846001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015612e8457600080fd5b505afa158015612e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ebc9190615221565b6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ef457600080fd5b505afa158015612f08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f2c9190615221565b6040516315435d0560e31b815260006004820152600160248201526001600160a01b03919091169063aa1ae8289060440160206040518083038186803b158015612f7557600080fd5b505afa158015612f89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fad9190615417565b856001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015612fe657600080fd5b505afa158015612ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061301e9190615221565b6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b15801561305657600080fd5b505afa15801561306a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061308e9190615221565b6001600160a01b03166350e0942b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156130c657600080fd5b505afa1580156130da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130fe9190615417565b6131089190615831565b6131169061ffff168461599c565b613120919061588e565b90509250929050565b60008061271061ffff16866001600160a01b0316636a9d11196040518163ffffffff1660e01b815260040160206040518083038186803b15801561316c57600080fd5b505afa158015613180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131a49190615221565b6001600160a01b031663051a497b856040518263ffffffff1660e01b81526004016131d191815260200190565b60206040518083038186803b1580156131e957600080fd5b505afa1580156131fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132219190615417565b61322f9061ffff168661599c565b613239919061588e565b915084613247576000613335565b856001600160a01b0316636a9d11196040518163ffffffff1660e01b815260040160206040518083038186803b15801561328057600080fd5b505afa158015613294573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132b89190615221565b6001600160a01b031663591b36f7856040518263ffffffff1660e01b81526004016132e591815260200190565b60206040518083038186803b1580156132fd57600080fd5b505afa158015613311573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133359190615449565b905094509492505050565b600080600061271061ffff16866001600160a01b031663293d09156040518163ffffffff1660e01b815260040160206040518083038186803b15801561338557600080fd5b505afa158015613399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133bd9190615417565b6133c990612710615831565b6133d79061ffff168761599c565b6133e1919061588e565b9050808411156134215760006133f782866159e7565b9050613404868683614aa6565b909450925061341587858584614abd565b90945092506135a79050565b600061342d85836159e7565b90506000806000896001600160a01b031663ad7a672f6040518163ffffffff1660e01b815260040160c06040518083038186803b15801561346d57600080fd5b505afa158015613481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134a591906154e4565b5094505093505092508381836134bb9190615857565b1180156135685750896001600160a01b0316637b5d6fe36040518163ffffffff1660e01b815260040160206040518083038186803b1580156134fc57600080fd5b505afa158015613510573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135349190615417565b61ffff1683612710866135478587615857565b61355191906159e7565b61355b919061599c565b613565919061588e565b10155b156135a25760008061357a8c87614afb565b9150915061358a8b8b8484614e38565b909950975061359a898988614e51565b909950975050505b505050505b50935093915050565b60008060006135bf8785614e5e565b90506000806135ce8987614afb565b915091506135de88888484614e38565b90955093506135ee858585614aa6565b909a909950975050505050505050565b6000831580156137165750846001600160a01b0316636a9d11196040518163ffffffff1660e01b815260040160206040518083038186803b15801561364257600080fd5b505afa158015613656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061367a9190615221565b6001600160a01b031663ce521f266040518163ffffffff1660e01b815260040160206040518083038186803b1580156136b257600080fd5b505afa1580156136c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136ea919061552d565b8360a001516136f9919061586f565b63ffffffff164211801561371657508260c0015163ffffffff1642105b156117665761271061ffff16856001600160a01b0316636a9d11196040518163ffffffff1660e01b815260040160206040518083038186803b15801561375b57600080fd5b505afa15801561376f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137939190615221565b6001600160a01b031663956872ca856040518263ffffffff1660e01b81526004016137be9190615773565b60206040518083038186803b1580156137d657600080fd5b505afa1580156137ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061380e9190615417565b61381c9061ffff168461599c565b613826919061588e565b95945050505050565b600080600061271061ffff16856001600160a01b0316632c86d98e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561387457600080fd5b505afa158015613888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138ac9190615599565b60ff16866001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b1580156138e857600080fd5b505afa1580156138fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139209190615221565b6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b15801561395857600080fd5b505afa15801561396c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139909190615221565b6001600160a01b031663a2028d976040518163ffffffff1660e01b815260040160206040518083038186803b1580156139c857600080fd5b505afa1580156139dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a009190615417565b613a0e9061ffff168761599c565b613a18919061599c565b613a22919061588e565b92506000856001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015613a5f57600080fd5b505afa158015613a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a979190615221565b6001600160a01b0316636f7d78286040518163ffffffff1660e01b815260040160206040518083038186803b158015613acf57600080fd5b505afa158015613ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b079190615221565b6001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b158015613b3f57600080fd5b505afa158015613b53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b779190615549565b505090506000866001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015613bb657600080fd5b505afa158015613bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bee9190615221565b6001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b158015613c2657600080fd5b505afa158015613c3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c5e9190615449565b90506000876001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015613c9b57600080fd5b505afa158015613caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cd39190615221565b6001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b158015613d0b57600080fd5b505afa158015613d1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d439190615449565b905060008363ffffffff16896001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015613d8757600080fd5b505afa158015613d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613dbf9190615221565b6001600160a01b031663d934c20b6040518163ffffffff1660e01b815260040160206040518083038186803b158015613df757600080fd5b505afa158015613e0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e2f919061552d565b63ffffffff168a6001600160a01b0316632c86d98e6040518163ffffffff1660e01b815260040160206040518083038186803b158015613e6e57600080fd5b505afa158015613e82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ea69190615599565b60ff16613eb38a8c6159e7565b613ebd919061599c565b613ec7919061599c565b613ed1919061588e565b90506000818a6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015613f0f57600080fd5b505afa158015613f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f479190615221565b6001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b158015613f7f57600080fd5b505afa158015613f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613fb79190615449565b613fc19190615857565b905060008a6001600160a01b0316632c86d98e6040518163ffffffff1660e01b815260040160206040518083038186803b158015613ffe57600080fd5b505afa158015614012573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140369190615599565b60ff166140438a8c6159e7565b61404d919061599c565b8b6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561408657600080fd5b505afa15801561409a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140be9190615221565b6001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b1580156140f657600080fd5b505afa15801561410a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061412e9190615449565b6141389190615857565b90508a6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561417357600080fd5b505afa158015614187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141ab9190615221565b6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156141e357600080fd5b505afa1580156141f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061421b9190615221565b6001600160a01b0316631437d6d48b8d6001600160a01b0316632c86d98e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561426357600080fd5b505afa158015614277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061429b9190615599565b6040516001600160e01b031960e085901b1681526001600160a81b03909216600483015260ff16602482015260448101889052606481018790526084810184905260a4810185905260c401604080518083038186803b1580156142fd57600080fd5b505afa158015614311573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143359190615380565b999c6001600160a81b039091169b5061ffff90991699505050505050505050565b600080600080876001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561439557600080fd5b505afa1580156143a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143cd9190615221565b6001600160a01b0316636f7d78286040518163ffffffff1660e01b815260040160206040518083038186803b15801561440557600080fd5b505afa158015614419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061443d9190615221565b6001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b15801561447557600080fd5b505afa158015614489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144ad9190615549565b505090506000886001600160a01b0316632c86d98e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156144ec57600080fd5b505afa158015614500573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145249190615599565b60ff1686614532898b6159e7565b61453c91906159e7565b614546919061599c565b905060008263ffffffff168a6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561458a57600080fd5b505afa15801561459e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145c29190615221565b6001600160a01b031663d934c20b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156145fa57600080fd5b505afa15801561460e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614632919061552d565b6146429063ffffffff168461599c565b61464c919061588e565b9050808a6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561468857600080fd5b505afa15801561469c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146c09190615221565b6001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b1580156146f857600080fd5b505afa15801561470c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147309190615449565b61473a9190615857565b955086828b6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561477757600080fd5b505afa15801561478b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147af9190615221565b6001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b1580156147e757600080fd5b505afa1580156147fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061481f9190615449565b6148299190615857565b6148339190615857565b945084861193505050509450945094915050565b600080826001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561488357600080fd5b505afa158015614897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148bb9190615221565b60405163055f575160e41b81526001600160a01b038581166004830152919250600191600091908416906355f575109060240160a06040518083038186803b15801561490657600080fd5b505afa15801561491a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061493e91906153a9565b505050506001600160a81b03169050806000146149d9576040516329b2a60b60e21b81526001600160a01b03868116600483015284169063a6ca982c9060240160c06040518083038186803b15801561499657600080fd5b505afa1580156149aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149ce9190615461565b509397509194505050505b81610dd45760405162461bcd60e51b815260206004820152601060248201526f4e656761746976652062616c616e636560801b60448201526064016108df565b60008054610100900460ff1615614a60578160ff166001148015614a3c5750303b155b614a585760405162461bcd60e51b81526004016108df906156ec565b506000919050565b60005460ff808416911610614a875760405162461bcd60e51b81526004016108df906156ec565b506000805460ff191660ff92909216919091179055600190565b919050565b826000614ab383856159e7565b9050935093915050565b6000806000614acc8785614e5e565b9050600080614adb8987614afb565b91509150614aea888885614e51565b90955093506135ee85858484615166565b6000806000846001600160a01b03166361176a0e6040518163ffffffff1660e01b815260040160206040518083038186803b158015614b3957600080fd5b505afa158015614b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614b719190615221565b90506000816001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015614bae57600080fd5b505afa158015614bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614be69190615221565b90506000866001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015614c2357600080fd5b505afa158015614c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c5b9190615449565b90506000836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015614c9857600080fd5b505afa158015614cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614cd09190615449565b90506000886001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401604080518083038186803b158015614d0c57600080fd5b505afa158015614d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614d4491906154c1565b509050600083614d54838b61599c565b614d5e919061588e565b90506000614d6b87614847565b60405163055f575160e41b81526001600160a01b0389811660048301529192506000918816906355f575109060240160a06040518083038186803b158015614db257600080fd5b505afa158015614dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614dea91906153a9565b505050506001600160a81b03169050848184614e06919061599c565b614e10919061588e565b995084614e1d848461599c565b614e27919061588e565b985050505050505050509250929050565b600080614e4584876159e7565b915061333583866159e7565b826000614ab38385615857565b600080836001600160a01b03166361176a0e6040518163ffffffff1660e01b815260040160206040518083038186803b158015614e9a57600080fd5b505afa158015614eae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614ed29190615221565b6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015614f0a57600080fd5b505afa158015614f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614f429190615221565b90506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015614f7f57600080fd5b505afa158015614f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614fb79190615449565b6040516370a0823160e01b81526001600160a01b0387811660048301529192506000918416906370a082319060240160206040518083038186803b158015614ffe57600080fd5b505afa158015615012573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906150369190615449565b9050600082615045838861599c565b61504f919061588e565b604051630d9c362960e41b8152600160048201529091506000906001600160a01b0386169063d9c362909060240160206040518083038186803b15801561509557600080fd5b505afa1580156150a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906150cd9190615449565b90506000856001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561510a57600080fd5b505afa15801561511e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906151429190615449565b90508061514f838561599c565b615159919061588e565b9998505050505050505050565b6000806151738487615857565b91506133358386615857565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915290565b80516001600160a81b0381168114614aa157600080fd5b805161ffff81168114614aa157600080fd5b805160ff81168114614aa157600080fd5b600060208284031215615216578081fd5b813561297781615a39565b600060208284031215615232578081fd5b815161297781615a39565b6000806040838503121561524f578081fd5b823561525a81615a39565b9150602083013561526a81615a39565b809150509250929050565b600080600080600060a0868803121561528c578081fd5b853561529781615a39565b945060208601356152a781615a5f565b935060408601356152b781615a5f565b94979396509394606081013594506080013592915050565b600080604083850312156152e1578182fd5b82356152ec81615a39565b946020939093013593505050565b6000806000806080858703121561530f578182fd5b843561531a81615a39565b9350602085013561532a81615a51565b93969395505050506040820135916060013590565b600080600060608486031215615353578081fd5b833561535e81615a39565b925060208401359150604084013561537581615a51565b809150509250925092565b60008060408385031215615392578182fd5b61539b836151cb565b9150613120602084016151e2565b600080600080600060a086880312156153c0578283fd5b6153c9866151cb565b94506153d7602087016151f4565b935060408601516153e781615a5f565b60608701519093506153f881615a5f565b608087015190925061540981615a5f565b809150509295509295909350565b600060208284031215615428578081fd5b612977826151e2565b600060208284031215615442578081fd5b5035919050565b60006020828403121561545a578081fd5b5051919050565b60008060008060008060c08789031215615479578384fd5b86519550602087015161548b81615a51565b9450615499604088016151cb565b93506154a7606088016151f4565b92506080870151915060a087015190509295509295509295565b600080604083850312156154d3578182fd5b505080516020909101519092909150565b60008060008060008060c087890312156154fc578384fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b60006020828403121561553e578081fd5b815161297781615a5f565b60008060006060848603121561555d578081fd5b835161556881615a5f565b602085015190935069ffffffffffffffffffff81168114615587578182fd5b80925050604084015190509250925092565b6000602082840312156155aa578081fd5b612977826151f4565b60008060008060008060008060006101208a8c0312156155d1578687fd5b6155da8a6151f4565b98506155e860208b016151cb565b97506155f660408b016151e2565b965061560460608b016151e2565b955060808a015161561481615a39565b60a08b015190955061562581615a5f565b60c08b015190945061563681615a5f565b60e08b015190935061564781615a51565b91506156566101008b016151e2565b90509295985092959850929598565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156156df57878503603f19018452815180518087529087019087870190895b818110156156c9578351835292890192918901916001016156ad565b509096505050928501929085019060010161568b565b5092979650505050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60a08101610630828480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b815160ff1681526020808301516001600160a81b0316908201526040808301516101208301916157a89084018261ffff169052565b5060608301516157be606084018261ffff169052565b5060808301516157d960808401826001600160a01b03169052565b5060a08301516157f160a084018263ffffffff169052565b5060c083015161580960c084018263ffffffff169052565b5060e083015161581d60e084018215159052565b506101009283015161ffff16919092015290565b600061ffff80831681851680830382111561584e5761584e615a23565b01949350505050565b6000821982111561586a5761586a615a23565b500190565b600063ffffffff80831681851680830382111561584e5761584e615a23565b6000826158a957634e487b7160e01b81526012600452602481fd5b500490565b600181815b808511156158e95781600019048211156158cf576158cf615a23565b808516156158dc57918102915b93841c93908002906158b3565b509250929050565b600061297760ff84168360008261590a57506001610630565b8161591757506000610630565b816001811461592d576002811461593757615953565b6001915050610630565b60ff84111561594857615948615a23565b50506001821b610630565b5060208310610133831016604e8410600b8410161715615976575081810a610630565b61598083836158ae565b806000190482111561599457615994615a23565b029392505050565b60008160001904831182151516156159b6576159b6615a23565b500290565b600063ffffffff808316818516818304811182151516156159de576159de615a23565b02949350505050565b6000828210156159f9576159f9615a23565b500390565b600063ffffffff83811690831681811015615a1b57615a1b615a23565b039392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114615a4e57600080fd5b50565b8015158114615a4e57600080fd5b63ffffffff81168114615a4e57600080fdfea2646970667358221220bf0900e1e2b1f497dd80fd16de8acc5cacd27731a651e207b4b204455331a48464736f6c63430008040033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80636c479457116100a2578063ca40742c11610071578063ca40742c146102d0578063e76740f8146102e3578063e7ab99d41461034c578063ea7f4e1f1461035f578063ea886bd11461037257600080fd5b80636c479457146102775780638e9345d21461028a578063ba3f6bd81461029d578063c988abec146102b057600080fd5b8063188e45b1116100e9578063188e45b1146102015780632c7d9c7a14610214578063485cc9551461022757806354c103941461023c5780636b522aa91461026457600080fd5b8063012b31a81461011b57806306823e5b146101445780630e5444e414610167578063115b8adf1461017d575b600080fd5b61012e6101293660046152fa565b610385565b60405161013b919061573a565b60405180910390f35b6101576101523660046152cf565b61043c565b604051901515815260200161013b565b61016f610636565b60405190815260200161013b565b61019061018b36600461533f565b610790565b60405161013b9190600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e0830151151560e0830152610100808401511515818401525092915050565b61016f61020f366004615431565b610b68565b61016f610222366004615431565b610ddc565b61023a61023536600461523d565b611031565b005b61024f61024a366004615205565b6110e1565b6040805192835260208301919091520161013b565b61016f610272366004615205565b611300565b61016f610285366004615205565b611555565b61016f610298366004615205565b61176e565b61024f6102ab366004615205565b6119d6565b6102c36102be366004615275565b611db3565b60405161013b9190615665565b61016f6102de366004615205565b6123d6565b6102f66102f13660046152fa565b6125bd565b60405161013b9190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b61016f61035a366004615205565b6127bc565b61016f61036d366004615205565b61297e565b61012e61038036600461533f565b612b43565b6103b76040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b60006103c38685612db1565b604084018190529091506103d790826159e7565b602083018190526103ec908790879086613129565b60808401819052606084018290526020840151909161040a916159e7565b61041491906159e7565b602083018190528190610427908661599c565b610431919061588e565b825250949350505050565b600080836001600160a01b03166361176a0e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561047857600080fd5b505afa15801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190615221565b6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e857600080fd5b505afa1580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105209190615221565b90506000816001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b15801561055d57600080fd5b505afa158015610571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105959190615449565b90506000826001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b1580156105d257600080fd5b505afa1580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a9190615449565b9050610617868383613340565b9092509050610628868383886135b0565b101593505050505b92915050565b600080546001546040516370a0823160e01b81526001600160a01b0391821660048201528392620100009004909116906370a082319060240160206040518083038186803b15801561068757600080fd5b505afa15801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf9190615449565b90506000600160009054906101000a90046001600160a01b03166001600160a01b0316638f10369a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561071157600080fd5b505afa158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190615449565b610756906201518061599c565b6107629061016d61599c565b9050811561078657816107776127108361599c565b610781919061588e565b610789565b60005b9250505090565b6107e3604051806101200160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b6107eb61517f565b60405163103a258b60e31b8152600481018590526001600160a01b038616906381d12c58906024016101206040518083038186803b15801561082c57600080fd5b505afa158015610840573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086491906155b3565b61ffff166101008a0152151560e089015263ffffffff90811660c08901521660a08701525050506001600160a81b0316602083015260ff168082526001146108e85760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c995c5d595cdd081a5960721b60448201526064015b60405180910390fd5b600061091c868584602001516001600160a81b03168560a001518660c0015161091191906159fe565b63ffffffff16613129565b60c08501526020830151909150610941908790869085906001600160a81b03166135fe565b60a0840181905260c084015160208401516109669084906001600160a81b03166159e7565b61097091906159e7565b61097a91906159e7565b835260208201516109959087906001600160a81b031661382f565b6040860152608085018190526060850182905284516001600160a81b03918216926109c19216906159e7565b6109cb91906159e7565b83526020820151606084015160808501516109f39289926001600160a81b0390911691614356565b151560e086015250506101008083015160408086015161ffff9092169091119185019190915280516318160ddd60e01b815290516000916001600160a01b038916916318160ddd91600480820192602092909190829003018186803b158015610a5b57600080fd5b505afa158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a939190615449565b90506000610aa088614847565b9050600082118015610ab25750600081115b15610ada5784518190610ac690849061599c565b610ad0919061588e565b6020860152610b5d565b876001600160a01b0316638eb50a386040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1357600080fd5b505afa158015610b27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4b9190615449565b8551610b57919061599c565b60208601525b505050509392505050565b600080546001546040516370a0823160e01b81526001600160a01b0391821660048201528392620100009004909116906370a082319060240160206040518083038186803b158015610bb957600080fd5b505afa158015610bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf19190615449565b90506000600160009054906101000a90046001600160a01b03166001600160a01b031663c8f33c916040518163ffffffff1660e01b815260040160206040518083038186803b158015610c4357600080fd5b505afa158015610c57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7b9190615449565b610c8590426159e7565b600160009054906101000a90046001600160a01b03166001600160a01b0316638f10369a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610cd357600080fd5b505afa158015610ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0b9190615449565b610d15919061599c565b90506000600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d6757600080fd5b505afa158015610d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9f9190615449565b90506000610dad8385615857565b1115610dd457610dbd8284615857565b610dc7828761599c565b610dd1919061588e565b93505b505050919050565b600080546001546040516370a0823160e01b81526001600160a01b0391821660048201528392620100009004909116906370a082319060240160206040518083038186803b158015610e2d57600080fd5b505afa158015610e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e659190615449565b90506000600160009054906101000a90046001600160a01b03166001600160a01b031663c8f33c916040518163ffffffff1660e01b815260040160206040518083038186803b158015610eb757600080fd5b505afa158015610ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eef9190615449565b610ef990426159e7565b600160009054906101000a90046001600160a01b03166001600160a01b0316638f10369a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f4757600080fd5b505afa158015610f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7f9190615449565b610f89919061599c565b90506000600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fdb57600080fd5b505afa158015610fef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110139190615449565b90508015610dd45780856110278486615857565b610dc7919061599c565b600061103d6001614a19565b90508015611055576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b038681169190910291909117909155600180546001600160a01b03191691841691909117905580156110dc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001546040516370a0823160e01b81526001600160a01b03838116600483015260009283923092632c7d9c7a9216906370a082319060240160206040518083038186803b15801561113157600080fd5b505afa158015611145573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111699190615449565b6040518263ffffffff1660e01b815260040161118791815260200190565b60206040518083038186803b15801561119f57600080fd5b505afa1580156111b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d79190615449565b915081156112fb57600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561122d57600080fd5b505afa158015611241573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112659190615449565b6001546040516370a0823160e01b81526001600160a01b0386811660048301526127109216906370a082319060240160206040518083038186803b1580156112ac57600080fd5b505afa1580156112c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e49190615449565b6112ee919061599c565b6112f8919061588e565b90505b915091565b6000816001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b15801561133b57600080fd5b505afa15801561134f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113739190615449565b6113805750612710919050565b816001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113b957600080fd5b505afa1580156113cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f19190615221565b6001600160a01b03166346b55fbb836001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b15801561143857600080fd5b505afa15801561144c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114709190615449565b846001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b1580156114a957600080fd5b505afa1580156114bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e19190615449565b6040516001600160e01b031960e085901b1681526004810192909252602482015260440160206040518083038186803b15801561151d57600080fd5b505afa158015611531573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106309190615449565b600080826001600160a01b0316636f7d78286040518163ffffffff1660e01b815260040160206040518083038186803b15801561159157600080fd5b505afa1580156115a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c99190615221565b6001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b15801561160157600080fd5b505afa158015611615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116399190615549565b50509050826001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b15801561167657600080fd5b505afa15801561168a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ae9190615221565b6001600160a01b0316631bffac9f60405180604001604052806201518081526020018463ffffffff168152506116e386611300565b6040516001600160e01b031960e085901b1681528251600482015260209092015163ffffffff1660248301526044820152606401604080518083038186803b15801561172e57600080fd5b505afa158015611742573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176691906154c1565b949350505050565b600080826001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b1580156117aa57600080fd5b505afa1580156117be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e29190615221565b6001600160a01b0316636f7d78286040518163ffffffff1660e01b815260040160206040518083038186803b15801561181a57600080fd5b505afa15801561182e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118529190615221565b6001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b15801561188a57600080fd5b505afa15801561189e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c29190615549565b505090506000806118d7856000806000614356565b5091509150846001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561191557600080fd5b505afa158015611929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194d9190615221565b6001600160a01b031663d934c20b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561198557600080fd5b505afa158015611999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bd919061552d565b63ffffffff168363ffffffff16838361102791906159e7565b6000806000836001600160a01b031663ad7a672f6040518163ffffffff1660e01b815260040160c06040518083038186803b158015611a1457600080fd5b505afa158015611a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4c91906154e4565b505050505090506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a8e57600080fd5b505afa158015611aa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac69190615449565b90506000856001600160a01b03166361176a0e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b0357600080fd5b505afa158015611b17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3b9190615221565b6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015611b7357600080fd5b505afa158015611b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bab9190615221565b6001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b158015611be357600080fd5b505afa158015611bf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1b9190615449565b90506000866001600160a01b03166361176a0e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611c5857600080fd5b505afa158015611c6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c909190615221565b6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015611cc857600080fd5b505afa158015611cdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d009190615221565b6001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b158015611d3857600080fd5b505afa158015611d4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d709190615449565b611d7a90836159e7565b905081611d87848361599c565b611d91919061588e565b955082611d9e858861599c565b611da8919061588e565b945050505050915091565b6060611dbf83836159e7565b611dca906001615857565b67ffffffffffffffff811115611df057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611e2357816020015b6060815260200190600190039081611e0e5790505b5090506000835b8381116123cb576000611e3d88886159fe565b611e4890600161586f565b63ffffffff1667ffffffffffffffff811115611e7457634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611e9d578160200160208202803683370190505b5090506000808a6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b158015611edc57600080fd5b505afa158015611ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f149190615221565b6001600160a01b031663bb60672b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611f4c57600080fd5b505afa158015611f60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f849190615599565b611f919060ff168b6159bb565b90505b8a6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b158015611fcd57600080fd5b505afa158015611fe1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120059190615221565b6001600160a01b031663bb60672b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561203d57600080fd5b505afa158015612051573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120759190615599565b6120829060ff168a6159bb565b63ffffffff168163ffffffff161161237b5760008b6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156120cf57600080fd5b505afa1580156120e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121079190615221565b6001600160a01b0316631bffac9f604051806040016040528062015180815260200185606461213691906159bb565b63ffffffff1681525060648f6001600160a01b03166360ebfee66040518163ffffffff1660e01b815260040160206040518083038186803b15801561217a57600080fd5b505afa15801561218e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b29190615449565b6121bc908a61599c565b6121c6919061588e565b6040516001600160e01b031960e085901b1681528251600482015260209092015163ffffffff1660248301526044820152606401604080518083038186803b15801561221157600080fd5b505afa158015612225573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061224991906154c1565b9150508084848151811061226d57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152612283600184615857565b9250508a6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156122bf57600080fd5b505afa1580156122d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f79190615221565b6001600160a01b031663bb60672b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561232f57600080fd5b505afa158015612343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123679190615599565b6123749060ff168261586f565b9050611f94565b508185858151811061239d57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526123b3600185615857565b935050506001816123c49190615857565b9050611e2a565b505095945050505050565b6000816001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b15801561241157600080fd5b505afa158015612425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124499190615449565b6124565750612710919050565b816001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b15801561248f57600080fd5b505afa1580156124a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124c79190615449565b826001600160a01b03166360ebfee66040518163ffffffff1660e01b815260040160206040518083038186803b15801561250057600080fd5b505afa158015612514573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125389190615449565b836001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b15801561257157600080fd5b505afa158015612585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a99190615449565b6125b3919061599c565b610630919061588e565b6125fd6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61260985858585613129565b60c0830181905260a083018290529061262290856159e7565b61262c91906159e7565b8152612638858461382f565b6040840152608083018190526060830182905282516001600160a81b0390911691612662916159e7565b61266c91906159e7565b8160000181815250506000856001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156126b057600080fd5b505afa1580156126c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126e89190615449565b905060006126f587614847565b90506000821180156127075750600081115b1561272f578251819061271b90849061599c565b612725919061588e565b60208401526127b2565b866001600160a01b0316638eb50a386040518163ffffffff1660e01b815260040160206040518083038186803b15801561276857600080fd5b505afa15801561277c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a09190615449565b83516127ac919061599c565b60208401525b5050949350505050565b600080826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156127f857600080fd5b505afa15801561280c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128309190615449565b116128695760405162461bcd60e51b81526020600482015260096024820152684e6f20737570706c7960b81b60448201526064016108df565b600061287483614847565b9050826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156128af57600080fd5b505afa1580156128c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e79190615449565b836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561292057600080fd5b505afa158015612934573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129589190615599565b61296390600a6158f1565b61296d908361599c565b612977919061588e565b9392505050565b6000806000836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401604080518083038186803b1580156129bb57600080fd5b505afa1580156129cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129f391906154c1565b91509150600082118015612a075750600081115b612a425760405162461bcd60e51b815260206004820152600c60248201526b4e6f206c697175696469747960a01b60448201526064016108df565b81846001600160a01b03166361176a0e6040518163ffffffff1660e01b815260040160206040518083038186803b158015612a7c57600080fd5b505afa158015612a90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab49190615221565b6001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015612aec57600080fd5b505afa158015612b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b249190615599565b612b2f90600a6158f1565b612b39908361599c565b611766919061588e565b612b756040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b612b7d61517f565b60405163103a258b60e31b8152600481018590526001600160a01b038616906381d12c58906024016101206040518083038186803b158015612bbe57600080fd5b505afa158015612bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf691906155b3565b50151560e089015263ffffffff90811660c08901521660a08701525050506001600160a81b0316602083015260ff16808252600214612c6c5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c995c5d595cdd081a5960721b60448201526064016108df565b6020810151604051631c70ca2960e01b81526001600160a81b0390911660048201526000906001600160a01b03871690631c70ca299060240160206040518083038186803b158015612cbd57600080fd5b505afa158015612cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf59190615449565b90506000612d038783612db1565b60408601819052909150612d1790826159e7565b6020850152612d28878685846135fe565b8460600181815250506000612d51888787602001518760a001518860c0015161091191906159fe565b60808701819052606087015160208801519293509091612d729084906159e7565b612d7c91906159e7565b612d8691906159e7565b602086018190528290612d99908561599c565b612da3919061588e565b855250929695505050505050565b600080836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ded57600080fd5b505afa158015612e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e259190615449565b612e2e85614847565b612e38908561599c565b612e42919061588e565b915061271061ffff16846001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015612e8457600080fd5b505afa158015612e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ebc9190615221565b6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ef457600080fd5b505afa158015612f08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f2c9190615221565b6040516315435d0560e31b815260006004820152600160248201526001600160a01b03919091169063aa1ae8289060440160206040518083038186803b158015612f7557600080fd5b505afa158015612f89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fad9190615417565b856001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015612fe657600080fd5b505afa158015612ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061301e9190615221565b6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b15801561305657600080fd5b505afa15801561306a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061308e9190615221565b6001600160a01b03166350e0942b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156130c657600080fd5b505afa1580156130da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130fe9190615417565b6131089190615831565b6131169061ffff168461599c565b613120919061588e565b90509250929050565b60008061271061ffff16866001600160a01b0316636a9d11196040518163ffffffff1660e01b815260040160206040518083038186803b15801561316c57600080fd5b505afa158015613180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131a49190615221565b6001600160a01b031663051a497b856040518263ffffffff1660e01b81526004016131d191815260200190565b60206040518083038186803b1580156131e957600080fd5b505afa1580156131fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132219190615417565b61322f9061ffff168661599c565b613239919061588e565b915084613247576000613335565b856001600160a01b0316636a9d11196040518163ffffffff1660e01b815260040160206040518083038186803b15801561328057600080fd5b505afa158015613294573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132b89190615221565b6001600160a01b031663591b36f7856040518263ffffffff1660e01b81526004016132e591815260200190565b60206040518083038186803b1580156132fd57600080fd5b505afa158015613311573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133359190615449565b905094509492505050565b600080600061271061ffff16866001600160a01b031663293d09156040518163ffffffff1660e01b815260040160206040518083038186803b15801561338557600080fd5b505afa158015613399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133bd9190615417565b6133c990612710615831565b6133d79061ffff168761599c565b6133e1919061588e565b9050808411156134215760006133f782866159e7565b9050613404868683614aa6565b909450925061341587858584614abd565b90945092506135a79050565b600061342d85836159e7565b90506000806000896001600160a01b031663ad7a672f6040518163ffffffff1660e01b815260040160c06040518083038186803b15801561346d57600080fd5b505afa158015613481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134a591906154e4565b5094505093505092508381836134bb9190615857565b1180156135685750896001600160a01b0316637b5d6fe36040518163ffffffff1660e01b815260040160206040518083038186803b1580156134fc57600080fd5b505afa158015613510573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135349190615417565b61ffff1683612710866135478587615857565b61355191906159e7565b61355b919061599c565b613565919061588e565b10155b156135a25760008061357a8c87614afb565b9150915061358a8b8b8484614e38565b909950975061359a898988614e51565b909950975050505b505050505b50935093915050565b60008060006135bf8785614e5e565b90506000806135ce8987614afb565b915091506135de88888484614e38565b90955093506135ee858585614aa6565b909a909950975050505050505050565b6000831580156137165750846001600160a01b0316636a9d11196040518163ffffffff1660e01b815260040160206040518083038186803b15801561364257600080fd5b505afa158015613656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061367a9190615221565b6001600160a01b031663ce521f266040518163ffffffff1660e01b815260040160206040518083038186803b1580156136b257600080fd5b505afa1580156136c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136ea919061552d565b8360a001516136f9919061586f565b63ffffffff164211801561371657508260c0015163ffffffff1642105b156117665761271061ffff16856001600160a01b0316636a9d11196040518163ffffffff1660e01b815260040160206040518083038186803b15801561375b57600080fd5b505afa15801561376f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137939190615221565b6001600160a01b031663956872ca856040518263ffffffff1660e01b81526004016137be9190615773565b60206040518083038186803b1580156137d657600080fd5b505afa1580156137ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061380e9190615417565b61381c9061ffff168461599c565b613826919061588e565b95945050505050565b600080600061271061ffff16856001600160a01b0316632c86d98e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561387457600080fd5b505afa158015613888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138ac9190615599565b60ff16866001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b1580156138e857600080fd5b505afa1580156138fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139209190615221565b6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b15801561395857600080fd5b505afa15801561396c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139909190615221565b6001600160a01b031663a2028d976040518163ffffffff1660e01b815260040160206040518083038186803b1580156139c857600080fd5b505afa1580156139dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a009190615417565b613a0e9061ffff168761599c565b613a18919061599c565b613a22919061588e565b92506000856001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015613a5f57600080fd5b505afa158015613a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a979190615221565b6001600160a01b0316636f7d78286040518163ffffffff1660e01b815260040160206040518083038186803b158015613acf57600080fd5b505afa158015613ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b079190615221565b6001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b158015613b3f57600080fd5b505afa158015613b53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b779190615549565b505090506000866001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015613bb657600080fd5b505afa158015613bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bee9190615221565b6001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b158015613c2657600080fd5b505afa158015613c3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c5e9190615449565b90506000876001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015613c9b57600080fd5b505afa158015613caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cd39190615221565b6001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b158015613d0b57600080fd5b505afa158015613d1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d439190615449565b905060008363ffffffff16896001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015613d8757600080fd5b505afa158015613d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613dbf9190615221565b6001600160a01b031663d934c20b6040518163ffffffff1660e01b815260040160206040518083038186803b158015613df757600080fd5b505afa158015613e0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e2f919061552d565b63ffffffff168a6001600160a01b0316632c86d98e6040518163ffffffff1660e01b815260040160206040518083038186803b158015613e6e57600080fd5b505afa158015613e82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ea69190615599565b60ff16613eb38a8c6159e7565b613ebd919061599c565b613ec7919061599c565b613ed1919061588e565b90506000818a6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015613f0f57600080fd5b505afa158015613f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f479190615221565b6001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b158015613f7f57600080fd5b505afa158015613f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613fb79190615449565b613fc19190615857565b905060008a6001600160a01b0316632c86d98e6040518163ffffffff1660e01b815260040160206040518083038186803b158015613ffe57600080fd5b505afa158015614012573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140369190615599565b60ff166140438a8c6159e7565b61404d919061599c565b8b6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561408657600080fd5b505afa15801561409a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140be9190615221565b6001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b1580156140f657600080fd5b505afa15801561410a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061412e9190615449565b6141389190615857565b90508a6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561417357600080fd5b505afa158015614187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141ab9190615221565b6001600160a01b03166335a03bfa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156141e357600080fd5b505afa1580156141f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061421b9190615221565b6001600160a01b0316631437d6d48b8d6001600160a01b0316632c86d98e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561426357600080fd5b505afa158015614277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061429b9190615599565b6040516001600160e01b031960e085901b1681526001600160a81b03909216600483015260ff16602482015260448101889052606481018790526084810184905260a4810185905260c401604080518083038186803b1580156142fd57600080fd5b505afa158015614311573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143359190615380565b999c6001600160a81b039091169b5061ffff90991699505050505050505050565b600080600080876001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561439557600080fd5b505afa1580156143a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143cd9190615221565b6001600160a01b0316636f7d78286040518163ffffffff1660e01b815260040160206040518083038186803b15801561440557600080fd5b505afa158015614419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061443d9190615221565b6001600160a01b031663c1639a2b6040518163ffffffff1660e01b815260040160606040518083038186803b15801561447557600080fd5b505afa158015614489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144ad9190615549565b505090506000886001600160a01b0316632c86d98e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156144ec57600080fd5b505afa158015614500573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145249190615599565b60ff1686614532898b6159e7565b61453c91906159e7565b614546919061599c565b905060008263ffffffff168a6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561458a57600080fd5b505afa15801561459e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145c29190615221565b6001600160a01b031663d934c20b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156145fa57600080fd5b505afa15801561460e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614632919061552d565b6146429063ffffffff168461599c565b61464c919061588e565b9050808a6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561468857600080fd5b505afa15801561469c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146c09190615221565b6001600160a01b0316632f811c226040518163ffffffff1660e01b815260040160206040518083038186803b1580156146f857600080fd5b505afa15801561470c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147309190615449565b61473a9190615857565b955086828b6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561477757600080fd5b505afa15801561478b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147af9190615221565b6001600160a01b0316638d4d7e316040518163ffffffff1660e01b815260040160206040518083038186803b1580156147e757600080fd5b505afa1580156147fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061481f9190615449565b6148299190615857565b6148339190615857565b945084861193505050509450945094915050565b600080826001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561488357600080fd5b505afa158015614897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148bb9190615221565b60405163055f575160e41b81526001600160a01b038581166004830152919250600191600091908416906355f575109060240160a06040518083038186803b15801561490657600080fd5b505afa15801561491a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061493e91906153a9565b505050506001600160a81b03169050806000146149d9576040516329b2a60b60e21b81526001600160a01b03868116600483015284169063a6ca982c9060240160c06040518083038186803b15801561499657600080fd5b505afa1580156149aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149ce9190615461565b509397509194505050505b81610dd45760405162461bcd60e51b815260206004820152601060248201526f4e656761746976652062616c616e636560801b60448201526064016108df565b60008054610100900460ff1615614a60578160ff166001148015614a3c5750303b155b614a585760405162461bcd60e51b81526004016108df906156ec565b506000919050565b60005460ff808416911610614a875760405162461bcd60e51b81526004016108df906156ec565b506000805460ff191660ff92909216919091179055600190565b919050565b826000614ab383856159e7565b9050935093915050565b6000806000614acc8785614e5e565b9050600080614adb8987614afb565b91509150614aea888885614e51565b90955093506135ee85858484615166565b6000806000846001600160a01b03166361176a0e6040518163ffffffff1660e01b815260040160206040518083038186803b158015614b3957600080fd5b505afa158015614b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614b719190615221565b90506000816001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015614bae57600080fd5b505afa158015614bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614be69190615221565b90506000866001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015614c2357600080fd5b505afa158015614c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c5b9190615449565b90506000836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015614c9857600080fd5b505afa158015614cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614cd09190615449565b90506000886001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401604080518083038186803b158015614d0c57600080fd5b505afa158015614d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614d4491906154c1565b509050600083614d54838b61599c565b614d5e919061588e565b90506000614d6b87614847565b60405163055f575160e41b81526001600160a01b0389811660048301529192506000918816906355f575109060240160a06040518083038186803b158015614db257600080fd5b505afa158015614dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614dea91906153a9565b505050506001600160a81b03169050848184614e06919061599c565b614e10919061588e565b995084614e1d848461599c565b614e27919061588e565b985050505050505050509250929050565b600080614e4584876159e7565b915061333583866159e7565b826000614ab38385615857565b600080836001600160a01b03166361176a0e6040518163ffffffff1660e01b815260040160206040518083038186803b158015614e9a57600080fd5b505afa158015614eae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614ed29190615221565b6001600160a01b0316634bde38c86040518163ffffffff1660e01b815260040160206040518083038186803b158015614f0a57600080fd5b505afa158015614f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614f429190615221565b90506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015614f7f57600080fd5b505afa158015614f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614fb79190615449565b6040516370a0823160e01b81526001600160a01b0387811660048301529192506000918416906370a082319060240160206040518083038186803b158015614ffe57600080fd5b505afa158015615012573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906150369190615449565b9050600082615045838861599c565b61504f919061588e565b604051630d9c362960e41b8152600160048201529091506000906001600160a01b0386169063d9c362909060240160206040518083038186803b15801561509557600080fd5b505afa1580156150a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906150cd9190615449565b90506000856001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561510a57600080fd5b505afa15801561511e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906151429190615449565b90508061514f838561599c565b615159919061588e565b9998505050505050505050565b6000806151738487615857565b91506133358386615857565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915290565b80516001600160a81b0381168114614aa157600080fd5b805161ffff81168114614aa157600080fd5b805160ff81168114614aa157600080fd5b600060208284031215615216578081fd5b813561297781615a39565b600060208284031215615232578081fd5b815161297781615a39565b6000806040838503121561524f578081fd5b823561525a81615a39565b9150602083013561526a81615a39565b809150509250929050565b600080600080600060a0868803121561528c578081fd5b853561529781615a39565b945060208601356152a781615a5f565b935060408601356152b781615a5f565b94979396509394606081013594506080013592915050565b600080604083850312156152e1578182fd5b82356152ec81615a39565b946020939093013593505050565b6000806000806080858703121561530f578182fd5b843561531a81615a39565b9350602085013561532a81615a51565b93969395505050506040820135916060013590565b600080600060608486031215615353578081fd5b833561535e81615a39565b925060208401359150604084013561537581615a51565b809150509250925092565b60008060408385031215615392578182fd5b61539b836151cb565b9150613120602084016151e2565b600080600080600060a086880312156153c0578283fd5b6153c9866151cb565b94506153d7602087016151f4565b935060408601516153e781615a5f565b60608701519093506153f881615a5f565b608087015190925061540981615a5f565b809150509295509295909350565b600060208284031215615428578081fd5b612977826151e2565b600060208284031215615442578081fd5b5035919050565b60006020828403121561545a578081fd5b5051919050565b60008060008060008060c08789031215615479578384fd5b86519550602087015161548b81615a51565b9450615499604088016151cb565b93506154a7606088016151f4565b92506080870151915060a087015190509295509295509295565b600080604083850312156154d3578182fd5b505080516020909101519092909150565b60008060008060008060c087890312156154fc578384fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b60006020828403121561553e578081fd5b815161297781615a5f565b60008060006060848603121561555d578081fd5b835161556881615a5f565b602085015190935069ffffffffffffffffffff81168114615587578182fd5b80925050604084015190509250925092565b6000602082840312156155aa578081fd5b612977826151f4565b60008060008060008060008060006101208a8c0312156155d1578687fd5b6155da8a6151f4565b98506155e860208b016151cb565b97506155f660408b016151e2565b965061560460608b016151e2565b955060808a015161561481615a39565b60a08b015190955061562581615a5f565b60c08b015190945061563681615a5f565b60e08b015190935061564781615a51565b91506156566101008b016151e2565b90509295985092959850929598565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156156df57878503603f19018452815180518087529087019087870190895b818110156156c9578351835292890192918901916001016156ad565b509096505050928501929085019060010161568b565b5092979650505050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60a08101610630828480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b815160ff1681526020808301516001600160a81b0316908201526040808301516101208301916157a89084018261ffff169052565b5060608301516157be606084018261ffff169052565b5060808301516157d960808401826001600160a01b03169052565b5060a08301516157f160a084018263ffffffff169052565b5060c083015161580960c084018263ffffffff169052565b5060e083015161581d60e084018215159052565b506101009283015161ffff16919092015290565b600061ffff80831681851680830382111561584e5761584e615a23565b01949350505050565b6000821982111561586a5761586a615a23565b500190565b600063ffffffff80831681851680830382111561584e5761584e615a23565b6000826158a957634e487b7160e01b81526012600452602481fd5b500490565b600181815b808511156158e95781600019048211156158cf576158cf615a23565b808516156158dc57918102915b93841c93908002906158b3565b509250929050565b600061297760ff84168360008261590a57506001610630565b8161591757506000610630565b816001811461592d576002811461593757615953565b6001915050610630565b60ff84111561594857615948615a23565b50506001821b610630565b5060208310610133831016604e8410600b8410161715615976575081810a610630565b61598083836158ae565b806000190482111561599457615994615a23565b029392505050565b60008160001904831182151516156159b6576159b6615a23565b500290565b600063ffffffff808316818516818304811182151516156159de576159de615a23565b02949350505050565b6000828210156159f9576159f9615a23565b500390565b600063ffffffff83811690831681811015615a1b57615a1b615a23565b039392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114615a4e57600080fd5b50565b8015158114615a4e57600080fd5b63ffffffff81168114615a4e57600080fdfea2646970667358221220bf0900e1e2b1f497dd80fd16de8acc5cacd27731a651e207b4b204455331a48464736f6c63430008040033",
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 34444,
            "contract": "@coti-cvi/contracts-cvi/contracts/PlatformHelper.sol:PlatformHelper",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 34447,
            "contract": "@coti-cvi/contracts-cvi/contracts/PlatformHelper.sol:PlatformHelper",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 6286,
            "contract": "@coti-cvi/contracts-cvi/contracts/PlatformHelper.sol:PlatformHelper",
            "label": "govi",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IERC20)38763"
          },
          {
            "astId": 6289,
            "contract": "@coti-cvi/contracts-cvi/contracts/PlatformHelper.sol:PlatformHelper",
            "label": "staking",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IStaking)18732"
          }
        ],
        "types": {
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)38763": {
            "encoding": "inplace",
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IStaking)18732": {
            "encoding": "inplace",
            "label": "contract IStaking",
            "numberOfBytes": "20"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "creationBlock": 63142694,
      "history": []
    },
    "PlatformHelper_Proxy": {
      "address": "0xdc187587e7fb486eDf17429d30b66c2291636cdE",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0x7d150b7a6b0c699fea5aa31b367d9f885e79fc759db11e517141ce29400f6805",
      "receipt": {
        "to": null,
        "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
        "contractAddress": "0xdc187587e7fb486eDf17429d30b66c2291636cdE",
        "transactionIndex": 1,
        "gasUsed": "5202009",
        "logsBloom": "0x
        "blockHash": "0x9887ea280132d8106e530fbf2320938fc2d06156af7df0b7909e30c94900973b",
        "transactionHash": "0x7d150b7a6b0c699fea5aa31b367d9f885e79fc759db11e517141ce29400f6805",
        "logs": [
          {
            "transactionIndex": 1,
            "blockNumber": 38037572,
            "transactionHash": "0x7d150b7a6b0c699fea5aa31b367d9f885e79fc759db11e517141ce29400f6805",
            "address": "0xdc187587e7fb486eDf17429d30b66c2291636cdE",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x000000000000000000000000a1ca0c206f60a52378fc38f99c845055e306fd6d"
            ],
            "data": "0x",
            "logIndex": 0,
            "blockHash": "0x9887ea280132d8106e530fbf2320938fc2d06156af7df0b7909e30c94900973b"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 38037572,
            "transactionHash": "0x7d150b7a6b0c699fea5aa31b367d9f885e79fc759db11e517141ce29400f6805",
            "address": "0xdc187587e7fb486eDf17429d30b66c2291636cdE",
            "topics": [
              "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "logIndex": 1,
            "blockHash": "0x9887ea280132d8106e530fbf2320938fc2d06156af7df0b7909e30c94900973b"
          },
          {
            "transactionIndex": 1,
            "blockNumber": 38037572,
            "transactionHash": "0x7d150b7a6b0c699fea5aa31b367d9f885e79fc759db11e517141ce29400f6805",
            "address": "0xdc187587e7fb486eDf17429d30b66c2291636cdE",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
            ],
            "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d2669586e17fc93773cc637becfa983525501eb",
            "logIndex": 2,
            "blockHash": "0x9887ea280132d8106e530fbf2320938fc2d06156af7df0b7909e30c94900973b"
          }
        ],
        "blockNumber": 38037572,
        "cumulativeGasUsed": "5202009",
        "status": 1,
        "byzantium": true
      },
      "args": [
        "0xA1cA0c206F60a52378FC38f99c845055E306fD6d",
        "0x9D2669586E17fC93773cc637becfA983525501Eb",
        "0x485cc95500000000000000000000000007e49d5de43dda6162fa28d24d5935c151875283000000000000000000000000db3e7deab380b43189a7bc291fa2afeaa938dcc3"
      ],
      "numDeployments": 1,
      "solcInputHash": "0e89febeebc7444140de8e67c9067d2c",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x93b4e21c931252739a1ec13ea31d3d35a5c068be3163ccab83e4d70c40355f03\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view virtual returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(Address.isContract(IBeacon(newBeacon).implementation()), \\\"ERC1967: beacon implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17668652127feebed0ce8d9431ef95ccc8c4292f03e3b8cf06c6ca16af396633\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xd5d1fd16e9faff7fcb3a52e02a8d49156f42a38a03f07b5f1810c21c2149a8ab\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0-rc.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3777e696b62134e6177440dbe6e6601c0c156a443f57167194b67e75527439de\",\"license\":\"MIT\"},\"solc_0.8/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
      "deployedBytecode": "0x60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033",
      "devdoc": {
        "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
        "kind": "dev",
        "methods": {
          "admin()": {
            "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
          },
          "constructor": {
            "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
          },
          "implementation()": {
            "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      },
      "creationBlock": 38037572,
      "history": []
    },
    "StakingV2": {
      "address": "0xDb3e7deAb380B43189A7Bc291fa2AFeAA938dCc3",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            }
          ],
          "name": "ProfitAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ],
          "name": "RewardClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "goviAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "xGOVIMinted",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "xGOVIBalance",
              "type": "uint256"
            }
          ],
          "name": "Staked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "xGOVIBurned",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "goviReward",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "xGOVIBalance",
              "type": "uint256"
            }
          ],
          "name": "Unstaked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "PRECISION_DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_newClaimableToken",
              "type": "address"
            }
          ],
          "name": "addClaimableToken",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "claimAllProfits",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "token",
              "type": "address"
            }
          ],
          "name": "claimProfit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "claimableTokens",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "name": "claimableTokensSupported",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fallbackRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getClaimableTokens",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable[]",
              "name": "",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "goviToken",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_goviToken",
              "type": "address"
            },
            {
              "internalType": "contract IStakingVault",
              "name": "_stakingVault",
              "type": "address"
            },
            {
              "internalType": "contract IWETH",
              "name": "_wethToken",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "name": "lastProfits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lastUpdateTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_token",
              "type": "address"
            }
          ],
          "name": "profitOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_removedClaimableToken",
              "type": "address"
            }
          ],
          "name": "removeClaimableToken",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rewardPerSecond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "name": "savedProfits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "name": "sendProfit",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newRewardPerSecond",
              "type": "uint256"
            }
          ],
          "name": "setRewardRate",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newLockupTime",
              "type": "uint256"
            }
          ],
          "name": "setStakingLockupTime",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_goviAmount",
              "type": "uint256"
            }
          ],
          "name": "stake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "xGOVIAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stakeLockupTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "stakeTimestamps",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stakingVault",
          "outputs": [
            {
              "internalType": "contract IStakingVault",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "name": "totalProfits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_xGOVIAmount",
              "type": "uint256"
            }
          ],
          "name": "unstake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "goviAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "wethToken",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0x9448314ce8f339fa8e75b57b15b9b2d1421a016bacf7822ecc96839c6fbdd52f",
      "numDeployments": 1,
      "implementation": "0x7907B14Db27Ce47AA2c4cF38D05b9C9611e468D0",
      "creationBlock": 4335097,
      "history": []
    },
    "StakingV2_Implementation": {
      "address": "0x7907B14Db27Ce47AA2c4cF38D05b9C9611e468D0",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            }
          ],
          "name": "ProfitAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ],
          "name": "RewardClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "goviAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "xGOVIMinted",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "xGOVIBalance",
              "type": "uint256"
            }
          ],
          "name": "Staked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "xGOVIBurned",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "goviReward",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "xGOVIBalance",
              "type": "uint256"
            }
          ],
          "name": "Unstaked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "PRECISION_DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_newClaimableToken",
              "type": "address"
            }
          ],
          "name": "addClaimableToken",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "claimAllProfits",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "token",
              "type": "address"
            }
          ],
          "name": "claimProfit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "claimableTokens",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "name": "claimableTokensSupported",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fallbackRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getClaimableTokens",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable[]",
              "name": "",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "goviToken",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_goviToken",
              "type": "address"
            },
            {
              "internalType": "contract IStakingVault",
              "name": "_stakingVault",
              "type": "address"
            },
            {
              "internalType": "contract IWETH",
              "name": "_wethToken",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "name": "lastProfits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lastUpdateTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_token",
              "type": "address"
            }
          ],
          "name": "profitOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "_removedClaimableToken",
              "type": "address"
            }
          ],
          "name": "removeClaimableToken",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rewardPerSecond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "name": "savedProfits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "name": "sendProfit",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newRewardPerSecond",
              "type": "uint256"
            }
          ],
          "name": "setRewardRate",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newLockupTime",
              "type": "uint256"
            }
          ],
          "name": "setStakingLockupTime",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_goviAmount",
              "type": "uint256"
            }
          ],
          "name": "stake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "xGOVIAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stakeLockupTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "stakeTimestamps",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stakingVault",
          "outputs": [
            {
              "internalType": "contract IStakingVault",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ],
          "name": "totalProfits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_xGOVIAmount",
              "type": "uint256"
            }
          ],
          "name": "unstake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "goviAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "wethToken",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0x440464d3d92509c3f15ae156827834a276382f9e0c330f616fbe2286d00d856b",
      "numDeployments": 1,
      "storageLayout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Staking",
            "label": "claimableTokens",
            "type": "t_array(t_contract(IERC20Upgradeable)927)dyn_storage",
            "src": "contracts\\staking\\Staking.sol:20"
          },
          {
            "contract": "Staking",
            "label": "claimableTokensSupported",
            "type": "t_mapping(t_contract(IERC20Upgradeable)927,t_bool)",
            "src": "contracts\\staking\\Staking.sol:22"
          },
          {
            "contract": "Staking",
            "label": "totalProfits",
            "type": "t_mapping(t_contract(IERC20Upgradeable)927,t_uint256)",
            "src": "contracts\\staking\\Staking.sol:24"
          },
          {
            "contract": "Staking",
            "label": "lastProfits",
            "type": "t_mapping(t_address,t_mapping(t_contract(IERC20Upgradeable)927,t_uint256))",
            "src": "contracts\\staking\\Staking.sol:25"
          },
          {
            "contract": "Staking",
            "label": "savedProfits",
            "type": "t_mapping(t_address,t_mapping(t_contract(IERC20Upgradeable)927,t_uint256))",
            "src": "contracts\\staking\\Staking.sol:26"
          },
          {
            "contract": "Staking",
            "label": "stakeTimestamps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\staking\\Staking.sol:28"
          },
          {
            "contract": "Staking",
            "label": "stakingVault",
            "type": "t_contract(IStakingVault)15882",
            "src": "contracts\\staking\\Staking.sol:30"
          },
          {
            "contract": "Staking",
            "label": "goviToken",
            "type": "t_contract(IERC20Upgradeable)927",
            "src": "contracts\\staking\\Staking.sol:31"
          },
          {
            "contract": "Staking",
            "label": "wethToken",
            "type": "t_contract(IWETH)16089",
            "src": "contracts\\staking\\Staking.sol:32"
          },
          {
            "contract": "Staking",
            "label": "fallbackRecipient",
            "type": "t_address",
            "src": "contracts\\staking\\Staking.sol:33"
          },
          {
            "contract": "Staking",
            "label": "stakeLockupTime",
            "type": "t_uint256",
            "src": "contracts\\staking\\Staking.sol:35"
          },
          {
            "contract": "Staking",
            "label": "rewardPerSecond",
            "type": "t_uint256",
            "src": "contracts\\staking\\Staking.sol:37"
          },
          {
            "contract": "Staking",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "contracts\\staking\\Staking.sol:38"
          }
        ],
        "types": {
          "t_array(t_contract(IERC20Upgradeable)927)dyn_storage": {
            "label": "contract IERC20Upgradeable[]"
          },
          "t_contract(IERC20Upgradeable)927": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_contract(IERC20Upgradeable)927,t_bool)": {
            "label": "mapping(contract IERC20Upgradeable => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_contract(IERC20Upgradeable)927,t_uint256)": {
            "label": "mapping(contract IERC20Upgradeable => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_contract(IERC20Upgradeable)927,t_uint256))": {
            "label": "mapping(address => mapping(contract IERC20Upgradeable => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingVault)15882": {
            "label": "contract IStakingVault"
          },
          "t_contract(IWETH)16089": {
            "label": "contract IWETH"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      },
      "creationBlock": 4335089,
      "history": []
    },
    "StakingV2_Proxy": {
      "address": "0xDb3e7deAb380B43189A7Bc291fa2AFeAA938dCc3",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "changeAdmin",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "implementation_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "name": "upgradeTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "upgradeToAndCall",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0x9448314ce8f339fa8e75b57b15b9b2d1421a016bacf7822ecc96839c6fbdd52f",
      "numDeployments": 1,
      "creationBlock": 4335097,
      "history": []
    },
    "StakingVault": {
      "address": "0xd5B2684b6Ef6D1B044e9aEEE6ff233A4022911D7",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_goviToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "extractGOVI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "goviToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newWithdrawer",
              "type": "address"
            }
          ],
          "name": "setWithdrawer",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "withdraw",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0x91da4d650ad937405ecd11edd1edd6c9c1c23850369592857109e953e3639c15",
      "numDeployments": 1,
      "creationBlock": 4297514,
      "history": []
    },
    "Treasury": {
      "address": "0x494DdE9deC13B5C8F7875498cb02D6Ce7Dac10Cd",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "extract",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "transactionHash": "0xd06662d5dc18d194888ef9c09f7ac9a95243775a8dda2f7f086724883e1630f4",
      "numDeployments": 1,
      "creationBlock": 8262135,
      "history": []
    },
    "UNIV2GOVIETH": {
      "address": "0xC73d2191A1dD0a99B377272899A5569eD83f8cd8",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount0In",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount1In",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount0Out",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount1Out",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "Swap",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getReserves",
          "outputs": [
            {
              "internalType": "uint112",
              "name": "reserve0",
              "type": "uint112"
            },
            {
              "internalType": "uint112",
              "name": "reserve1",
              "type": "uint112"
            },
            {
              "internalType": "uint32",
              "name": "blockTimestampLast",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "token0",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "token1",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0x16c8b102d0ec674bf2584ad3148b049ef5c6ebcf6d9e6236cd1b14baf31ce574",
      "numDeployments": 1,
      "creationBlock": 7469628,
      "history": []
    },
    "USDC": {
      "address": "0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_supply",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "_decimals",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0xc91512bf8dbc57cf46a192b5d257d52be5859583515104cfadb1dbc431408fc6",
      "numDeployments": 1,
      "creationBlock": 2609,
      "history": []
    },
    "UniswapV2Factory": {
      "address": "0xc35DADB65012eC5796536bD9864eD8773aBc74C4",
      "abi": [
        {
          "type": "constructor",
          "stateMutability": "nonpayable",
          "payable": false,
          "inputs": [
            {
              "type": "address",
              "name": "_feeToSetter",
              "internalType": "address"
            }
          ]
        },
        {
          "type": "event",
          "name": "PairCreated",
          "inputs": [
            {
              "type": "address",
              "name": "token0",
              "internalType": "address",
              "indexed": true
            },
            {
              "type": "address",
              "name": "token1",
              "internalType": "address",
              "indexed": true
            },
            {
              "type": "address",
              "name": "pair",
              "internalType": "address",
              "indexed": false
            },
            {
              "type": "uint256",
              "name": "",
              "internalType": "uint256",
              "indexed": false
            }
          ],
          "anonymous": false
        },
        {
          "type": "function",
          "stateMutability": "view",
          "payable": false,
          "outputs": [
            {
              "type": "address",
              "name": "",
              "internalType": "address"
            }
          ],
          "name": "allPairs",
          "inputs": [
            {
              "type": "uint256",
              "name": "",
              "internalType": "uint256"
            }
          ],
          "constant": true
        },
        {
          "type": "function",
          "stateMutability": "view",
          "payable": false,
          "outputs": [
            {
              "type": "uint256",
              "name": "",
              "internalType": "uint256"
            }
          ],
          "name": "allPairsLength",
          "inputs": [],
          "constant": true
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "payable": false,
          "outputs": [
            {
              "type": "address",
              "name": "pair",
              "internalType": "address"
            }
          ],
          "name": "createPair",
          "inputs": [
            {
              "type": "address",
              "name": "tokenA",
              "internalType": "address"
            },
            {
              "type": "address",
              "name": "tokenB",
              "internalType": "address"
            }
          ],
          "constant": false
        },
        {
          "type": "function",
          "stateMutability": "view",
          "payable": false,
          "outputs": [
            {
              "type": "address",
              "name": "",
              "internalType": "address"
            }
          ],
          "name": "feeTo",
          "inputs": [],
          "constant": true
        },
        {
          "type": "function",
          "stateMutability": "view",
          "payable": false,
          "outputs": [
            {
              "type": "address",
              "name": "",
              "internalType": "address"
            }
          ],
          "name": "feeToSetter",
          "inputs": [],
          "constant": true
        },
        {
          "type": "function",
          "stateMutability": "view",
          "payable": false,
          "outputs": [
            {
              "type": "address",
              "name": "",
              "internalType": "address"
            }
          ],
          "name": "getPair",
          "inputs": [
            {
              "type": "address",
              "name": "",
              "internalType": "address"
            },
            {
              "type": "address",
              "name": "",
              "internalType": "address"
            }
          ],
          "constant": true
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "payable": false,
          "outputs": [],
          "name": "setFeeTo",
          "inputs": [
            {
              "type": "address",
              "name": "_feeTo",
              "internalType": "address"
            }
          ],
          "constant": false
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "payable": false,
          "outputs": [],
          "name": "setFeeToSetter",
          "inputs": [
            {
              "type": "address",
              "name": "_feeToSetter",
              "internalType": "address"
            }
          ],
          "constant": false
        }
      ],
      "transactionHash": "0x8d0a67317d0f3996ce544776afa7c503e8c33d0475a0660e08748d1a8cad14a5",
      "numDeployments": 1,
      "creationBlock": 70,
      "history": []
    },
    "UniswapV2Router02": {
      "address": "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",
      "abi": [
        {
          "type": "constructor",
          "stateMutability": "nonpayable",
          "inputs": [
            {
              "type": "address",
              "name": "_factory",
              "internalType": "address"
            },
            {
              "type": "address",
              "name": "_WETH",
              "internalType": "address"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "view",
          "outputs": [
            {
              "type": "address",
              "name": "",
              "internalType": "address"
            }
          ],
          "name": "WETH",
          "inputs": []
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [
            {
              "type": "uint256",
              "name": "amountA",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountB",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "liquidity",
              "internalType": "uint256"
            }
          ],
          "name": "addLiquidity",
          "inputs": [
            {
              "type": "address",
              "name": "tokenA",
              "internalType": "address"
            },
            {
              "type": "address",
              "name": "tokenB",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "amountADesired",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountBDesired",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountAMin",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountBMin",
              "internalType": "uint256"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "payable",
          "outputs": [
            {
              "type": "uint256",
              "name": "amountToken",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountETH",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "liquidity",
              "internalType": "uint256"
            }
          ],
          "name": "addLiquidityETH",
          "inputs": [
            {
              "type": "address",
              "name": "token",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "amountTokenDesired",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountTokenMin",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountETHMin",
              "internalType": "uint256"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "view",
          "outputs": [
            {
              "type": "address",
              "name": "",
              "internalType": "address"
            }
          ],
          "name": "factory",
          "inputs": []
        },
        {
          "type": "function",
          "stateMutability": "pure",
          "outputs": [
            {
              "type": "uint256",
              "name": "amountIn",
              "internalType": "uint256"
            }
          ],
          "name": "getAmountIn",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountOut",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "reserveIn",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "reserveOut",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "pure",
          "outputs": [
            {
              "type": "uint256",
              "name": "amountOut",
              "internalType": "uint256"
            }
          ],
          "name": "getAmountOut",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountIn",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "reserveIn",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "reserveOut",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "view",
          "outputs": [
            {
              "type": "uint256[]",
              "name": "amounts",
              "internalType": "uint256[]"
            }
          ],
          "name": "getAmountsIn",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountOut",
              "internalType": "uint256"
            },
            {
              "type": "address[]",
              "name": "path",
              "internalType": "address[]"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "view",
          "outputs": [
            {
              "type": "uint256[]",
              "name": "amounts",
              "internalType": "uint256[]"
            }
          ],
          "name": "getAmountsOut",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountIn",
              "internalType": "uint256"
            },
            {
              "type": "address[]",
              "name": "path",
              "internalType": "address[]"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "pure",
          "outputs": [
            {
              "type": "uint256",
              "name": "amountB",
              "internalType": "uint256"
            }
          ],
          "name": "quote",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountA",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "reserveA",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "reserveB",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [
            {
              "type": "uint256",
              "name": "amountA",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountB",
              "internalType": "uint256"
            }
          ],
          "name": "removeLiquidity",
          "inputs": [
            {
              "type": "address",
              "name": "tokenA",
              "internalType": "address"
            },
            {
              "type": "address",
              "name": "tokenB",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "liquidity",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountAMin",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountBMin",
              "internalType": "uint256"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [
            {
              "type": "uint256",
              "name": "amountToken",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountETH",
              "internalType": "uint256"
            }
          ],
          "name": "removeLiquidityETH",
          "inputs": [
            {
              "type": "address",
              "name": "token",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "liquidity",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountTokenMin",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountETHMin",
              "internalType": "uint256"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [
            {
              "type": "uint256",
              "name": "amountETH",
              "internalType": "uint256"
            }
          ],
          "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
          "inputs": [
            {
              "type": "address",
              "name": "token",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "liquidity",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountTokenMin",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountETHMin",
              "internalType": "uint256"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [
            {
              "type": "uint256",
              "name": "amountToken",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountETH",
              "internalType": "uint256"
            }
          ],
          "name": "removeLiquidityETHWithPermit",
          "inputs": [
            {
              "type": "address",
              "name": "token",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "liquidity",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountTokenMin",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountETHMin",
              "internalType": "uint256"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            },
            {
              "type": "bool",
              "name": "approveMax",
              "internalType": "bool"
            },
            {
              "type": "uint8",
              "name": "v",
              "internalType": "uint8"
            },
            {
              "type": "bytes32",
              "name": "r",
              "internalType": "bytes32"
            },
            {
              "type": "bytes32",
              "name": "s",
              "internalType": "bytes32"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [
            {
              "type": "uint256",
              "name": "amountETH",
              "internalType": "uint256"
            }
          ],
          "name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
          "inputs": [
            {
              "type": "address",
              "name": "token",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "liquidity",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountTokenMin",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountETHMin",
              "internalType": "uint256"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            },
            {
              "type": "bool",
              "name": "approveMax",
              "internalType": "bool"
            },
            {
              "type": "uint8",
              "name": "v",
              "internalType": "uint8"
            },
            {
              "type": "bytes32",
              "name": "r",
              "internalType": "bytes32"
            },
            {
              "type": "bytes32",
              "name": "s",
              "internalType": "bytes32"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [
            {
              "type": "uint256",
              "name": "amountA",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountB",
              "internalType": "uint256"
            }
          ],
          "name": "removeLiquidityWithPermit",
          "inputs": [
            {
              "type": "address",
              "name": "tokenA",
              "internalType": "address"
            },
            {
              "type": "address",
              "name": "tokenB",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "liquidity",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountAMin",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountBMin",
              "internalType": "uint256"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            },
            {
              "type": "bool",
              "name": "approveMax",
              "internalType": "bool"
            },
            {
              "type": "uint8",
              "name": "v",
              "internalType": "uint8"
            },
            {
              "type": "bytes32",
              "name": "r",
              "internalType": "bytes32"
            },
            {
              "type": "bytes32",
              "name": "s",
              "internalType": "bytes32"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "payable",
          "outputs": [
            {
              "type": "uint256[]",
              "name": "amounts",
              "internalType": "uint256[]"
            }
          ],
          "name": "swapETHForExactTokens",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountOut",
              "internalType": "uint256"
            },
            {
              "type": "address[]",
              "name": "path",
              "internalType": "address[]"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "payable",
          "outputs": [
            {
              "type": "uint256[]",
              "name": "amounts",
              "internalType": "uint256[]"
            }
          ],
          "name": "swapExactETHForTokens",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountOutMin",
              "internalType": "uint256"
            },
            {
              "type": "address[]",
              "name": "path",
              "internalType": "address[]"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "payable",
          "outputs": [],
          "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountOutMin",
              "internalType": "uint256"
            },
            {
              "type": "address[]",
              "name": "path",
              "internalType": "address[]"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [
            {
              "type": "uint256[]",
              "name": "amounts",
              "internalType": "uint256[]"
            }
          ],
          "name": "swapExactTokensForETH",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountIn",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountOutMin",
              "internalType": "uint256"
            },
            {
              "type": "address[]",
              "name": "path",
              "internalType": "address[]"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [],
          "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountIn",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountOutMin",
              "internalType": "uint256"
            },
            {
              "type": "address[]",
              "name": "path",
              "internalType": "address[]"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [
            {
              "type": "uint256[]",
              "name": "amounts",
              "internalType": "uint256[]"
            }
          ],
          "name": "swapExactTokensForTokens",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountIn",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountOutMin",
              "internalType": "uint256"
            },
            {
              "type": "address[]",
              "name": "path",
              "internalType": "address[]"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [],
          "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountIn",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountOutMin",
              "internalType": "uint256"
            },
            {
              "type": "address[]",
              "name": "path",
              "internalType": "address[]"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [
            {
              "type": "uint256[]",
              "name": "amounts",
              "internalType": "uint256[]"
            }
          ],
          "name": "swapTokensForExactETH",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountOut",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountInMax",
              "internalType": "uint256"
            },
            {
              "type": "address[]",
              "name": "path",
              "internalType": "address[]"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "function",
          "stateMutability": "nonpayable",
          "outputs": [
            {
              "type": "uint256[]",
              "name": "amounts",
              "internalType": "uint256[]"
            }
          ],
          "name": "swapTokensForExactTokens",
          "inputs": [
            {
              "type": "uint256",
              "name": "amountOut",
              "internalType": "uint256"
            },
            {
              "type": "uint256",
              "name": "amountInMax",
              "internalType": "uint256"
            },
            {
              "type": "address[]",
              "name": "path",
              "internalType": "address[]"
            },
            {
              "type": "address",
              "name": "to",
              "internalType": "address"
            },
            {
              "type": "uint256",
              "name": "deadline",
              "internalType": "uint256"
            }
          ]
        },
        {
          "type": "receive",
          "stateMutability": "payable"
        }
      ],
      "transactionHash": "0x40b22402bcac46330149ac9848f8bddd02b0a1e79d4a71934655a634051be1a1",
      "numDeployments": 1,
      "creationBlock": 73,
      "history": []
    },
    "WETH": {
      "address": "0x82af49447d8a07e3bd95bd0d56f35241523fbab1",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "src",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "guy",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "wad",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "dst",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "wad",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "src",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "dst",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "wad",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "src",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "wad",
              "type": "uint256"
            }
          ],
          "name": "Withdrawal",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "deposit",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "wad",
              "type": "uint256"
            }
          ],
          "name": "withdraw",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "wad",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "dst",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "wad",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "src",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dst",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "wad",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "transactionHash": "0x1555f3be9c09cf5bf802109366853cfda812e7a177e755aeb8d9566c5728747e",
      "numDeployments": 1,
      "creationBlock": 55,
      "history": []
    }
  }
}
{
  "address": "0x431231C6D156E87102d27cB289Bed3Fcff27bc0f",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "prevValue",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newValue",
          "type": "bool"
        }
      ],
      "name": "BuyILProtectionEnabledChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "prevValue",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "newValue",
          "type": "uint16"
        }
      ],
      "name": "ExpectedLPTokensValueGrowthChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "prevValue",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "newValue",
          "type": "uint16"
        }
      ],
      "name": "FeeComponentChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "prevValue",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "newValue",
          "type": "uint16"
        }
      ],
      "name": "MaxILProtectedChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "MinAmountToBePaidChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "prevValue",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "newValue",
          "type": "uint256[]"
        }
      ],
      "name": "PolicyPeriodChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "PremiumGrowthStartChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "PremiumSlopeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PRECISION",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROTECTION_CONTROLLER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyILProtectionEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectedLPTokensValueGrowth",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeComponent",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPolicyPeriodsInSeconds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minAmountToBePaid",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_maxILProtected",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "_buyILProtectionEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "_feeComponent",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_expectedLPTokensValueGrowth",
          "type": "uint16"
        },
        {
          "internalType": "uint256[]",
          "name": "_policyPeriods",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_premiumGrowthStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_premiumSlope",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxILProtected",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minAmountToBePaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_policyPeriod",
          "type": "uint256"
        }
      ],
      "name": "policyPeriodExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "policyPeriods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "premiumGrowthStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "premiumSlope",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isEnabled",
          "type": "bool"
        }
      ],
      "name": "setBuyILProtectionEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_expectedLPTokensValueGrowth",
          "type": "uint16"
        }
      ],
      "name": "setExpectedLPTokensValueGrowth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_feeComponent",
          "type": "uint16"
        }
      ],
      "name": "setFeeComponent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_maxILProtected",
          "type": "uint16"
        }
      ],
      "name": "setMaxILProtected",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minAmountToBePaid",
          "type": "uint256"
        }
      ],
      "name": "setMinAmountToBePaid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_policyPeriods",
          "type": "uint256[]"
        }
      ],
      "name": "setPolicyPeriodsInSeconds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_premiumGrowthStart",
          "type": "uint256"
        }
      ],
      "name": "setPremiumGrowthStart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_premiumSlope",
          "type": "uint256"
        }
      ],
      "name": "setPremiumSlope",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xffd1fa669bef526931965ea3affedc3f7b95188e04cabc8ab785b32fdf80f233",
  "receipt": {
    "to": null,
    "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
    "contractAddress": "0x431231C6D156E87102d27cB289Bed3Fcff27bc0f",
    "transactionIndex": 18,
    "gasUsed": "1490143",
    "logsBloom": "0x
    "blockHash": "0xcffe9cb56d5ddfb8809bab2854fe2fabf8968f8c604ee7e40336ce74b540f5bb",
    "transactionHash": "0xffd1fa669bef526931965ea3affedc3f7b95188e04cabc8ab785b32fdf80f233",
    "logs": [
      {
        "transactionIndex": 18,
        "blockNumber": 32550000,
        "transactionHash": "0xffd1fa669bef526931965ea3affedc3f7b95188e04cabc8ab785b32fdf80f233",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f",
          "0x000000000000000000000000f0245f6251bef9447a08766b9da2b07b28ad80b0"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000aeb4257a1a2fbe0000000000000000000000000000000000000000000000001daa13323b72031e0000000000000000000000000000000000000000000008e875406e3fda632e130000000000000000000000000000000000000000000000001cfb5f0cc157d3600000000000000000000000000000000000000000000008e875ef2265547d5dd1",
        "logIndex": 124,
        "blockHash": "0xcffe9cb56d5ddfb8809bab2854fe2fabf8968f8c604ee7e40336ce74b540f5bb"
      }
    ],
    "blockNumber": 32550000,
    "cumulativeGasUsed": "5212153",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 15,
  "solcInputHash": "3e38164a73c777cd780c57ef82a1826e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"prevValue\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"BuyILProtectionEnabledChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"prevValue\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newValue\",\"type\":\"uint16\"}],\"name\":\"ExpectedLPTokensValueGrowthChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"prevValue\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newValue\",\"type\":\"uint16\"}],\"name\":\"FeeComponentChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"prevValue\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newValue\",\"type\":\"uint16\"}],\"name\":\"MaxILProtectedChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MinAmountToBePaidChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"prevValue\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"newValue\",\"type\":\"uint256[]\"}],\"name\":\"PolicyPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"PremiumGrowthStartChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"PremiumSlopeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PRECISION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROTECTION_CONTROLLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyILProtectionEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectedLPTokensValueGrowth\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeComponent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPolicyPeriodsInSeconds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountToBePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_maxILProtected\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"_buyILProtectionEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"_feeComponent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_expectedLPTokensValueGrowth\",\"type\":\"uint16\"},{\"internalType\":\"uint256[]\",\"name\":\"_policyPeriods\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_premiumGrowthStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_premiumSlope\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxILProtected\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAmountToBePaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyPeriod\",\"type\":\"uint256\"}],\"name\":\"policyPeriodExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"policyPeriods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"premiumGrowthStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"premiumSlope\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isEnabled\",\"type\":\"bool\"}],\"name\":\"setBuyILProtectionEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_expectedLPTokensValueGrowth\",\"type\":\"uint16\"}],\"name\":\"setExpectedLPTokensValueGrowth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_feeComponent\",\"type\":\"uint16\"}],\"name\":\"setFeeComponent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_maxILProtected\",\"type\":\"uint16\"}],\"name\":\"setMaxILProtected\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmountToBePaid\",\"type\":\"uint256\"}],\"name\":\"setMinAmountToBePaid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_policyPeriods\",\"type\":\"uint256[]\"}],\"name\":\"setPolicyPeriodsInSeconds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_premiumGrowthStart\",\"type\":\"uint256\"}],\"name\":\"setPremiumGrowthStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_premiumSlope\",\"type\":\"uint256\"}],\"name\":\"setPremiumSlope\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol\":\"ILProtectionConfig\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@coti-cvi/contracts-il/contracts/BaseController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol';\\nimport './interfaces/IBaseController.sol';\\n\\nabstract contract BaseController is IBaseController, OwnableUpgradeable, AccessControlUpgradeable {\\n  uint16 public constant MAX_PRECISION = 10000;\\n\\n  modifier onlyAdmin() {\\n    _checkRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n\\n    _;\\n  }\\n\\n  modifier onlyValidAddress(address addr) {\\n    require(addr != address(0), 'Invalid address');\\n\\n    _;\\n  }\\n\\n  function initialize(address _owner) internal onlyInitializing {\\n    OwnableUpgradeable.__Ownable_init();\\n    AccessControlUpgradeable.__AccessControl_init();\\n\\n    _setupRole(DEFAULT_ADMIN_ROLE, _owner);\\n\\n    _transferOwnership(_owner);\\n  }\\n}\\n\",\"keccak256\":\"0xa2088b57b43ec091fba514001458c6e914ed541408a1a299d6b509e42be050c0\",\"license\":\"BUSL-1.1\"},\"@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8;\\n\\nimport './interfaces/ILProtectionConfigInterface.sol';\\nimport './BaseController.sol';\\n\\ncontract ILProtectionConfig is ILProtectionConfigInterface, BaseController {\\n  bytes32 public constant PROTECTION_CONTROLLER_ROLE = keccak256('PROTECTION_CONTROLLER_ROLE');\\n\\n  uint16 unused_1;\\n  uint16 public override maxILProtected;\\n  uint16 public override expectedLPTokensValueGrowth;\\n  bool public override buyILProtectionEnabled;\\n  uint16 public override feeComponent;\\n  uint256[] public policyPeriods;\\n  uint256 public override minAmountToBePaid;\\n  uint256 public override premiumGrowthStart;\\n  uint256 public override premiumSlope;\\n\\n  function initialize(\\n    address _owner,\\n    uint256 _minAmountToBePaid,\\n    uint16 _maxILProtected,\\n    bool _buyILProtectionEnabled,\\n    uint16 _feeComponent,\\n    uint16 _expectedLPTokensValueGrowth,\\n    uint256[] calldata _policyPeriods,\\n    uint256 _premiumGrowthStart,\\n    uint256 _premiumSlope\\n  ) external initializer {\\n    validateInitParams(_maxILProtected, _feeComponent, _expectedLPTokensValueGrowth, _policyPeriods, _premiumSlope);\\n\\n    BaseController.initialize(_owner);\\n\\n    minAmountToBePaid = _minAmountToBePaid;\\n    maxILProtected = _maxILProtected;\\n    buyILProtectionEnabled = _buyILProtectionEnabled;\\n    feeComponent = _feeComponent;\\n    expectedLPTokensValueGrowth = _expectedLPTokensValueGrowth;\\n    policyPeriods = _policyPeriods;\\n    premiumGrowthStart = _premiumGrowthStart;\\n    premiumSlope = _premiumSlope;\\n  }\\n\\n  function setPremiumGrowthStart(uint256 _premiumGrowthStart) external override onlyAdmin {\\n    emit PremiumGrowthStartChanged(premiumGrowthStart, _premiumGrowthStart);\\n\\n    premiumGrowthStart = _premiumGrowthStart;\\n  }\\n\\n  function setPremiumSlope(uint256 _premiumSlope) external override onlyAdmin {\\n    require(_premiumSlope > 0, 'premiumSlope must be > 0');\\n\\n    emit PremiumSlopeChanged(premiumSlope, _premiumSlope);\\n\\n    premiumSlope = _premiumSlope;\\n  }\\n\\n  function setMinAmountToBePaid(uint256 _minAmountToBePaid) external override onlyAdmin {\\n    emit MinAmountToBePaidChanged(minAmountToBePaid, _minAmountToBePaid);\\n\\n    minAmountToBePaid = _minAmountToBePaid;\\n  }\\n\\n  function setMaxILProtected(uint16 _maxILProtected) external override onlyRole(PROTECTION_CONTROLLER_ROLE) {\\n    validateParamRange(_maxILProtected);\\n\\n    emit MaxILProtectedChanged(maxILProtected, _maxILProtected);\\n\\n    maxILProtected = _maxILProtected;\\n  }\\n\\n  function setBuyILProtectionEnabled(bool _isEnabled) external override onlyAdmin {\\n    require(buyILProtectionEnabled != _isEnabled, 'Setting buyILProtectionEnabled to same value');\\n\\n    emit BuyILProtectionEnabledChanged(buyILProtectionEnabled, _isEnabled);\\n\\n    buyILProtectionEnabled = _isEnabled;\\n  }\\n\\n  function setFeeComponent(uint16 _feeComponent) external override onlyAdmin {\\n    validateParamRange(_feeComponent);\\n\\n    emit FeeComponentChanged(feeComponent, _feeComponent);\\n\\n    feeComponent = _feeComponent;\\n  }\\n\\n  function setPolicyPeriodsInSeconds(uint256[] calldata _policyPeriods) external override onlyAdmin {\\n    require(_policyPeriods.length > 0, 'Policy periods array is empty');\\n\\n    for (uint256 i; i < _policyPeriods.length; i++) {\\n      require(_policyPeriods[i] != 0, 'Policy period cannot be 0');\\n    }\\n\\n    emit PolicyPeriodChanged(policyPeriods, _policyPeriods);\\n\\n    policyPeriods = _policyPeriods;\\n  }\\n\\n  function setExpectedLPTokensValueGrowth(uint16 _expectedLPTokensValueGrowth) external override onlyAdmin {\\n    require(_expectedLPTokensValueGrowth > 0, 'expectedLPTokensValueGrowth must be > 0');\\n\\n    emit ExpectedLPTokensValueGrowthChanged(expectedLPTokensValueGrowth, _expectedLPTokensValueGrowth);\\n\\n    expectedLPTokensValueGrowth = _expectedLPTokensValueGrowth;\\n  }\\n\\n  function getPolicyPeriodsInSeconds() external view override returns (uint256[] memory) {\\n    return policyPeriods;\\n  }\\n\\n  function policyPeriodExists(uint256 _policyPeriod) external view override returns (bool) {\\n    for (uint256 i; i < policyPeriods.length; i++) {\\n      if (_policyPeriod == policyPeriods[i]) {\\n        return true;\\n      }\\n    }\\n\\n    return false;\\n  }\\n\\n  function validateInitParams(\\n    uint16 _maxILProtected,\\n    uint16 _feeComponent,\\n    uint16 _expectedLPTokensValueGrowth,\\n    uint256[] calldata _policyPeriods,\\n    uint256 _premiumSlope\\n  ) private pure {\\n    validateParamRange(_maxILProtected);\\n    validateParamRange(_feeComponent);\\n\\n    require(_expectedLPTokensValueGrowth > 0, 'expectedLPTokensValueGrowth should be larger then 0');\\n    require(_policyPeriods.length > 0, 'Policy periods array is empty');\\n    require(_premiumSlope > 0, '_premiumSlope should be larger then 0');\\n  }\\n\\n  function validateParamRange(uint16 param) private pure {\\n    require(param <= MAX_PRECISION, 'Param is out of range');\\n  }\\n}\\n\",\"keccak256\":\"0xfd35771b24c481ab1def0c66b33868ad292159671457ffcb558044203329fd91\",\"license\":\"BUSL-1.1\"},\"@coti-cvi/contracts-il/contracts/interfaces/IBaseController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8;\\n\\ninterface IBaseController {}\\n\",\"keccak256\":\"0x5ce158d7ac4b0911045948ba2e597bc6cf6bcf5ddedd354d878c458dcd993509\",\"license\":\"BUSL-1.1\"},\"@coti-cvi/contracts-il/contracts/interfaces/ILProtectionConfigInterface.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8;\\n\\ninterface ILProtectionConfigInterface {\\n  event MinAmountToBePaidChanged(uint256 prevValue, uint256 newValue);\\n  event MaxILProtectedChanged(uint16 prevValue, uint16 newValue);\\n  event BuyILProtectionEnabledChanged(bool prevValue, bool newValue);\\n  event PolicyPeriodChanged(uint256[] prevValue, uint256[] newValue);\\n  event FeeComponentChanged(uint16 prevValue, uint16 newValue);\\n  event ExpectedLPTokensValueGrowthChanged(uint16 prevValue, uint16 newValue);\\n  event PremiumGrowthStartChanged(uint256 prevValue, uint256 newValue);\\n  event PremiumSlopeChanged(uint256 prevValue, uint256 newValue);\\n\\n  function setMinAmountToBePaid(uint256 _minAmountToBePaid) external;\\n\\n  function setMaxILProtected(uint16 _maxILProtected) external;\\n\\n  function setBuyILProtectionEnabled(bool _isEnabled) external;\\n\\n  function setFeeComponent(uint16 _feeComponent) external;\\n\\n  function setPolicyPeriodsInSeconds(uint256[] calldata _policyPeriods) external;\\n\\n  function setExpectedLPTokensValueGrowth(uint16 _expectedLPTokensValueGrowth) external;\\n\\n  function minAmountToBePaid() external view returns (uint256);\\n\\n  function maxILProtected() external view returns (uint16);\\n\\n  function buyILProtectionEnabled() external view returns (bool);\\n\\n  function feeComponent() external view returns (uint16);\\n\\n  function expectedLPTokensValueGrowth() external view returns (uint16);\\n\\n  function getPolicyPeriodsInSeconds() external view returns (uint256[] memory);\\n\\n  function policyPeriodExists(uint256 _policyPeriod) external view returns (bool);\\n\\n  function premiumGrowthStart() external view returns (uint256);\\n\\n  function premiumSlope() external view returns (uint256);\\n\\n  function setPremiumGrowthStart(uint256 _premiumGrowthStart) external;\\n\\n  function setPremiumSlope(uint256 _premiumSlope) external;\\n}\\n\",\"keccak256\":\"0x8bf31fc12c4cd75164d4acb2ac8c583877739664ead7a247b6d3f92b9d90f00e\",\"license\":\"BUSL-1.1\"},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlUpgradeable.sol\\\";\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../utils/StringsUpgradeable.sol\\\";\\nimport \\\"../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\\n    function __AccessControl_init() internal onlyInitializing {\\n    }\\n\\n    function __AccessControl_init_unchained() internal onlyInitializing {\\n    }\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        StringsUpgradeable.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        StringsUpgradeable.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x5addc7dca2366b164c9befa35da22e9081c44bf6c4c8dce4269be43516f8916e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControlUpgradeable {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary StringsUpgradeable {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611a00806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80638a981d311161010f578063b75f1f7a116100a2578063da25cb0c11610071578063da25cb0c14610417578063edb1192e1461042b578063f078349e14610440578063f2fde38b1461045357600080fd5b8063b75f1f7a146103c9578063c2a4c062146103dc578063c65fe8c9146103f1578063d547741f1461040457600080fd5b8063a0c5d213116100de578063a0c5d2131461039c578063a217fddf146103a5578063a38d0aef146103ad578063ab8461ad146103b657600080fd5b80638a981d31146103515780638da5cb5b1461035a57806391d14854146103755780639852a4361461038857600080fd5b806343ef38ca116101875780636b42e635116101565780636b42e6351461031a578063715018a61461032d57806373f599da14610335578063768da6231461033e57600080fd5b806343ef38ca146102a45780634dce8edc146102cb57806353dad593146102de57806363aa3bd9146102f157600080fd5b80632ecd3ed7116101c35780632ecd3ed7146102565780632f2ff15d1461026b57806336568abe1461027e578063381565cc1461029157600080fd5b806301ffc9a7146101ea578063248a9ca314610212578063263d7bef14610243575b600080fd5b6101fd6101f83660046116df565b610466565b60405190151581526020015b60405180910390f35b61023561022036600461169c565b60009081526097602052604090206001015490565b604051908152602001610209565b61023561025136600461169c565b61049d565b610269610264366004611590565b6104be565b005b6102696102793660046116b4565b6105e0565b61026961028c3660046116b4565b61060a565b61026961029f366004611682565b61068d565b6102357f395fa582270b70c842f7006820e5e47ce23a3ce0b8330eab376042ba75ec062181565b6101fd6102d936600461169c565b610778565b6102696102ec366004611707565b6107dd565b60c95461030790640100000000900461ffff1681565b60405161ffff9091168152602001610209565b610269610328366004611642565b610860565b610269610995565b61030761271081565b61026961034c366004611707565b6109fb565b61023560cc5481565b6033546040516001600160a01b039091168152602001610209565b6101fd6103833660046116b4565b610a97565b60c9546101fd90600160301b900460ff1681565b61023560cd5481565b610235600081565b61023560cb5481565b6102696103c436600461169c565b610ac2565b6102696103d7366004611707565b610b0e565b6103e4610beb565b6040516102099190611796565b6102696103ff36600461169c565b610c43565b6102696104123660046116b4565b610cdf565b60c9546103079062010000900461ffff1681565b60c95461030790600160381b900461ffff1681565b61026961044e36600461169c565b610d04565b610269610461366004611576565b610d50565b60006001600160e01b03198216637965db0b60e01b148061049757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60ca81815481106104ad57600080fd5b600091825260209091200154905081565b60006104ca6001610e1b565b905080156104e2576000805461ff0019166101001790555b6104f0898888888887610ea8565b6104f98b610fdd565b8960cb819055508860c960026101000a81548161ffff021916908361ffff1602179055508760c960066101000a81548160ff0219169083151502179055508660c960076101000a81548161ffff021916908361ffff1602179055508560c960046101000a81548161ffff021916908361ffff160217905550848460ca9190610582929190611493565b5060cc83905560cd82905580156105d3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b6000828152609760205260409020600101546105fb8161101f565b6106058383611029565b505050565b6001600160a01b038116331461067f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61068982826110af565b5050565b610698600033611116565b60c95460ff600160301b909104161515811515141561070e5760405162461bcd60e51b815260206004820152602c60248201527f53657474696e6720627579494c50726f74656374696f6e456e61626c6564207460448201526b6f2073616d652076616c756560a01b6064820152608401610676565b60c95460408051600160301b90920460ff161515825282151560208301527fb42bb941c9ba72c3a5d2b2c882c7efa9c329022c08c52b2727aa9e2765de39a3910160405180910390a160c98054911515600160301b0266ff00000000000019909216919091179055565b6000805b60ca548110156107d45760ca81815481106107a757634e487b7160e01b600052603260045260246000fd5b90600052602060002001548314156107c25750600192915050565b806107cc81611999565b91505061077c565b50600092915050565b6107e8600033611116565b6107f18161117a565b60c9546040805161ffff600160381b9093048316815291831660208301527faaf35f01b18d00cc385e99de36f6a48eb8fd7c856e2c3ba2a06f5a889317f66a910160405180910390a160c9805461ffff909216600160381b0268ffff0000000000000019909216919091179055565b61086b600033611116565b806108b85760405162461bcd60e51b815260206004820152601d60248201527f506f6c69637920706572696f647320617272617920697320656d7074790000006044820152606401610676565b60005b8181101561094c578282828181106108e357634e487b7160e01b600052603260045260246000fd5b905060200201356000141561093a5760405162461bcd60e51b815260206004820152601960248201527f506f6c69637920706572696f642063616e6e6f742062652030000000000000006044820152606401610676565b8061094481611999565b9150506108bb565b507fea39d736dfeffe624e4ffe1cae51c19411fe5e6c5e6d8b4c553909327901c2ea60ca8383604051610981939291906117da565b60405180910390a161060560ca8383611493565b6033546001600160a01b031633146109ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610676565b6109f960006111c8565b565b7f395fa582270b70c842f7006820e5e47ce23a3ce0b8330eab376042ba75ec0621610a258161101f565b610a2e8261117a565b60c9546040805161ffff620100009093048316815291841660208301527fa3e50a4c83b61f479e20e9ce9214defaa4a43ad8e708c49d5a4bf1029bf0506f910160405180910390a15060c9805461ffff909216620100000263ffff000019909216919091179055565b60009182526097602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610acd600033611116565b60cc5460408051918252602082018390527f5a4b6202bf59189579e3a86168399bf735716c5f55bb7ca64ec8fb52135660ba910160405180910390a160cc55565b610b19600033611116565b60008161ffff1611610b7d5760405162461bcd60e51b815260206004820152602760248201527f65787065637465644c50546f6b656e7356616c756547726f777468206d7573746044820152660206265203e20360cc1b6064820152608401610676565b60c9546040805161ffff6401000000009093048316815291831660208301527f555bf0abb935afd62bb6dc27eaa728f6ae832e3a1cd3aa878d8a3b60a6df6f98910160405180910390a160c9805461ffff9092166401000000000265ffff0000000019909216919091179055565b606060ca805480602002602001604051908101604052809291908181526020018280548015610c3957602002820191906000526020600020905b815481526020019060010190808311610c25575b5050505050905090565b610c4e600033611116565b60008111610c9e5760405162461bcd60e51b815260206004820152601860248201527f7072656d69756d536c6f7065206d757374206265203e203000000000000000006044820152606401610676565b60cd5460408051918252602082018390527f2c981277d5a94d3f0d8928ac0a44f351c76574433abb7c9a636f7a816ce23863910160405180910390a160cd55565b600082815260976020526040902060010154610cfa8161101f565b61060583836110af565b610d0f600033611116565b60cb5460408051918252602082018390527f930f80c04343daad58e3ec5ff436acb852b301f62ce68a34d8038f8f411ced4d910160405180910390a160cb55565b6033546001600160a01b03163314610daa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610676565b6001600160a01b038116610e0f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610676565b610e18816111c8565b50565b60008054610100900460ff1615610e62578160ff166001148015610e3e5750303b155b610e5a5760405162461bcd60e51b815260040161067690611882565b506000919050565b60005460ff808416911610610e895760405162461bcd60e51b815260040161067690611882565b506000805460ff191660ff92909216919091179055600190565b919050565b610eb18661117a565b610eba8561117a565b60008461ffff1611610f2a5760405162461bcd60e51b815260206004820152603360248201527f65787065637465644c50546f6b656e7356616c756547726f7774682073686f7560448201527206c64206265206c6172676572207468656e203606c1b6064820152608401610676565b81610f775760405162461bcd60e51b815260206004820152601d60248201527f506f6c69637920706572696f647320617272617920697320656d7074790000006044820152606401610676565b60008111610fd55760405162461bcd60e51b815260206004820152602560248201527f5f7072656d69756d536c6f70652073686f756c64206265206c61726765722074604482015264068656e20360dc1b6064820152608401610676565b505050505050565b600054610100900460ff166110045760405162461bcd60e51b8152600401610676906118d0565b61100c61121a565b611014611249565b610e0f600082611270565b610e188133611116565b6110338282610a97565b6106895760008281526097602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561106b3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6110b98282610a97565b156106895760008281526097602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6111208282610a97565b61068957611138816001600160a01b0316601461127a565b61114383602061127a565b604051602001611154929190611721565b60408051601f198184030181529082905262461bcd60e51b82526106769160040161184f565b61271061ffff82161115610e185760405162461bcd60e51b8152602060048201526015602482015274506172616d206973206f7574206f662072616e676560581b6044820152606401610676565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166112415760405162461bcd60e51b8152600401610676906118d0565b6109f9611463565b600054610100900460ff166109f95760405162461bcd60e51b8152600401610676906118d0565b6106898282611029565b60606000611289836002611933565b61129490600261191b565b67ffffffffffffffff8111156112ba57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156112e4576020820181803683370190505b509050600360fc1b8160008151811061130d57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061134a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061136e846002611933565b61137990600161191b565b90505b600181111561140d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113bb57634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106113df57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361140681611982565b905061137c565b50831561145c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610676565b9392505050565b600054610100900460ff1661148a5760405162461bcd60e51b8152600401610676906118d0565b6109f9336111c8565b8280548282559060005260206000209081019282156114ce579160200282015b828111156114ce5782358255916020019190600101906114b3565b506114da9291506114de565b5090565b5b808211156114da57600081556001016114df565b80356001600160a01b0381168114610ea357600080fd5b60008083601f84011261151b578182fd5b50813567ffffffffffffffff811115611532578182fd5b6020830191508360208260051b850101111561154d57600080fd5b9250929050565b80358015158114610ea357600080fd5b803561ffff81168114610ea357600080fd5b600060208284031215611587578081fd5b61145c826114f3565b6000806000806000806000806000806101208b8d0312156115af578586fd5b6115b88b6114f3565b995060208b013598506115cd60408c01611564565b97506115db60608c01611554565b96506115e960808c01611564565b95506115f760a08c01611564565b945060c08b013567ffffffffffffffff811115611612578485fd5b61161e8d828e0161150a565b9b9e9a9d50989b979a969995989760e0810135966101009091013595509350505050565b60008060208385031215611654578182fd5b823567ffffffffffffffff81111561166a578283fd5b6116768582860161150a565b90969095509350505050565b600060208284031215611693578081fd5b61145c82611554565b6000602082840312156116ad578081fd5b5035919050565b600080604083850312156116c6578182fd5b823591506116d6602084016114f3565b90509250929050565b6000602082840312156116f0578081fd5b81356001600160e01b03198116811461145c578182fd5b600060208284031215611718578081fd5b61145c82611564565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611759816017850160208801611952565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161178a816028840160208801611952565b01602801949350505050565b6020808252825182820181905260009190848201906040850190845b818110156117ce578351835292840192918401916001016117b2565b50909695505050505050565b6000604082016040835280865480835260608501915087845260209250828420845b82811015611818578154845292840192600191820191016117fc565b505050838103828501528481526001600160fb1b03851115611838578283fd5b8460051b8087848401370101908152949350505050565b602081526000825180602084015261186e816040850160208701611952565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000821982111561192e5761192e6119b4565b500190565b600081600019048311821515161561194d5761194d6119b4565b500290565b60005b8381101561196d578181015183820152602001611955565b8381111561197c576000848401525b50505050565b600081611991576119916119b4565b506000190190565b60006000198214156119ad576119ad6119b4565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212203aad182a6d9ab57d52cc2f08bf0cb476469ca5872c4390a48cbb8f0f4fafb5fe64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80638a981d311161010f578063b75f1f7a116100a2578063da25cb0c11610071578063da25cb0c14610417578063edb1192e1461042b578063f078349e14610440578063f2fde38b1461045357600080fd5b8063b75f1f7a146103c9578063c2a4c062146103dc578063c65fe8c9146103f1578063d547741f1461040457600080fd5b8063a0c5d213116100de578063a0c5d2131461039c578063a217fddf146103a5578063a38d0aef146103ad578063ab8461ad146103b657600080fd5b80638a981d31146103515780638da5cb5b1461035a57806391d14854146103755780639852a4361461038857600080fd5b806343ef38ca116101875780636b42e635116101565780636b42e6351461031a578063715018a61461032d57806373f599da14610335578063768da6231461033e57600080fd5b806343ef38ca146102a45780634dce8edc146102cb57806353dad593146102de57806363aa3bd9146102f157600080fd5b80632ecd3ed7116101c35780632ecd3ed7146102565780632f2ff15d1461026b57806336568abe1461027e578063381565cc1461029157600080fd5b806301ffc9a7146101ea578063248a9ca314610212578063263d7bef14610243575b600080fd5b6101fd6101f83660046116df565b610466565b60405190151581526020015b60405180910390f35b61023561022036600461169c565b60009081526097602052604090206001015490565b604051908152602001610209565b61023561025136600461169c565b61049d565b610269610264366004611590565b6104be565b005b6102696102793660046116b4565b6105e0565b61026961028c3660046116b4565b61060a565b61026961029f366004611682565b61068d565b6102357f395fa582270b70c842f7006820e5e47ce23a3ce0b8330eab376042ba75ec062181565b6101fd6102d936600461169c565b610778565b6102696102ec366004611707565b6107dd565b60c95461030790640100000000900461ffff1681565b60405161ffff9091168152602001610209565b610269610328366004611642565b610860565b610269610995565b61030761271081565b61026961034c366004611707565b6109fb565b61023560cc5481565b6033546040516001600160a01b039091168152602001610209565b6101fd6103833660046116b4565b610a97565b60c9546101fd90600160301b900460ff1681565b61023560cd5481565b610235600081565b61023560cb5481565b6102696103c436600461169c565b610ac2565b6102696103d7366004611707565b610b0e565b6103e4610beb565b6040516102099190611796565b6102696103ff36600461169c565b610c43565b6102696104123660046116b4565b610cdf565b60c9546103079062010000900461ffff1681565b60c95461030790600160381b900461ffff1681565b61026961044e36600461169c565b610d04565b610269610461366004611576565b610d50565b60006001600160e01b03198216637965db0b60e01b148061049757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60ca81815481106104ad57600080fd5b600091825260209091200154905081565b60006104ca6001610e1b565b905080156104e2576000805461ff0019166101001790555b6104f0898888888887610ea8565b6104f98b610fdd565b8960cb819055508860c960026101000a81548161ffff021916908361ffff1602179055508760c960066101000a81548160ff0219169083151502179055508660c960076101000a81548161ffff021916908361ffff1602179055508560c960046101000a81548161ffff021916908361ffff160217905550848460ca9190610582929190611493565b5060cc83905560cd82905580156105d3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b6000828152609760205260409020600101546105fb8161101f565b6106058383611029565b505050565b6001600160a01b038116331461067f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61068982826110af565b5050565b610698600033611116565b60c95460ff600160301b909104161515811515141561070e5760405162461bcd60e51b815260206004820152602c60248201527f53657474696e6720627579494c50726f74656374696f6e456e61626c6564207460448201526b6f2073616d652076616c756560a01b6064820152608401610676565b60c95460408051600160301b90920460ff161515825282151560208301527fb42bb941c9ba72c3a5d2b2c882c7efa9c329022c08c52b2727aa9e2765de39a3910160405180910390a160c98054911515600160301b0266ff00000000000019909216919091179055565b6000805b60ca548110156107d45760ca81815481106107a757634e487b7160e01b600052603260045260246000fd5b90600052602060002001548314156107c25750600192915050565b806107cc81611999565b91505061077c565b50600092915050565b6107e8600033611116565b6107f18161117a565b60c9546040805161ffff600160381b9093048316815291831660208301527faaf35f01b18d00cc385e99de36f6a48eb8fd7c856e2c3ba2a06f5a889317f66a910160405180910390a160c9805461ffff909216600160381b0268ffff0000000000000019909216919091179055565b61086b600033611116565b806108b85760405162461bcd60e51b815260206004820152601d60248201527f506f6c69637920706572696f647320617272617920697320656d7074790000006044820152606401610676565b60005b8181101561094c578282828181106108e357634e487b7160e01b600052603260045260246000fd5b905060200201356000141561093a5760405162461bcd60e51b815260206004820152601960248201527f506f6c69637920706572696f642063616e6e6f742062652030000000000000006044820152606401610676565b8061094481611999565b9150506108bb565b507fea39d736dfeffe624e4ffe1cae51c19411fe5e6c5e6d8b4c553909327901c2ea60ca8383604051610981939291906117da565b60405180910390a161060560ca8383611493565b6033546001600160a01b031633146109ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610676565b6109f960006111c8565b565b7f395fa582270b70c842f7006820e5e47ce23a3ce0b8330eab376042ba75ec0621610a258161101f565b610a2e8261117a565b60c9546040805161ffff620100009093048316815291841660208301527fa3e50a4c83b61f479e20e9ce9214defaa4a43ad8e708c49d5a4bf1029bf0506f910160405180910390a15060c9805461ffff909216620100000263ffff000019909216919091179055565b60009182526097602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610acd600033611116565b60cc5460408051918252602082018390527f5a4b6202bf59189579e3a86168399bf735716c5f55bb7ca64ec8fb52135660ba910160405180910390a160cc55565b610b19600033611116565b60008161ffff1611610b7d5760405162461bcd60e51b815260206004820152602760248201527f65787065637465644c50546f6b656e7356616c756547726f777468206d7573746044820152660206265203e20360cc1b6064820152608401610676565b60c9546040805161ffff6401000000009093048316815291831660208301527f555bf0abb935afd62bb6dc27eaa728f6ae832e3a1cd3aa878d8a3b60a6df6f98910160405180910390a160c9805461ffff9092166401000000000265ffff0000000019909216919091179055565b606060ca805480602002602001604051908101604052809291908181526020018280548015610c3957602002820191906000526020600020905b815481526020019060010190808311610c25575b5050505050905090565b610c4e600033611116565b60008111610c9e5760405162461bcd60e51b815260206004820152601860248201527f7072656d69756d536c6f7065206d757374206265203e203000000000000000006044820152606401610676565b60cd5460408051918252602082018390527f2c981277d5a94d3f0d8928ac0a44f351c76574433abb7c9a636f7a816ce23863910160405180910390a160cd55565b600082815260976020526040902060010154610cfa8161101f565b61060583836110af565b610d0f600033611116565b60cb5460408051918252602082018390527f930f80c04343daad58e3ec5ff436acb852b301f62ce68a34d8038f8f411ced4d910160405180910390a160cb55565b6033546001600160a01b03163314610daa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610676565b6001600160a01b038116610e0f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610676565b610e18816111c8565b50565b60008054610100900460ff1615610e62578160ff166001148015610e3e5750303b155b610e5a5760405162461bcd60e51b815260040161067690611882565b506000919050565b60005460ff808416911610610e895760405162461bcd60e51b815260040161067690611882565b506000805460ff191660ff92909216919091179055600190565b919050565b610eb18661117a565b610eba8561117a565b60008461ffff1611610f2a5760405162461bcd60e51b815260206004820152603360248201527f65787065637465644c50546f6b656e7356616c756547726f7774682073686f7560448201527206c64206265206c6172676572207468656e203606c1b6064820152608401610676565b81610f775760405162461bcd60e51b815260206004820152601d60248201527f506f6c69637920706572696f647320617272617920697320656d7074790000006044820152606401610676565b60008111610fd55760405162461bcd60e51b815260206004820152602560248201527f5f7072656d69756d536c6f70652073686f756c64206265206c61726765722074604482015264068656e20360dc1b6064820152608401610676565b505050505050565b600054610100900460ff166110045760405162461bcd60e51b8152600401610676906118d0565b61100c61121a565b611014611249565b610e0f600082611270565b610e188133611116565b6110338282610a97565b6106895760008281526097602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561106b3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6110b98282610a97565b156106895760008281526097602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6111208282610a97565b61068957611138816001600160a01b0316601461127a565b61114383602061127a565b604051602001611154929190611721565b60408051601f198184030181529082905262461bcd60e51b82526106769160040161184f565b61271061ffff82161115610e185760405162461bcd60e51b8152602060048201526015602482015274506172616d206973206f7574206f662072616e676560581b6044820152606401610676565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166112415760405162461bcd60e51b8152600401610676906118d0565b6109f9611463565b600054610100900460ff166109f95760405162461bcd60e51b8152600401610676906118d0565b6106898282611029565b60606000611289836002611933565b61129490600261191b565b67ffffffffffffffff8111156112ba57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156112e4576020820181803683370190505b509050600360fc1b8160008151811061130d57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061134a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061136e846002611933565b61137990600161191b565b90505b600181111561140d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113bb57634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106113df57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361140681611982565b905061137c565b50831561145c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610676565b9392505050565b600054610100900460ff1661148a5760405162461bcd60e51b8152600401610676906118d0565b6109f9336111c8565b8280548282559060005260206000209081019282156114ce579160200282015b828111156114ce5782358255916020019190600101906114b3565b506114da9291506114de565b5090565b5b808211156114da57600081556001016114df565b80356001600160a01b0381168114610ea357600080fd5b60008083601f84011261151b578182fd5b50813567ffffffffffffffff811115611532578182fd5b6020830191508360208260051b850101111561154d57600080fd5b9250929050565b80358015158114610ea357600080fd5b803561ffff81168114610ea357600080fd5b600060208284031215611587578081fd5b61145c826114f3565b6000806000806000806000806000806101208b8d0312156115af578586fd5b6115b88b6114f3565b995060208b013598506115cd60408c01611564565b97506115db60608c01611554565b96506115e960808c01611564565b95506115f760a08c01611564565b945060c08b013567ffffffffffffffff811115611612578485fd5b61161e8d828e0161150a565b9b9e9a9d50989b979a969995989760e0810135966101009091013595509350505050565b60008060208385031215611654578182fd5b823567ffffffffffffffff81111561166a578283fd5b6116768582860161150a565b90969095509350505050565b600060208284031215611693578081fd5b61145c82611554565b6000602082840312156116ad578081fd5b5035919050565b600080604083850312156116c6578182fd5b823591506116d6602084016114f3565b90509250929050565b6000602082840312156116f0578081fd5b81356001600160e01b03198116811461145c578182fd5b600060208284031215611718578081fd5b61145c82611564565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611759816017850160208801611952565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161178a816028840160208801611952565b01602801949350505050565b6020808252825182820181905260009190848201906040850190845b818110156117ce578351835292840192918401916001016117b2565b50909695505050505050565b6000604082016040835280865480835260608501915087845260209250828420845b82811015611818578154845292840192600191820191016117fc565b505050838103828501528481526001600160fb1b03851115611838578283fd5b8460051b8087848401370101908152949350505050565b602081526000825180602084015261186e816040850160208701611952565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000821982111561192e5761192e6119b4565b500190565b600081600019048311821515161561194d5761194d6119b4565b500290565b60005b8381101561196d578181015183820152602001611955565b8381111561197c576000848401525b50505050565b600081611991576119916119b4565b506000190190565b60006000198214156119ad576119ad6119b4565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212203aad182a6d9ab57d52cc2f08bf0cb476469ca5872c4390a48cbb8f0f4fafb5fe64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 29805,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 29808,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 32662,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 29685,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 29797,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 32909,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "__gap",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 29301,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "_roles",
        "offset": 0,
        "slot": "151",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)29296_storage)"
      },
      {
        "astId": 29600,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 23310,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "unused_1",
        "offset": 0,
        "slot": "201",
        "type": "t_uint16"
      },
      {
        "astId": 23313,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "maxILProtected",
        "offset": 2,
        "slot": "201",
        "type": "t_uint16"
      },
      {
        "astId": 23316,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "expectedLPTokensValueGrowth",
        "offset": 4,
        "slot": "201",
        "type": "t_uint16"
      },
      {
        "astId": 23319,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "buyILProtectionEnabled",
        "offset": 6,
        "slot": "201",
        "type": "t_bool"
      },
      {
        "astId": 23322,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "feeComponent",
        "offset": 7,
        "slot": "201",
        "type": "t_uint16"
      },
      {
        "astId": 23325,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "policyPeriods",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 23328,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "minAmountToBePaid",
        "offset": 0,
        "slot": "203",
        "type": "t_uint256"
      },
      {
        "astId": 23331,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "premiumGrowthStart",
        "offset": 0,
        "slot": "204",
        "type": "t_uint256"
      },
      {
        "astId": 23334,
        "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
        "label": "premiumSlope",
        "offset": 0,
        "slot": "205",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)29296_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)29296_storage"
      },
      "t_struct(RoleData)29296_storage": {
        "encoding": "inplace",
        "label": "struct AccessControlUpgradeable.RoleData",
        "members": [
          {
            "astId": 29293,
            "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 29295,
            "contract": "@coti-cvi/contracts-il/contracts/ILProtectionConfig.sol:ILProtectionConfig",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}
{
  "address": "0x649813B6dc6111D67484BaDeDd377D32e4505F85",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "_cviAggregator",
          "type": "address"
        },
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "_cviDeviationAggregator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxCVIValue",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_leverage",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "cviAggregator",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cviDeviationAggregator",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deviationCheck",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCVILatestRoundData",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "cviValue",
          "type": "uint32"
        },
        {
          "internalType": "uint80",
          "name": "cviRoundId",
          "type": "uint80"
        },
        {
          "internalType": "uint256",
          "name": "cviTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        }
      ],
      "name": "getCVIRoundData",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "cviValue",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "cviTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "leverage",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCVIValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxDeviation",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_newDeviationCheck",
          "type": "bool"
        }
      ],
      "name": "setDeviationCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_newMaxDeviation",
          "type": "uint16"
        }
      ],
      "name": "setMaxDeviation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd112e8823a7455ef9e73d2d8d9cf3b8fffe0aa3093e28b9b4ac56f89202678de",
  "receipt": {
    "to": null,
    "from": "0x0b3D7b3F149214f8f5281b5aE613B090fD39BD3F",
    "contractAddress": "0x649813B6dc6111D67484BaDeDd377D32e4505F85",
    "transactionIndex": 1,
    "gasUsed": "3850311",
    "logsBloom": "0x
    "blockHash": "0x6bc69e988bc16cb94010ef24d7af261b4fbd244d6f90b50695f55130ef98c322",
    "transactionHash": "0xd112e8823a7455ef9e73d2d8d9cf3b8fffe0aa3093e28b9b4ac56f89202678de",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 29537783,
        "transactionHash": "0xd112e8823a7455ef9e73d2d8d9cf3b8fffe0aa3093e28b9b4ac56f89202678de",
        "address": "0x649813B6dc6111D67484BaDeDd377D32e4505F85",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000b3d7b3f149214f8f5281b5ae613b090fd39bd3f"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x6bc69e988bc16cb94010ef24d7af261b4fbd244d6f90b50695f55130ef98c322"
      }
    ],
    "blockNumber": 29537783,
    "cumulativeGasUsed": "3850311",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xbcD8bEA7831f392bb019ef3a672CC15866004536",
    "0xbcD8bEA7831f392bb019ef3a672CC15866004536",
    "200000000000000000000",
    1
  ],
  "numDeployments": 1,
  "solcInputHash": "8d836039a3333aa7ff1a69dee5a5f235",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_cviAggregator\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_cviDeviationAggregator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxCVIValue\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_leverage\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cviAggregator\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cviDeviationAggregator\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deviationCheck\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCVILatestRoundData\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"cviValue\",\"type\":\"uint32\"},{\"internalType\":\"uint80\",\"name\":\"cviRoundId\",\"type\":\"uint80\"},{\"internalType\":\"uint256\",\"name\":\"cviTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getCVIRoundData\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"cviValue\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"cviTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leverage\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCVIValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDeviation\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_newDeviationCheck\",\"type\":\"bool\"}],\"name\":\"setDeviationCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newMaxDeviation\",\"type\":\"uint16\"}],\"name\":\"setMaxDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@coti-cvi/contracts-cvi/contracts/CVIOracle.sol\":\"CVIOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@coti-cvi/contracts-cvi/contracts/CVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\nimport \\\"./interfaces/ICVIOracle.sol\\\";\\nimport \\\"./interfaces/AggregatorV3Interface.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract CVIOracle is ICVIOracle, Ownable {\\n\\n    uint256 private constant PRECISION_DECIMALS = 10000;\\n    uint256 private constant CVI_DECIMALS_TRUNCATE = 1e16;\\n\\n    AggregatorV3Interface public immutable cviAggregator;\\n    AggregatorV3Interface public cviDeviationAggregator;\\n    bool public deviationCheck = false;\\n    uint16 public maxDeviation = 1000;\\n\\n    uint8 public leverage;\\n    uint256 public maxCVIValue;\\n\\n    constructor(AggregatorV3Interface _cviAggregator, AggregatorV3Interface _cviDeviationAggregator, uint256 _maxCVIValue, uint8 _leverage) {\\n    \\tcviAggregator = _cviAggregator;\\n        cviDeviationAggregator = _cviDeviationAggregator;\\n        maxCVIValue = _maxCVIValue;\\n        leverage = _leverage;\\n    }\\n\\n    function getCVIRoundData(uint80 _roundId) external view override returns (uint32 cviValue, uint256 cviTimestamp) {\\n        (, int256 cviOracleValue,, uint256 cviOracleTimestamp,) = cviAggregator.getRoundData(_roundId);\\n        cviTimestamp = cviOracleTimestamp;\\n        cviValue = getTruncatedCVIValue(cviOracleValue);\\n    }\\n\\n    function getCVILatestRoundData() external view override returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp) {\\n        (uint80 oracleRoundId, int256 cviOracleValue,, uint256 oracleTimestamp,) = cviAggregator.latestRoundData();\\n        uint32 truncatedCVIOracleValue = getTruncatedCVIValue(cviOracleValue);\\n\\n        if (deviationCheck) {\\n            (, int256 cviDeviationOracleValue,,,) = cviDeviationAggregator.latestRoundData();\\n            uint32 truncatedCVIDeviationOracleValue = getTruncatedCVIValue(cviDeviationOracleValue);\\n\\n            uint256 deviation = truncatedCVIDeviationOracleValue > truncatedCVIOracleValue ? truncatedCVIDeviationOracleValue - truncatedCVIOracleValue : truncatedCVIOracleValue - truncatedCVIDeviationOracleValue;\\n\\n            require(deviation * PRECISION_DECIMALS / truncatedCVIDeviationOracleValue <= maxDeviation, \\\"Deviation too large\\\");\\n        }\\n\\n        return (truncatedCVIOracleValue, oracleRoundId, oracleTimestamp);\\n    }\\n\\n    function setDeviationCheck(bool _newDeviationCheck) external override onlyOwner {\\n        deviationCheck = _newDeviationCheck;\\n    }\\n\\n    function setMaxDeviation(uint16 _newMaxDeviation) external override onlyOwner {\\n        maxDeviation = _newMaxDeviation;\\n    }\\n\\n    function getTruncatedCVIValue(int256 cviOracleValue) private view returns (uint32) {\\n        uint256 cviValue = uint256(cviOracleValue) * leverage;\\n        if (cviValue > maxCVIValue) {\\n            require(uint32(maxCVIValue / CVI_DECIMALS_TRUNCATE) > 0, \\\"CVI must be positive\\\");\\n            return uint32(maxCVIValue / CVI_DECIMALS_TRUNCATE);\\n        }\\n\\n        require(uint32(cviValue / CVI_DECIMALS_TRUNCATE) > 0, \\\"CVI must be positive\\\");\\n        return uint32(cviValue / CVI_DECIMALS_TRUNCATE);\\n    }\\n}\\n\",\"keccak256\":\"0x644d944ded7fda97dbe06fa29a24905be3d443d70aecc3abe30755740f0870dd\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface AggregatorV3Interface {\\n\\n    function decimals() external view returns (uint8);\\n    function description() external view returns (string memory);\\n    function version() external view returns (uint256);\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0xced5b5caed5589268ef29bffb270ce32e3d5611a80cb0a67755276a1a5c82669\",\"license\":\"GPL-3.0\"},\"@coti-cvi/contracts-cvi/contracts/interfaces/ICVIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8;\\n\\ninterface ICVIOracle {\\n    function getCVIRoundData(uint80 roundId) external view returns (uint32 cviValue, uint256 cviTimestamp);\\n    function getCVILatestRoundData() external view returns (uint32 cviValue, uint80 cviRoundId, uint256 cviTimestamp);\\n\\n    function setDeviationCheck(bool newDeviationCheck) external;\\n    function setMaxDeviation(uint16 newMaxDeviation) external;\\n}\\n\",\"keccak256\":\"0xf1871b2e9219f7a11e63d8e3276b7a0a46d8d726d54e385a6326dbdb2bcb1bad\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526001805462ffffff60a01b1916607d60ab1b17905534801561002557600080fd5b50604051610b69380380610b698339810160408190526100449161010b565b61004d3361009f565b6001600160601b031960609490941b939093166080526001805460029290925560ff909316600160b81b02600163ff00000160a01b03199091166001600160a01b03929092169190911717905561015e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461010657600080fd5b919050565b60008060008060808587031215610120578384fd5b610129856100ef565b9350610137602086016100ef565b925060408501519150606085015160ff81168114610153578182fd5b939692955090935050565b60805160601c6109df61018a600039600081816101fc0152818161029a01526103c201526109df6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063c1639a2b1161008c578063e0530f4211610066578063e0530f42146101f7578063e34a05d31461021e578063f2fde38b14610231578063fe1e33651461024457600080fd5b8063c1639a2b14610198578063d934c20b146101cd578063de40c5ae146101e457600080fd5b80632a1bab73146100d45780632c86d98e146101015780635a7b84b114610127578063715018a6146101565780638da5cb5b14610160578063986f396b14610185575b600080fd5b6001546100e990600160a81b900461ffff1681565b60405161ffff90911681526020015b60405180910390f35b60015461011590600160b81b900460ff1681565b60405160ff90911681526020016100f8565b61013a61013536600461086f565b610268565b6040805163ffffffff90931683526020830191909152016100f8565b61015e610330565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100f8565b61015e61019336600461082d565b61036f565b6101a06103b7565b6040805163ffffffff909416845269ffffffffffffffffffff9092166020840152908201526060016100f8565b6101d660025481565b6040519081526020016100f8565b60015461016d906001600160a01b031681565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b61015e61022c36600461084d565b6105bc565b61015e61023f366004610806565b610608565b60015461025890600160a01b900460ff1681565b60405190151581526020016100f8565b604051639a6fc8f560e01b815269ffffffffffffffffffff821660048201526000908190819081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639a6fc8f59060240160a06040518083038186803b1580156102dc57600080fd5b505afa1580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610314919061088b565b50935050925050809250610327826106a3565b93505050915091565b6000546001600160a01b031633146103635760405162461bcd60e51b815260040161035a906108e2565b60405180910390fd5b61036d60006107b6565b565b6000546001600160a01b031633146103995760405162461bcd60e51b815260040161035a906108e2565b60018054911515600160a01b0260ff60a01b19909216919091179055565b6000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561041957600080fd5b505afa15801561042d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610451919061088b565b50935050925092506000610464836106a3565b600154909150600160a01b900460ff16156105b05760015460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a0929190829003018186803b1580156104be57600080fd5b505afa1580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f6919061088b565b5050509150506000610507826106a3565b905060008363ffffffff168263ffffffff161161052d576105288285610956565b610537565b6105378483610956565b60015463ffffffff9182169250600160a81b900461ffff1690831661055e61271084610937565b6105689190610917565b11156105ac5760405162461bcd60e51b8152602060048201526013602482015272446576696174696f6e20746f6f206c6172676560681b604482015260640161035a565b5050505b96929550935090915050565b6000546001600160a01b031633146105e65760405162461bcd60e51b815260040161035a906108e2565b6001805461ffff909216600160a81b0261ffff60a81b19909216919091179055565b6000546001600160a01b031633146106325760405162461bcd60e51b815260040161035a906108e2565b6001600160a01b0381166106975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035a565b6106a0816107b6565b50565b60015460009081906106bf90600160b81b900460ff1684610937565b9050600254811115610748576000662386f26fc100006002546106e29190610917565b63ffffffff161161072c5760405162461bcd60e51b8152602060048201526014602482015273435649206d75737420626520706f73697469766560601b604482015260640161035a565b662386f26fc100006002546107419190610917565b9392505050565b600061075b662386f26fc1000083610917565b63ffffffff16116107a55760405162461bcd60e51b8152602060048201526014602482015273435649206d75737420626520706f73697469766560601b604482015260640161035a565b610741662386f26fc1000082610917565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610817578081fd5b81356001600160a01b0381168114610741578182fd5b60006020828403121561083e578081fd5b81358015158114610741578182fd5b60006020828403121561085e578081fd5b813561ffff81168114610741578182fd5b600060208284031215610880578081fd5b813561074181610991565b600080600080600060a086880312156108a2578081fd5b85516108ad81610991565b8095505060208601519350604086015192506060860151915060808601516108d481610991565b809150509295509295909350565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008261093257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156109515761095161097b565b500290565b600063ffffffff838116908316818110156109735761097361097b565b039392505050565b634e487b7160e01b600052601160045260246000fd5b69ffffffffffffffffffff811681146106a057600080fdfea26469706673582212208a5bb5d56c1d824a33195c90f64584aa74c1a16f7b08f934f2ff4f163b56220664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063c1639a2b1161008c578063e0530f4211610066578063e0530f42146101f7578063e34a05d31461021e578063f2fde38b14610231578063fe1e33651461024457600080fd5b8063c1639a2b14610198578063d934c20b146101cd578063de40c5ae146101e457600080fd5b80632a1bab73146100d45780632c86d98e146101015780635a7b84b114610127578063715018a6146101565780638da5cb5b14610160578063986f396b14610185575b600080fd5b6001546100e990600160a81b900461ffff1681565b60405161ffff90911681526020015b60405180910390f35b60015461011590600160b81b900460ff1681565b60405160ff90911681526020016100f8565b61013a61013536600461086f565b610268565b6040805163ffffffff90931683526020830191909152016100f8565b61015e610330565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100f8565b61015e61019336600461082d565b61036f565b6101a06103b7565b6040805163ffffffff909416845269ffffffffffffffffffff9092166020840152908201526060016100f8565b6101d660025481565b6040519081526020016100f8565b60015461016d906001600160a01b031681565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b61015e61022c36600461084d565b6105bc565b61015e61023f366004610806565b610608565b60015461025890600160a01b900460ff1681565b60405190151581526020016100f8565b604051639a6fc8f560e01b815269ffffffffffffffffffff821660048201526000908190819081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639a6fc8f59060240160a06040518083038186803b1580156102dc57600080fd5b505afa1580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610314919061088b565b50935050925050809250610327826106a3565b93505050915091565b6000546001600160a01b031633146103635760405162461bcd60e51b815260040161035a906108e2565b60405180910390fd5b61036d60006107b6565b565b6000546001600160a01b031633146103995760405162461bcd60e51b815260040161035a906108e2565b60018054911515600160a01b0260ff60a01b19909216919091179055565b6000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561041957600080fd5b505afa15801561042d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610451919061088b565b50935050925092506000610464836106a3565b600154909150600160a01b900460ff16156105b05760015460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a0929190829003018186803b1580156104be57600080fd5b505afa1580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f6919061088b565b5050509150506000610507826106a3565b905060008363ffffffff168263ffffffff161161052d576105288285610956565b610537565b6105378483610956565b60015463ffffffff9182169250600160a81b900461ffff1690831661055e61271084610937565b6105689190610917565b11156105ac5760405162461bcd60e51b8152602060048201526013602482015272446576696174696f6e20746f6f206c6172676560681b604482015260640161035a565b5050505b96929550935090915050565b6000546001600160a01b031633146105e65760405162461bcd60e51b815260040161035a906108e2565b6001805461ffff909216600160a81b0261ffff60a81b19909216919091179055565b6000546001600160a01b031633146106325760405162461bcd60e51b815260040161035a906108e2565b6001600160a01b0381166106975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035a565b6106a0816107b6565b50565b60015460009081906106bf90600160b81b900460ff1684610937565b9050600254811115610748576000662386f26fc100006002546106e29190610917565b63ffffffff161161072c5760405162461bcd60e51b8152602060048201526014602482015273435649206d75737420626520706f73697469766560601b604482015260640161035a565b662386f26fc100006002546107419190610917565b9392505050565b600061075b662386f26fc1000083610917565b63ffffffff16116107a55760405162461bcd60e51b8152602060048201526014602482015273435649206d75737420626520706f73697469766560601b604482015260640161035a565b610741662386f26fc1000082610917565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610817578081fd5b81356001600160a01b0381168114610741578182fd5b60006020828403121561083e578081fd5b81358015158114610741578182fd5b60006020828403121561085e578081fd5b813561ffff81168114610741578182fd5b600060208284031215610880578081fd5b813561074181610991565b600080600080600060a086880312156108a2578081fd5b85516108ad81610991565b8095505060208601519350604086015192506060860151915060808601516108d481610991565b809150509295509295909350565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008261093257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156109515761095161097b565b500290565b600063ffffffff838116908316818110156109735761097361097b565b039392505050565b634e487b7160e01b600052601160045260246000fd5b69ffffffffffffffffffff811681146106a057600080fdfea26469706673582212208a5bb5d56c1d824a33195c90f64584aa74c1a16f7b08f934f2ff4f163b56220664736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 37156,
        "contract": "@coti-cvi/contracts-cvi/contracts/CVIOracle.sol:CVIOracle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 78,
        "contract": "@coti-cvi/contracts-cvi/contracts/CVIOracle.sol:CVIOracle",
        "label": "cviDeviationAggregator",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)16465"
      },
      {
        "astId": 81,
        "contract": "@coti-cvi/contracts-cvi/contracts/CVIOracle.sol:CVIOracle",
        "label": "deviationCheck",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 84,
        "contract": "@coti-cvi/contracts-cvi/contracts/CVIOracle.sol:CVIOracle",
        "label": "maxDeviation",
        "offset": 21,
        "slot": "1",
        "type": "t_uint16"
      },
      {
        "astId": 86,
        "contract": "@coti-cvi/contracts-cvi/contracts/CVIOracle.sol:CVIOracle",
        "label": "leverage",
        "offset": 23,
        "slot": "1",
        "type": "t_uint8"
      },
      {
        "astId": 88,
        "contract": "@coti-cvi/contracts-cvi/contracts/CVIOracle.sol:CVIOracle",
        "label": "maxCVIValue",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)16465": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}